<?php
/**
 * Site
 *
 * PHP version 5
 *
 * @category Class
 * @package  Emonsite
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * API E-monsite
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: alpha
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Emonsite\Models;

use \ArrayAccess;
use \Emonsite\ObjectSerializer;

/**
 * Site Class Doc Comment
 *
 * @category Class
 * @package  Emonsite
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Site implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Site';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
'url' => 'string',
'disabled' => 'bool',
'site_suspend' => 'bool',
'site_deleted' => 'bool',
'site_deletion_dt' => 'int',
'site_deletion_ip' => 'string',
'site_deletion_reason' => 'string',
'site_deletion_user_id' => 'string',
'manager_suspend' => 'bool',
'reason_suspend' => 'string',
'default_lang' => 'string',
'show_layout_flags' => 'bool',
'show_i18n_links' => 'bool',
'timezone' => 'string',
'brand_id' => 'string',
'domain_id' => 'string',
'sitename' => 'string',
'host' => 'string',
'paypal_id' => 'string',
'paypal_cmd' => 'string',
'paypal_insertcart' => 'bool',
'paypal_currency_code' => 'string',
'paypal_undefined_quantity' => 'bool',
'mailformat' => 'string',
'messagemoderation' => 'string',
'avatar' => 'string',
'avatar_storage_server_id' => 'string',
'adsense_code' => 'string',
'adsense_show_top' => 'bool',
'adsense_show_col' => 'bool',
'analytics_code' => 'string',
'analytics_measure_id' => 'string',
'google_ads_id' => 'string',
'google_tag_manager_id' => 'string',
'blacklisted_words' => 'string',
'blacklisted_ip' => 'string',
'blacklisted_domains' => 'string',
'logo' => 'AnyOfSiteLogo',
'akismet_api_key' => 'string',
'no_captcha' => 'bool',
'iconcaptcha' => 'bool',
'publicthemevariationpreview_id' => 'string',
'customthemevariationpreview_id' => 'string',
'splashscreen_active' => 'bool',
'splashscreen_location' => '',
'splashscreen_testmode' => 'bool',
'zone_meta' => 'string',
'zone_css' => 'string',
'zone_js' => 'string',
'hide_dashboard_welcome_box' => 'bool',
'dashboard_message' => 'string',
'slidshow_options' => 'string[]',
'favicon' => 'AnyOfSiteFavicon',
'homepage_module_id' => 'string',
'preview_token' => 'string',
'searchindex_dt' => 'int',
'robots_auto' => 'bool',
'robots' => 'string',
'filesizequota_used' => 'int',
'used_storage_quota' => 'int',
'email' => 'string',
'email_sender_name' => 'string',
'activity' => 'string',
'theme_version' => 'int',
'shortcut_icon' => 'AnyOfSiteShortcutIcon',
'sitemap_auto' => 'bool',
'google_webmaster_meta' => 'string',
'bing_webmaster_meta' => 'string',
'search_console_meta' => 'string',
'begin_tab_closed' => 'bool',
'scheme' => 'string',
'google_maps_api_key' => 'string',
'recaptcha2' => 'bool',
'recaptcha2_site_key' => 'string',
'recaptcha2_secret_key' => 'string',
'paypal2_merchantid' => 'string',
'paypal2_merchantidinpaypal' => 'string',
'paypal2_email' => 'string',
'paypal2_returnmessage' => 'string',
'paypal2_valid' => 'bool',
'paypal2_paymentexperience' => 'string',
'social_networks' => 'string[]',
'ads_auto' => 'bool',
'ads' => 'string',
'googlefont' => 'string',
'token_instagram' => 'string',
'token_instagram_expire_dt' => 'int',
'instagram_token' => 'string',
'instagramtoken_expiration_dt' => 'int',
'instagram_token_expired' => 'bool',
'nb_days_before_instagram_token_expire' => 'int',
'storage_folders' => '\Emonsite\Models\StorageFolder[]',
'storage_folder' => '\Emonsite\Models\StorageFolder[]',
'site_langs' => '\Emonsite\Models\SiteLang[]',
'default_site_lang' => '\Emonsite\Models\SiteLang',
'active_site_langs' => 'string[]',
'lang' => 'string[]',
'custom_theme_variations' => '\Emonsite\Models\CustomThemeVariation[]',
'custom_theme_variation' => '\Emonsite\Models\CustomThemeVariation',
'modules' => 'string[]',
'module' => 'string[]',
'wuro_enabled' => 'bool',
'wuro_api_end_point' => 'string',
'wuro_app_id' => 'string',
'wuro_app_secret' => 'string',
'captcha' => 'string',
'eco_config' => 'AnyOfSiteEcoConfig',
'config_lp' => 'AnyOfSiteConfigLp',
'eco_advices_config' => 'AnyOfSiteEcoAdvicesConfig',
'eco_store_delivery' => 'AnyOfSiteEcoStoreDelivery',
'hcaptcha_site_key' => 'string',
'hcaptcha_secret_key' => 'string',
'eco_orders' => 'string[]',
'eco_collection_points' => 'string[]',
'carriers' => 'string[]',
'cel_soft_deletion' => '\Emonsite\Models\Site',
'webhooks' => '\Emonsite\Models\Webhook[]',
'nb_days_since_creation' => 'int',
'structures_payment' => '\Emonsite\Models\StructurePayment[]',
'editable_zones_bottom_site_block' => 'AnyOfSiteEditableZonesBottomSiteBlock',
'member_options' => 'AnyOfSiteMemberOptions',
'legal' => 'AnyOfSiteLegal',
'in_store_pick_up_points' => '',
'structure_widgets' => '\Emonsite\Models\StructureWidgets[]',
'default_menu_h_widget' => 'AnyOfSiteDefaultMenuHWidget',
'structures' => '\Emonsite\Models\Structure[]',
'not_found_page_block' => 'AnyOfSiteNotFoundPageBlock',
'browser_extension_enabled' => 'bool',
'edirectory_order_options' => 'AnyOfSiteEdirectoryOrderOptions',
'add_dt' => 'int',
'upd_dt' => 'int',
'created_at' => '\DateTime',
'updated_at' => '\DateTime',
'add_user_id' => 'string',
'upd_user_id' => 'string',
'versions' => '\Emonsite\Models\SiteV[]',
'version' => '\Emonsite\Models\VersionInterface[]',
'version_by_lang' => 'string[]'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
'url' => null,
'disabled' => null,
'site_suspend' => null,
'site_deleted' => null,
'site_deletion_dt' => null,
'site_deletion_ip' => null,
'site_deletion_reason' => null,
'site_deletion_user_id' => null,
'manager_suspend' => null,
'reason_suspend' => null,
'default_lang' => null,
'show_layout_flags' => null,
'show_i18n_links' => null,
'timezone' => null,
'brand_id' => null,
'domain_id' => null,
'sitename' => null,
'host' => null,
'paypal_id' => null,
'paypal_cmd' => null,
'paypal_insertcart' => null,
'paypal_currency_code' => null,
'paypal_undefined_quantity' => null,
'mailformat' => null,
'messagemoderation' => null,
'avatar' => null,
'avatar_storage_server_id' => null,
'adsense_code' => null,
'adsense_show_top' => null,
'adsense_show_col' => null,
'analytics_code' => null,
'analytics_measure_id' => null,
'google_ads_id' => null,
'google_tag_manager_id' => null,
'blacklisted_words' => null,
'blacklisted_ip' => null,
'blacklisted_domains' => null,
'logo' => null,
'akismet_api_key' => null,
'no_captcha' => null,
'iconcaptcha' => null,
'publicthemevariationpreview_id' => null,
'customthemevariationpreview_id' => null,
'splashscreen_active' => null,
'splashscreen_location' => null,
'splashscreen_testmode' => null,
'zone_meta' => null,
'zone_css' => null,
'zone_js' => null,
'hide_dashboard_welcome_box' => null,
'dashboard_message' => null,
'slidshow_options' => null,
'favicon' => null,
'homepage_module_id' => null,
'preview_token' => null,
'searchindex_dt' => null,
'robots_auto' => null,
'robots' => null,
'filesizequota_used' => null,
'used_storage_quota' => null,
'email' => null,
'email_sender_name' => null,
'activity' => null,
'theme_version' => null,
'shortcut_icon' => null,
'sitemap_auto' => null,
'google_webmaster_meta' => null,
'bing_webmaster_meta' => null,
'search_console_meta' => null,
'begin_tab_closed' => null,
'scheme' => null,
'google_maps_api_key' => null,
'recaptcha2' => null,
'recaptcha2_site_key' => null,
'recaptcha2_secret_key' => null,
'paypal2_merchantid' => null,
'paypal2_merchantidinpaypal' => null,
'paypal2_email' => null,
'paypal2_returnmessage' => null,
'paypal2_valid' => null,
'paypal2_paymentexperience' => null,
'social_networks' => null,
'ads_auto' => null,
'ads' => null,
'googlefont' => null,
'token_instagram' => null,
'token_instagram_expire_dt' => null,
'instagram_token' => null,
'instagramtoken_expiration_dt' => null,
'instagram_token_expired' => null,
'nb_days_before_instagram_token_expire' => null,
'storage_folders' => null,
'storage_folder' => null,
'site_langs' => null,
'default_site_lang' => null,
'active_site_langs' => null,
'lang' => null,
'custom_theme_variations' => null,
'custom_theme_variation' => null,
'modules' => 'iri-reference',
'module' => 'iri-reference',
'wuro_enabled' => null,
'wuro_api_end_point' => null,
'wuro_app_id' => null,
'wuro_app_secret' => null,
'captcha' => null,
'eco_config' => null,
'config_lp' => null,
'eco_advices_config' => null,
'eco_store_delivery' => null,
'hcaptcha_site_key' => null,
'hcaptcha_secret_key' => null,
'eco_orders' => 'iri-reference',
'eco_collection_points' => 'iri-reference',
'carriers' => 'iri-reference',
'cel_soft_deletion' => null,
'webhooks' => null,
'nb_days_since_creation' => null,
'structures_payment' => null,
'editable_zones_bottom_site_block' => null,
'member_options' => null,
'legal' => null,
'in_store_pick_up_points' => null,
'structure_widgets' => null,
'default_menu_h_widget' => null,
'structures' => null,
'not_found_page_block' => null,
'browser_extension_enabled' => null,
'edirectory_order_options' => null,
'add_dt' => null,
'upd_dt' => null,
'created_at' => 'date-time',
'updated_at' => 'date-time',
'add_user_id' => null,
'upd_user_id' => null,
'versions' => null,
'version' => null,
'version_by_lang' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
'url' => 'url',
'disabled' => 'disabled',
'site_suspend' => 'siteSuspend',
'site_deleted' => 'siteDeleted',
'site_deletion_dt' => 'siteDeletionDt',
'site_deletion_ip' => 'siteDeletionIp',
'site_deletion_reason' => 'siteDeletionReason',
'site_deletion_user_id' => 'siteDeletionUserId',
'manager_suspend' => 'managerSuspend',
'reason_suspend' => 'reasonSuspend',
'default_lang' => 'defaultLang',
'show_layout_flags' => 'showLayoutFlags',
'show_i18n_links' => 'showI18nLinks',
'timezone' => 'timezone',
'brand_id' => 'brandId',
'domain_id' => 'domainId',
'sitename' => 'sitename',
'host' => 'host',
'paypal_id' => 'paypalId',
'paypal_cmd' => 'paypalCmd',
'paypal_insertcart' => 'paypalInsertcart',
'paypal_currency_code' => 'paypalCurrencyCode',
'paypal_undefined_quantity' => 'paypalUndefinedQuantity',
'mailformat' => 'mailformat',
'messagemoderation' => 'messagemoderation',
'avatar' => 'avatar',
'avatar_storage_server_id' => 'avatarStorageServerId',
'adsense_code' => 'adsenseCode',
'adsense_show_top' => 'adsenseShowTop',
'adsense_show_col' => 'adsenseShowCol',
'analytics_code' => 'analyticsCode',
'analytics_measure_id' => 'analyticsMeasureId',
'google_ads_id' => 'googleAdsId',
'google_tag_manager_id' => 'googleTagManagerId',
'blacklisted_words' => 'blacklistedWords',
'blacklisted_ip' => 'blacklistedIp',
'blacklisted_domains' => 'blacklistedDomains',
'logo' => 'logo',
'akismet_api_key' => 'akismetApiKey',
'no_captcha' => 'noCaptcha',
'iconcaptcha' => 'iconcaptcha',
'publicthemevariationpreview_id' => 'publicthemevariationpreviewId',
'customthemevariationpreview_id' => 'customthemevariationpreviewId',
'splashscreen_active' => 'splashscreenActive',
'splashscreen_location' => 'splashscreenLocation',
'splashscreen_testmode' => 'splashscreenTestmode',
'zone_meta' => 'zoneMeta',
'zone_css' => 'zoneCss',
'zone_js' => 'zoneJs',
'hide_dashboard_welcome_box' => 'hideDashboardWelcomeBox',
'dashboard_message' => 'dashboardMessage',
'slidshow_options' => 'slidshowOptions',
'favicon' => 'favicon',
'homepage_module_id' => 'homepageModuleId',
'preview_token' => 'previewToken',
'searchindex_dt' => 'searchindexDt',
'robots_auto' => 'robotsAuto',
'robots' => 'robots',
'filesizequota_used' => 'filesizequotaUsed',
'used_storage_quota' => 'usedStorageQuota',
'email' => 'email',
'email_sender_name' => 'emailSenderName',
'activity' => 'activity',
'theme_version' => 'themeVersion',
'shortcut_icon' => 'shortcutIcon',
'sitemap_auto' => 'sitemapAuto',
'google_webmaster_meta' => 'googleWebmasterMeta',
'bing_webmaster_meta' => 'bingWebmasterMeta',
'search_console_meta' => 'searchConsoleMeta',
'begin_tab_closed' => 'beginTabClosed',
'scheme' => 'scheme',
'google_maps_api_key' => 'googleMapsApiKey',
'recaptcha2' => 'recaptcha2',
'recaptcha2_site_key' => 'recaptcha2SiteKey',
'recaptcha2_secret_key' => 'recaptcha2SecretKey',
'paypal2_merchantid' => 'paypal2Merchantid',
'paypal2_merchantidinpaypal' => 'paypal2Merchantidinpaypal',
'paypal2_email' => 'paypal2Email',
'paypal2_returnmessage' => 'paypal2Returnmessage',
'paypal2_valid' => 'paypal2Valid',
'paypal2_paymentexperience' => 'paypal2Paymentexperience',
'social_networks' => 'socialNetworks',
'ads_auto' => 'adsAuto',
'ads' => 'ads',
'googlefont' => 'googlefont',
'token_instagram' => 'tokenInstagram',
'token_instagram_expire_dt' => 'tokenInstagramExpireDt',
'instagram_token' => 'instagramToken',
'instagramtoken_expiration_dt' => 'instagramtokenExpirationDt',
'instagram_token_expired' => 'instagramTokenExpired',
'nb_days_before_instagram_token_expire' => 'nbDaysBeforeInstagramTokenExpire',
'storage_folders' => 'storageFolders',
'storage_folder' => 'storageFolder',
'site_langs' => 'siteLangs',
'default_site_lang' => 'defaultSiteLang',
'active_site_langs' => 'activeSiteLangs',
'lang' => 'lang',
'custom_theme_variations' => 'customThemeVariations',
'custom_theme_variation' => 'customThemeVariation',
'modules' => 'modules',
'module' => 'module',
'wuro_enabled' => 'wuroEnabled',
'wuro_api_end_point' => 'wuroApiEndPoint',
'wuro_app_id' => 'wuroAppId',
'wuro_app_secret' => 'wuroAppSecret',
'captcha' => 'captcha',
'eco_config' => 'ecoConfig',
'config_lp' => 'configLP',
'eco_advices_config' => 'ecoAdvicesConfig',
'eco_store_delivery' => 'ecoStoreDelivery',
'hcaptcha_site_key' => 'hcaptchaSiteKey',
'hcaptcha_secret_key' => 'hcaptchaSecretKey',
'eco_orders' => 'ecoOrders',
'eco_collection_points' => 'ecoCollectionPoints',
'carriers' => 'carriers',
'cel_soft_deletion' => 'celSoftDeletion',
'webhooks' => 'webhooks',
'nb_days_since_creation' => 'nbDaysSinceCreation',
'structures_payment' => 'structuresPayment',
'editable_zones_bottom_site_block' => 'editableZonesBottomSiteBlock',
'member_options' => 'memberOptions',
'legal' => 'legal',
'in_store_pick_up_points' => 'inStorePickUpPoints',
'structure_widgets' => 'structureWidgets',
'default_menu_h_widget' => 'defaultMenuHWidget',
'structures' => 'structures',
'not_found_page_block' => 'notFoundPageBlock',
'browser_extension_enabled' => 'browserExtensionEnabled',
'edirectory_order_options' => 'edirectoryOrderOptions',
'add_dt' => 'addDt',
'upd_dt' => 'updDt',
'created_at' => 'createdAt',
'updated_at' => 'updatedAt',
'add_user_id' => 'addUserId',
'upd_user_id' => 'updUserId',
'versions' => 'versions',
'version' => 'version',
'version_by_lang' => 'versionByLang'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
'url' => 'setUrl',
'disabled' => 'setDisabled',
'site_suspend' => 'setSiteSuspend',
'site_deleted' => 'setSiteDeleted',
'site_deletion_dt' => 'setSiteDeletionDt',
'site_deletion_ip' => 'setSiteDeletionIp',
'site_deletion_reason' => 'setSiteDeletionReason',
'site_deletion_user_id' => 'setSiteDeletionUserId',
'manager_suspend' => 'setManagerSuspend',
'reason_suspend' => 'setReasonSuspend',
'default_lang' => 'setDefaultLang',
'show_layout_flags' => 'setShowLayoutFlags',
'show_i18n_links' => 'setShowI18nLinks',
'timezone' => 'setTimezone',
'brand_id' => 'setBrandId',
'domain_id' => 'setDomainId',
'sitename' => 'setSitename',
'host' => 'setHost',
'paypal_id' => 'setPaypalId',
'paypal_cmd' => 'setPaypalCmd',
'paypal_insertcart' => 'setPaypalInsertcart',
'paypal_currency_code' => 'setPaypalCurrencyCode',
'paypal_undefined_quantity' => 'setPaypalUndefinedQuantity',
'mailformat' => 'setMailformat',
'messagemoderation' => 'setMessagemoderation',
'avatar' => 'setAvatar',
'avatar_storage_server_id' => 'setAvatarStorageServerId',
'adsense_code' => 'setAdsenseCode',
'adsense_show_top' => 'setAdsenseShowTop',
'adsense_show_col' => 'setAdsenseShowCol',
'analytics_code' => 'setAnalyticsCode',
'analytics_measure_id' => 'setAnalyticsMeasureId',
'google_ads_id' => 'setGoogleAdsId',
'google_tag_manager_id' => 'setGoogleTagManagerId',
'blacklisted_words' => 'setBlacklistedWords',
'blacklisted_ip' => 'setBlacklistedIp',
'blacklisted_domains' => 'setBlacklistedDomains',
'logo' => 'setLogo',
'akismet_api_key' => 'setAkismetApiKey',
'no_captcha' => 'setNoCaptcha',
'iconcaptcha' => 'setIconcaptcha',
'publicthemevariationpreview_id' => 'setPublicthemevariationpreviewId',
'customthemevariationpreview_id' => 'setCustomthemevariationpreviewId',
'splashscreen_active' => 'setSplashscreenActive',
'splashscreen_location' => 'setSplashscreenLocation',
'splashscreen_testmode' => 'setSplashscreenTestmode',
'zone_meta' => 'setZoneMeta',
'zone_css' => 'setZoneCss',
'zone_js' => 'setZoneJs',
'hide_dashboard_welcome_box' => 'setHideDashboardWelcomeBox',
'dashboard_message' => 'setDashboardMessage',
'slidshow_options' => 'setSlidshowOptions',
'favicon' => 'setFavicon',
'homepage_module_id' => 'setHomepageModuleId',
'preview_token' => 'setPreviewToken',
'searchindex_dt' => 'setSearchindexDt',
'robots_auto' => 'setRobotsAuto',
'robots' => 'setRobots',
'filesizequota_used' => 'setFilesizequotaUsed',
'used_storage_quota' => 'setUsedStorageQuota',
'email' => 'setEmail',
'email_sender_name' => 'setEmailSenderName',
'activity' => 'setActivity',
'theme_version' => 'setThemeVersion',
'shortcut_icon' => 'setShortcutIcon',
'sitemap_auto' => 'setSitemapAuto',
'google_webmaster_meta' => 'setGoogleWebmasterMeta',
'bing_webmaster_meta' => 'setBingWebmasterMeta',
'search_console_meta' => 'setSearchConsoleMeta',
'begin_tab_closed' => 'setBeginTabClosed',
'scheme' => 'setScheme',
'google_maps_api_key' => 'setGoogleMapsApiKey',
'recaptcha2' => 'setRecaptcha2',
'recaptcha2_site_key' => 'setRecaptcha2SiteKey',
'recaptcha2_secret_key' => 'setRecaptcha2SecretKey',
'paypal2_merchantid' => 'setPaypal2Merchantid',
'paypal2_merchantidinpaypal' => 'setPaypal2Merchantidinpaypal',
'paypal2_email' => 'setPaypal2Email',
'paypal2_returnmessage' => 'setPaypal2Returnmessage',
'paypal2_valid' => 'setPaypal2Valid',
'paypal2_paymentexperience' => 'setPaypal2Paymentexperience',
'social_networks' => 'setSocialNetworks',
'ads_auto' => 'setAdsAuto',
'ads' => 'setAds',
'googlefont' => 'setGooglefont',
'token_instagram' => 'setTokenInstagram',
'token_instagram_expire_dt' => 'setTokenInstagramExpireDt',
'instagram_token' => 'setInstagramToken',
'instagramtoken_expiration_dt' => 'setInstagramtokenExpirationDt',
'instagram_token_expired' => 'setInstagramTokenExpired',
'nb_days_before_instagram_token_expire' => 'setNbDaysBeforeInstagramTokenExpire',
'storage_folders' => 'setStorageFolders',
'storage_folder' => 'setStorageFolder',
'site_langs' => 'setSiteLangs',
'default_site_lang' => 'setDefaultSiteLang',
'active_site_langs' => 'setActiveSiteLangs',
'lang' => 'setLang',
'custom_theme_variations' => 'setCustomThemeVariations',
'custom_theme_variation' => 'setCustomThemeVariation',
'modules' => 'setModules',
'module' => 'setModule',
'wuro_enabled' => 'setWuroEnabled',
'wuro_api_end_point' => 'setWuroApiEndPoint',
'wuro_app_id' => 'setWuroAppId',
'wuro_app_secret' => 'setWuroAppSecret',
'captcha' => 'setCaptcha',
'eco_config' => 'setEcoConfig',
'config_lp' => 'setConfigLp',
'eco_advices_config' => 'setEcoAdvicesConfig',
'eco_store_delivery' => 'setEcoStoreDelivery',
'hcaptcha_site_key' => 'setHcaptchaSiteKey',
'hcaptcha_secret_key' => 'setHcaptchaSecretKey',
'eco_orders' => 'setEcoOrders',
'eco_collection_points' => 'setEcoCollectionPoints',
'carriers' => 'setCarriers',
'cel_soft_deletion' => 'setCelSoftDeletion',
'webhooks' => 'setWebhooks',
'nb_days_since_creation' => 'setNbDaysSinceCreation',
'structures_payment' => 'setStructuresPayment',
'editable_zones_bottom_site_block' => 'setEditableZonesBottomSiteBlock',
'member_options' => 'setMemberOptions',
'legal' => 'setLegal',
'in_store_pick_up_points' => 'setInStorePickUpPoints',
'structure_widgets' => 'setStructureWidgets',
'default_menu_h_widget' => 'setDefaultMenuHWidget',
'structures' => 'setStructures',
'not_found_page_block' => 'setNotFoundPageBlock',
'browser_extension_enabled' => 'setBrowserExtensionEnabled',
'edirectory_order_options' => 'setEdirectoryOrderOptions',
'add_dt' => 'setAddDt',
'upd_dt' => 'setUpdDt',
'created_at' => 'setCreatedAt',
'updated_at' => 'setUpdatedAt',
'add_user_id' => 'setAddUserId',
'upd_user_id' => 'setUpdUserId',
'versions' => 'setVersions',
'version' => 'setVersion',
'version_by_lang' => 'setVersionByLang'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
'url' => 'getUrl',
'disabled' => 'getDisabled',
'site_suspend' => 'getSiteSuspend',
'site_deleted' => 'getSiteDeleted',
'site_deletion_dt' => 'getSiteDeletionDt',
'site_deletion_ip' => 'getSiteDeletionIp',
'site_deletion_reason' => 'getSiteDeletionReason',
'site_deletion_user_id' => 'getSiteDeletionUserId',
'manager_suspend' => 'getManagerSuspend',
'reason_suspend' => 'getReasonSuspend',
'default_lang' => 'getDefaultLang',
'show_layout_flags' => 'getShowLayoutFlags',
'show_i18n_links' => 'getShowI18nLinks',
'timezone' => 'getTimezone',
'brand_id' => 'getBrandId',
'domain_id' => 'getDomainId',
'sitename' => 'getSitename',
'host' => 'getHost',
'paypal_id' => 'getPaypalId',
'paypal_cmd' => 'getPaypalCmd',
'paypal_insertcart' => 'getPaypalInsertcart',
'paypal_currency_code' => 'getPaypalCurrencyCode',
'paypal_undefined_quantity' => 'getPaypalUndefinedQuantity',
'mailformat' => 'getMailformat',
'messagemoderation' => 'getMessagemoderation',
'avatar' => 'getAvatar',
'avatar_storage_server_id' => 'getAvatarStorageServerId',
'adsense_code' => 'getAdsenseCode',
'adsense_show_top' => 'getAdsenseShowTop',
'adsense_show_col' => 'getAdsenseShowCol',
'analytics_code' => 'getAnalyticsCode',
'analytics_measure_id' => 'getAnalyticsMeasureId',
'google_ads_id' => 'getGoogleAdsId',
'google_tag_manager_id' => 'getGoogleTagManagerId',
'blacklisted_words' => 'getBlacklistedWords',
'blacklisted_ip' => 'getBlacklistedIp',
'blacklisted_domains' => 'getBlacklistedDomains',
'logo' => 'getLogo',
'akismet_api_key' => 'getAkismetApiKey',
'no_captcha' => 'getNoCaptcha',
'iconcaptcha' => 'getIconcaptcha',
'publicthemevariationpreview_id' => 'getPublicthemevariationpreviewId',
'customthemevariationpreview_id' => 'getCustomthemevariationpreviewId',
'splashscreen_active' => 'getSplashscreenActive',
'splashscreen_location' => 'getSplashscreenLocation',
'splashscreen_testmode' => 'getSplashscreenTestmode',
'zone_meta' => 'getZoneMeta',
'zone_css' => 'getZoneCss',
'zone_js' => 'getZoneJs',
'hide_dashboard_welcome_box' => 'getHideDashboardWelcomeBox',
'dashboard_message' => 'getDashboardMessage',
'slidshow_options' => 'getSlidshowOptions',
'favicon' => 'getFavicon',
'homepage_module_id' => 'getHomepageModuleId',
'preview_token' => 'getPreviewToken',
'searchindex_dt' => 'getSearchindexDt',
'robots_auto' => 'getRobotsAuto',
'robots' => 'getRobots',
'filesizequota_used' => 'getFilesizequotaUsed',
'used_storage_quota' => 'getUsedStorageQuota',
'email' => 'getEmail',
'email_sender_name' => 'getEmailSenderName',
'activity' => 'getActivity',
'theme_version' => 'getThemeVersion',
'shortcut_icon' => 'getShortcutIcon',
'sitemap_auto' => 'getSitemapAuto',
'google_webmaster_meta' => 'getGoogleWebmasterMeta',
'bing_webmaster_meta' => 'getBingWebmasterMeta',
'search_console_meta' => 'getSearchConsoleMeta',
'begin_tab_closed' => 'getBeginTabClosed',
'scheme' => 'getScheme',
'google_maps_api_key' => 'getGoogleMapsApiKey',
'recaptcha2' => 'getRecaptcha2',
'recaptcha2_site_key' => 'getRecaptcha2SiteKey',
'recaptcha2_secret_key' => 'getRecaptcha2SecretKey',
'paypal2_merchantid' => 'getPaypal2Merchantid',
'paypal2_merchantidinpaypal' => 'getPaypal2Merchantidinpaypal',
'paypal2_email' => 'getPaypal2Email',
'paypal2_returnmessage' => 'getPaypal2Returnmessage',
'paypal2_valid' => 'getPaypal2Valid',
'paypal2_paymentexperience' => 'getPaypal2Paymentexperience',
'social_networks' => 'getSocialNetworks',
'ads_auto' => 'getAdsAuto',
'ads' => 'getAds',
'googlefont' => 'getGooglefont',
'token_instagram' => 'getTokenInstagram',
'token_instagram_expire_dt' => 'getTokenInstagramExpireDt',
'instagram_token' => 'getInstagramToken',
'instagramtoken_expiration_dt' => 'getInstagramtokenExpirationDt',
'instagram_token_expired' => 'getInstagramTokenExpired',
'nb_days_before_instagram_token_expire' => 'getNbDaysBeforeInstagramTokenExpire',
'storage_folders' => 'getStorageFolders',
'storage_folder' => 'getStorageFolder',
'site_langs' => 'getSiteLangs',
'default_site_lang' => 'getDefaultSiteLang',
'active_site_langs' => 'getActiveSiteLangs',
'lang' => 'getLang',
'custom_theme_variations' => 'getCustomThemeVariations',
'custom_theme_variation' => 'getCustomThemeVariation',
'modules' => 'getModules',
'module' => 'getModule',
'wuro_enabled' => 'getWuroEnabled',
'wuro_api_end_point' => 'getWuroApiEndPoint',
'wuro_app_id' => 'getWuroAppId',
'wuro_app_secret' => 'getWuroAppSecret',
'captcha' => 'getCaptcha',
'eco_config' => 'getEcoConfig',
'config_lp' => 'getConfigLp',
'eco_advices_config' => 'getEcoAdvicesConfig',
'eco_store_delivery' => 'getEcoStoreDelivery',
'hcaptcha_site_key' => 'getHcaptchaSiteKey',
'hcaptcha_secret_key' => 'getHcaptchaSecretKey',
'eco_orders' => 'getEcoOrders',
'eco_collection_points' => 'getEcoCollectionPoints',
'carriers' => 'getCarriers',
'cel_soft_deletion' => 'getCelSoftDeletion',
'webhooks' => 'getWebhooks',
'nb_days_since_creation' => 'getNbDaysSinceCreation',
'structures_payment' => 'getStructuresPayment',
'editable_zones_bottom_site_block' => 'getEditableZonesBottomSiteBlock',
'member_options' => 'getMemberOptions',
'legal' => 'getLegal',
'in_store_pick_up_points' => 'getInStorePickUpPoints',
'structure_widgets' => 'getStructureWidgets',
'default_menu_h_widget' => 'getDefaultMenuHWidget',
'structures' => 'getStructures',
'not_found_page_block' => 'getNotFoundPageBlock',
'browser_extension_enabled' => 'getBrowserExtensionEnabled',
'edirectory_order_options' => 'getEdirectoryOrderOptions',
'add_dt' => 'getAddDt',
'upd_dt' => 'getUpdDt',
'created_at' => 'getCreatedAt',
'updated_at' => 'getUpdatedAt',
'add_user_id' => 'getAddUserId',
'upd_user_id' => 'getUpdUserId',
'versions' => 'getVersions',
'version' => 'getVersion',
'version_by_lang' => 'getVersionByLang'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['url'] = isset($data['url']) ? $data['url'] : null;
        $this->container['disabled'] = isset($data['disabled']) ? $data['disabled'] : null;
        $this->container['site_suspend'] = isset($data['site_suspend']) ? $data['site_suspend'] : null;
        $this->container['site_deleted'] = isset($data['site_deleted']) ? $data['site_deleted'] : null;
        $this->container['site_deletion_dt'] = isset($data['site_deletion_dt']) ? $data['site_deletion_dt'] : null;
        $this->container['site_deletion_ip'] = isset($data['site_deletion_ip']) ? $data['site_deletion_ip'] : null;
        $this->container['site_deletion_reason'] = isset($data['site_deletion_reason']) ? $data['site_deletion_reason'] : null;
        $this->container['site_deletion_user_id'] = isset($data['site_deletion_user_id']) ? $data['site_deletion_user_id'] : null;
        $this->container['manager_suspend'] = isset($data['manager_suspend']) ? $data['manager_suspend'] : null;
        $this->container['reason_suspend'] = isset($data['reason_suspend']) ? $data['reason_suspend'] : null;
        $this->container['default_lang'] = isset($data['default_lang']) ? $data['default_lang'] : null;
        $this->container['show_layout_flags'] = isset($data['show_layout_flags']) ? $data['show_layout_flags'] : null;
        $this->container['show_i18n_links'] = isset($data['show_i18n_links']) ? $data['show_i18n_links'] : null;
        $this->container['timezone'] = isset($data['timezone']) ? $data['timezone'] : null;
        $this->container['brand_id'] = isset($data['brand_id']) ? $data['brand_id'] : null;
        $this->container['domain_id'] = isset($data['domain_id']) ? $data['domain_id'] : null;
        $this->container['sitename'] = isset($data['sitename']) ? $data['sitename'] : null;
        $this->container['host'] = isset($data['host']) ? $data['host'] : null;
        $this->container['paypal_id'] = isset($data['paypal_id']) ? $data['paypal_id'] : null;
        $this->container['paypal_cmd'] = isset($data['paypal_cmd']) ? $data['paypal_cmd'] : null;
        $this->container['paypal_insertcart'] = isset($data['paypal_insertcart']) ? $data['paypal_insertcart'] : null;
        $this->container['paypal_currency_code'] = isset($data['paypal_currency_code']) ? $data['paypal_currency_code'] : null;
        $this->container['paypal_undefined_quantity'] = isset($data['paypal_undefined_quantity']) ? $data['paypal_undefined_quantity'] : null;
        $this->container['mailformat'] = isset($data['mailformat']) ? $data['mailformat'] : null;
        $this->container['messagemoderation'] = isset($data['messagemoderation']) ? $data['messagemoderation'] : null;
        $this->container['avatar'] = isset($data['avatar']) ? $data['avatar'] : null;
        $this->container['avatar_storage_server_id'] = isset($data['avatar_storage_server_id']) ? $data['avatar_storage_server_id'] : null;
        $this->container['adsense_code'] = isset($data['adsense_code']) ? $data['adsense_code'] : null;
        $this->container['adsense_show_top'] = isset($data['adsense_show_top']) ? $data['adsense_show_top'] : null;
        $this->container['adsense_show_col'] = isset($data['adsense_show_col']) ? $data['adsense_show_col'] : null;
        $this->container['analytics_code'] = isset($data['analytics_code']) ? $data['analytics_code'] : null;
        $this->container['analytics_measure_id'] = isset($data['analytics_measure_id']) ? $data['analytics_measure_id'] : null;
        $this->container['google_ads_id'] = isset($data['google_ads_id']) ? $data['google_ads_id'] : null;
        $this->container['google_tag_manager_id'] = isset($data['google_tag_manager_id']) ? $data['google_tag_manager_id'] : null;
        $this->container['blacklisted_words'] = isset($data['blacklisted_words']) ? $data['blacklisted_words'] : null;
        $this->container['blacklisted_ip'] = isset($data['blacklisted_ip']) ? $data['blacklisted_ip'] : null;
        $this->container['blacklisted_domains'] = isset($data['blacklisted_domains']) ? $data['blacklisted_domains'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['akismet_api_key'] = isset($data['akismet_api_key']) ? $data['akismet_api_key'] : null;
        $this->container['no_captcha'] = isset($data['no_captcha']) ? $data['no_captcha'] : null;
        $this->container['iconcaptcha'] = isset($data['iconcaptcha']) ? $data['iconcaptcha'] : null;
        $this->container['publicthemevariationpreview_id'] = isset($data['publicthemevariationpreview_id']) ? $data['publicthemevariationpreview_id'] : null;
        $this->container['customthemevariationpreview_id'] = isset($data['customthemevariationpreview_id']) ? $data['customthemevariationpreview_id'] : null;
        $this->container['splashscreen_active'] = isset($data['splashscreen_active']) ? $data['splashscreen_active'] : null;
        $this->container['splashscreen_location'] = isset($data['splashscreen_location']) ? $data['splashscreen_location'] : null;
        $this->container['splashscreen_testmode'] = isset($data['splashscreen_testmode']) ? $data['splashscreen_testmode'] : null;
        $this->container['zone_meta'] = isset($data['zone_meta']) ? $data['zone_meta'] : null;
        $this->container['zone_css'] = isset($data['zone_css']) ? $data['zone_css'] : null;
        $this->container['zone_js'] = isset($data['zone_js']) ? $data['zone_js'] : null;
        $this->container['hide_dashboard_welcome_box'] = isset($data['hide_dashboard_welcome_box']) ? $data['hide_dashboard_welcome_box'] : null;
        $this->container['dashboard_message'] = isset($data['dashboard_message']) ? $data['dashboard_message'] : null;
        $this->container['slidshow_options'] = isset($data['slidshow_options']) ? $data['slidshow_options'] : null;
        $this->container['favicon'] = isset($data['favicon']) ? $data['favicon'] : null;
        $this->container['homepage_module_id'] = isset($data['homepage_module_id']) ? $data['homepage_module_id'] : null;
        $this->container['preview_token'] = isset($data['preview_token']) ? $data['preview_token'] : null;
        $this->container['searchindex_dt'] = isset($data['searchindex_dt']) ? $data['searchindex_dt'] : null;
        $this->container['robots_auto'] = isset($data['robots_auto']) ? $data['robots_auto'] : null;
        $this->container['robots'] = isset($data['robots']) ? $data['robots'] : null;
        $this->container['filesizequota_used'] = isset($data['filesizequota_used']) ? $data['filesizequota_used'] : null;
        $this->container['used_storage_quota'] = isset($data['used_storage_quota']) ? $data['used_storage_quota'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['email_sender_name'] = isset($data['email_sender_name']) ? $data['email_sender_name'] : null;
        $this->container['activity'] = isset($data['activity']) ? $data['activity'] : null;
        $this->container['theme_version'] = isset($data['theme_version']) ? $data['theme_version'] : null;
        $this->container['shortcut_icon'] = isset($data['shortcut_icon']) ? $data['shortcut_icon'] : null;
        $this->container['sitemap_auto'] = isset($data['sitemap_auto']) ? $data['sitemap_auto'] : null;
        $this->container['google_webmaster_meta'] = isset($data['google_webmaster_meta']) ? $data['google_webmaster_meta'] : null;
        $this->container['bing_webmaster_meta'] = isset($data['bing_webmaster_meta']) ? $data['bing_webmaster_meta'] : null;
        $this->container['search_console_meta'] = isset($data['search_console_meta']) ? $data['search_console_meta'] : null;
        $this->container['begin_tab_closed'] = isset($data['begin_tab_closed']) ? $data['begin_tab_closed'] : null;
        $this->container['scheme'] = isset($data['scheme']) ? $data['scheme'] : null;
        $this->container['google_maps_api_key'] = isset($data['google_maps_api_key']) ? $data['google_maps_api_key'] : null;
        $this->container['recaptcha2'] = isset($data['recaptcha2']) ? $data['recaptcha2'] : null;
        $this->container['recaptcha2_site_key'] = isset($data['recaptcha2_site_key']) ? $data['recaptcha2_site_key'] : null;
        $this->container['recaptcha2_secret_key'] = isset($data['recaptcha2_secret_key']) ? $data['recaptcha2_secret_key'] : null;
        $this->container['paypal2_merchantid'] = isset($data['paypal2_merchantid']) ? $data['paypal2_merchantid'] : null;
        $this->container['paypal2_merchantidinpaypal'] = isset($data['paypal2_merchantidinpaypal']) ? $data['paypal2_merchantidinpaypal'] : null;
        $this->container['paypal2_email'] = isset($data['paypal2_email']) ? $data['paypal2_email'] : null;
        $this->container['paypal2_returnmessage'] = isset($data['paypal2_returnmessage']) ? $data['paypal2_returnmessage'] : null;
        $this->container['paypal2_valid'] = isset($data['paypal2_valid']) ? $data['paypal2_valid'] : null;
        $this->container['paypal2_paymentexperience'] = isset($data['paypal2_paymentexperience']) ? $data['paypal2_paymentexperience'] : null;
        $this->container['social_networks'] = isset($data['social_networks']) ? $data['social_networks'] : null;
        $this->container['ads_auto'] = isset($data['ads_auto']) ? $data['ads_auto'] : null;
        $this->container['ads'] = isset($data['ads']) ? $data['ads'] : null;
        $this->container['googlefont'] = isset($data['googlefont']) ? $data['googlefont'] : null;
        $this->container['token_instagram'] = isset($data['token_instagram']) ? $data['token_instagram'] : null;
        $this->container['token_instagram_expire_dt'] = isset($data['token_instagram_expire_dt']) ? $data['token_instagram_expire_dt'] : null;
        $this->container['instagram_token'] = isset($data['instagram_token']) ? $data['instagram_token'] : null;
        $this->container['instagramtoken_expiration_dt'] = isset($data['instagramtoken_expiration_dt']) ? $data['instagramtoken_expiration_dt'] : null;
        $this->container['instagram_token_expired'] = isset($data['instagram_token_expired']) ? $data['instagram_token_expired'] : null;
        $this->container['nb_days_before_instagram_token_expire'] = isset($data['nb_days_before_instagram_token_expire']) ? $data['nb_days_before_instagram_token_expire'] : null;
        $this->container['storage_folders'] = isset($data['storage_folders']) ? $data['storage_folders'] : null;
        $this->container['storage_folder'] = isset($data['storage_folder']) ? $data['storage_folder'] : null;
        $this->container['site_langs'] = isset($data['site_langs']) ? $data['site_langs'] : null;
        $this->container['default_site_lang'] = isset($data['default_site_lang']) ? $data['default_site_lang'] : null;
        $this->container['active_site_langs'] = isset($data['active_site_langs']) ? $data['active_site_langs'] : null;
        $this->container['lang'] = isset($data['lang']) ? $data['lang'] : null;
        $this->container['custom_theme_variations'] = isset($data['custom_theme_variations']) ? $data['custom_theme_variations'] : null;
        $this->container['custom_theme_variation'] = isset($data['custom_theme_variation']) ? $data['custom_theme_variation'] : null;
        $this->container['modules'] = isset($data['modules']) ? $data['modules'] : null;
        $this->container['module'] = isset($data['module']) ? $data['module'] : null;
        $this->container['wuro_enabled'] = isset($data['wuro_enabled']) ? $data['wuro_enabled'] : null;
        $this->container['wuro_api_end_point'] = isset($data['wuro_api_end_point']) ? $data['wuro_api_end_point'] : null;
        $this->container['wuro_app_id'] = isset($data['wuro_app_id']) ? $data['wuro_app_id'] : null;
        $this->container['wuro_app_secret'] = isset($data['wuro_app_secret']) ? $data['wuro_app_secret'] : null;
        $this->container['captcha'] = isset($data['captcha']) ? $data['captcha'] : null;
        $this->container['eco_config'] = isset($data['eco_config']) ? $data['eco_config'] : null;
        $this->container['config_lp'] = isset($data['config_lp']) ? $data['config_lp'] : null;
        $this->container['eco_advices_config'] = isset($data['eco_advices_config']) ? $data['eco_advices_config'] : null;
        $this->container['eco_store_delivery'] = isset($data['eco_store_delivery']) ? $data['eco_store_delivery'] : null;
        $this->container['hcaptcha_site_key'] = isset($data['hcaptcha_site_key']) ? $data['hcaptcha_site_key'] : null;
        $this->container['hcaptcha_secret_key'] = isset($data['hcaptcha_secret_key']) ? $data['hcaptcha_secret_key'] : null;
        $this->container['eco_orders'] = isset($data['eco_orders']) ? $data['eco_orders'] : null;
        $this->container['eco_collection_points'] = isset($data['eco_collection_points']) ? $data['eco_collection_points'] : null;
        $this->container['carriers'] = isset($data['carriers']) ? $data['carriers'] : null;
        $this->container['cel_soft_deletion'] = isset($data['cel_soft_deletion']) ? $data['cel_soft_deletion'] : null;
        $this->container['webhooks'] = isset($data['webhooks']) ? $data['webhooks'] : null;
        $this->container['nb_days_since_creation'] = isset($data['nb_days_since_creation']) ? $data['nb_days_since_creation'] : null;
        $this->container['structures_payment'] = isset($data['structures_payment']) ? $data['structures_payment'] : null;
        $this->container['editable_zones_bottom_site_block'] = isset($data['editable_zones_bottom_site_block']) ? $data['editable_zones_bottom_site_block'] : null;
        $this->container['member_options'] = isset($data['member_options']) ? $data['member_options'] : null;
        $this->container['legal'] = isset($data['legal']) ? $data['legal'] : null;
        $this->container['in_store_pick_up_points'] = isset($data['in_store_pick_up_points']) ? $data['in_store_pick_up_points'] : null;
        $this->container['structure_widgets'] = isset($data['structure_widgets']) ? $data['structure_widgets'] : null;
        $this->container['default_menu_h_widget'] = isset($data['default_menu_h_widget']) ? $data['default_menu_h_widget'] : null;
        $this->container['structures'] = isset($data['structures']) ? $data['structures'] : null;
        $this->container['not_found_page_block'] = isset($data['not_found_page_block']) ? $data['not_found_page_block'] : null;
        $this->container['browser_extension_enabled'] = isset($data['browser_extension_enabled']) ? $data['browser_extension_enabled'] : null;
        $this->container['edirectory_order_options'] = isset($data['edirectory_order_options']) ? $data['edirectory_order_options'] : null;
        $this->container['add_dt'] = isset($data['add_dt']) ? $data['add_dt'] : null;
        $this->container['upd_dt'] = isset($data['upd_dt']) ? $data['upd_dt'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['add_user_id'] = isset($data['add_user_id']) ? $data['add_user_id'] : null;
        $this->container['upd_user_id'] = isset($data['upd_user_id']) ? $data['upd_user_id'] : null;
        $this->container['versions'] = isset($data['versions']) ? $data['versions'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['version_by_lang'] = isset($data['version_by_lang']) ? $data['version_by_lang'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets url
     *
     * @return string
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string $url url
     *
     * @return $this
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets disabled
     *
     * @return bool
     */
    public function getDisabled()
    {
        return $this->container['disabled'];
    }

    /**
     * Sets disabled
     *
     * @param bool $disabled disabled
     *
     * @return $this
     */
    public function setDisabled($disabled)
    {
        $this->container['disabled'] = $disabled;

        return $this;
    }

    /**
     * Gets site_suspend
     *
     * @return bool
     */
    public function getSiteSuspend()
    {
        return $this->container['site_suspend'];
    }

    /**
     * Sets site_suspend
     *
     * @param bool $site_suspend site_suspend
     *
     * @return $this
     */
    public function setSiteSuspend($site_suspend)
    {
        $this->container['site_suspend'] = $site_suspend;

        return $this;
    }

    /**
     * Gets site_deleted
     *
     * @return bool
     */
    public function getSiteDeleted()
    {
        return $this->container['site_deleted'];
    }

    /**
     * Sets site_deleted
     *
     * @param bool $site_deleted site_deleted
     *
     * @return $this
     */
    public function setSiteDeleted($site_deleted)
    {
        $this->container['site_deleted'] = $site_deleted;

        return $this;
    }

    /**
     * Gets site_deletion_dt
     *
     * @return int
     */
    public function getSiteDeletionDt()
    {
        return $this->container['site_deletion_dt'];
    }

    /**
     * Sets site_deletion_dt
     *
     * @param int $site_deletion_dt site_deletion_dt
     *
     * @return $this
     */
    public function setSiteDeletionDt($site_deletion_dt)
    {
        $this->container['site_deletion_dt'] = $site_deletion_dt;

        return $this;
    }

    /**
     * Gets site_deletion_ip
     *
     * @return string
     */
    public function getSiteDeletionIp()
    {
        return $this->container['site_deletion_ip'];
    }

    /**
     * Sets site_deletion_ip
     *
     * @param string $site_deletion_ip site_deletion_ip
     *
     * @return $this
     */
    public function setSiteDeletionIp($site_deletion_ip)
    {
        $this->container['site_deletion_ip'] = $site_deletion_ip;

        return $this;
    }

    /**
     * Gets site_deletion_reason
     *
     * @return string
     */
    public function getSiteDeletionReason()
    {
        return $this->container['site_deletion_reason'];
    }

    /**
     * Sets site_deletion_reason
     *
     * @param string $site_deletion_reason site_deletion_reason
     *
     * @return $this
     */
    public function setSiteDeletionReason($site_deletion_reason)
    {
        $this->container['site_deletion_reason'] = $site_deletion_reason;

        return $this;
    }

    /**
     * Gets site_deletion_user_id
     *
     * @return string
     */
    public function getSiteDeletionUserId()
    {
        return $this->container['site_deletion_user_id'];
    }

    /**
     * Sets site_deletion_user_id
     *
     * @param string $site_deletion_user_id site_deletion_user_id
     *
     * @return $this
     */
    public function setSiteDeletionUserId($site_deletion_user_id)
    {
        $this->container['site_deletion_user_id'] = $site_deletion_user_id;

        return $this;
    }

    /**
     * Gets manager_suspend
     *
     * @return bool
     */
    public function getManagerSuspend()
    {
        return $this->container['manager_suspend'];
    }

    /**
     * Sets manager_suspend
     *
     * @param bool $manager_suspend manager_suspend
     *
     * @return $this
     */
    public function setManagerSuspend($manager_suspend)
    {
        $this->container['manager_suspend'] = $manager_suspend;

        return $this;
    }

    /**
     * Gets reason_suspend
     *
     * @return string
     */
    public function getReasonSuspend()
    {
        return $this->container['reason_suspend'];
    }

    /**
     * Sets reason_suspend
     *
     * @param string $reason_suspend reason_suspend
     *
     * @return $this
     */
    public function setReasonSuspend($reason_suspend)
    {
        $this->container['reason_suspend'] = $reason_suspend;

        return $this;
    }

    /**
     * Gets default_lang
     *
     * @return string
     */
    public function getDefaultLang()
    {
        return $this->container['default_lang'];
    }

    /**
     * Sets default_lang
     *
     * @param string $default_lang default_lang
     *
     * @return $this
     */
    public function setDefaultLang($default_lang)
    {
        $this->container['default_lang'] = $default_lang;

        return $this;
    }

    /**
     * Gets show_layout_flags
     *
     * @return bool
     */
    public function getShowLayoutFlags()
    {
        return $this->container['show_layout_flags'];
    }

    /**
     * Sets show_layout_flags
     *
     * @param bool $show_layout_flags show_layout_flags
     *
     * @return $this
     */
    public function setShowLayoutFlags($show_layout_flags)
    {
        $this->container['show_layout_flags'] = $show_layout_flags;

        return $this;
    }

    /**
     * Gets show_i18n_links
     *
     * @return bool
     */
    public function getShowI18nLinks()
    {
        return $this->container['show_i18n_links'];
    }

    /**
     * Sets show_i18n_links
     *
     * @param bool $show_i18n_links show_i18n_links
     *
     * @return $this
     */
    public function setShowI18nLinks($show_i18n_links)
    {
        $this->container['show_i18n_links'] = $show_i18n_links;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string $timezone timezone
     *
     * @return $this
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets brand_id
     *
     * @return string
     */
    public function getBrandId()
    {
        return $this->container['brand_id'];
    }

    /**
     * Sets brand_id
     *
     * @param string $brand_id brand_id
     *
     * @return $this
     */
    public function setBrandId($brand_id)
    {
        $this->container['brand_id'] = $brand_id;

        return $this;
    }

    /**
     * Gets domain_id
     *
     * @return string
     */
    public function getDomainId()
    {
        return $this->container['domain_id'];
    }

    /**
     * Sets domain_id
     *
     * @param string $domain_id domain_id
     *
     * @return $this
     */
    public function setDomainId($domain_id)
    {
        $this->container['domain_id'] = $domain_id;

        return $this;
    }

    /**
     * Gets sitename
     *
     * @return string
     */
    public function getSitename()
    {
        return $this->container['sitename'];
    }

    /**
     * Sets sitename
     *
     * @param string $sitename sitename
     *
     * @return $this
     */
    public function setSitename($sitename)
    {
        $this->container['sitename'] = $sitename;

        return $this;
    }

    /**
     * Gets host
     *
     * @return string
     */
    public function getHost()
    {
        return $this->container['host'];
    }

    /**
     * Sets host
     *
     * @param string $host host
     *
     * @return $this
     */
    public function setHost($host)
    {
        $this->container['host'] = $host;

        return $this;
    }

    /**
     * Gets paypal_id
     *
     * @return string
     */
    public function getPaypalId()
    {
        return $this->container['paypal_id'];
    }

    /**
     * Sets paypal_id
     *
     * @param string $paypal_id paypal_id
     *
     * @return $this
     */
    public function setPaypalId($paypal_id)
    {
        $this->container['paypal_id'] = $paypal_id;

        return $this;
    }

    /**
     * Gets paypal_cmd
     *
     * @return string
     */
    public function getPaypalCmd()
    {
        return $this->container['paypal_cmd'];
    }

    /**
     * Sets paypal_cmd
     *
     * @param string $paypal_cmd paypal_cmd
     *
     * @return $this
     */
    public function setPaypalCmd($paypal_cmd)
    {
        $this->container['paypal_cmd'] = $paypal_cmd;

        return $this;
    }

    /**
     * Gets paypal_insertcart
     *
     * @return bool
     */
    public function getPaypalInsertcart()
    {
        return $this->container['paypal_insertcart'];
    }

    /**
     * Sets paypal_insertcart
     *
     * @param bool $paypal_insertcart paypal_insertcart
     *
     * @return $this
     */
    public function setPaypalInsertcart($paypal_insertcart)
    {
        $this->container['paypal_insertcart'] = $paypal_insertcart;

        return $this;
    }

    /**
     * Gets paypal_currency_code
     *
     * @return string
     */
    public function getPaypalCurrencyCode()
    {
        return $this->container['paypal_currency_code'];
    }

    /**
     * Sets paypal_currency_code
     *
     * @param string $paypal_currency_code paypal_currency_code
     *
     * @return $this
     */
    public function setPaypalCurrencyCode($paypal_currency_code)
    {
        $this->container['paypal_currency_code'] = $paypal_currency_code;

        return $this;
    }

    /**
     * Gets paypal_undefined_quantity
     *
     * @return bool
     */
    public function getPaypalUndefinedQuantity()
    {
        return $this->container['paypal_undefined_quantity'];
    }

    /**
     * Sets paypal_undefined_quantity
     *
     * @param bool $paypal_undefined_quantity paypal_undefined_quantity
     *
     * @return $this
     */
    public function setPaypalUndefinedQuantity($paypal_undefined_quantity)
    {
        $this->container['paypal_undefined_quantity'] = $paypal_undefined_quantity;

        return $this;
    }

    /**
     * Gets mailformat
     *
     * @return string
     */
    public function getMailformat()
    {
        return $this->container['mailformat'];
    }

    /**
     * Sets mailformat
     *
     * @param string $mailformat mailformat
     *
     * @return $this
     */
    public function setMailformat($mailformat)
    {
        $this->container['mailformat'] = $mailformat;

        return $this;
    }

    /**
     * Gets messagemoderation
     *
     * @return string
     */
    public function getMessagemoderation()
    {
        return $this->container['messagemoderation'];
    }

    /**
     * Sets messagemoderation
     *
     * @param string $messagemoderation messagemoderation
     *
     * @return $this
     */
    public function setMessagemoderation($messagemoderation)
    {
        $this->container['messagemoderation'] = $messagemoderation;

        return $this;
    }

    /**
     * Gets avatar
     *
     * @return string
     */
    public function getAvatar()
    {
        return $this->container['avatar'];
    }

    /**
     * Sets avatar
     *
     * @param string $avatar avatar
     *
     * @return $this
     */
    public function setAvatar($avatar)
    {
        $this->container['avatar'] = $avatar;

        return $this;
    }

    /**
     * Gets avatar_storage_server_id
     *
     * @return string
     */
    public function getAvatarStorageServerId()
    {
        return $this->container['avatar_storage_server_id'];
    }

    /**
     * Sets avatar_storage_server_id
     *
     * @param string $avatar_storage_server_id avatar_storage_server_id
     *
     * @return $this
     */
    public function setAvatarStorageServerId($avatar_storage_server_id)
    {
        $this->container['avatar_storage_server_id'] = $avatar_storage_server_id;

        return $this;
    }

    /**
     * Gets adsense_code
     *
     * @return string
     */
    public function getAdsenseCode()
    {
        return $this->container['adsense_code'];
    }

    /**
     * Sets adsense_code
     *
     * @param string $adsense_code adsense_code
     *
     * @return $this
     */
    public function setAdsenseCode($adsense_code)
    {
        $this->container['adsense_code'] = $adsense_code;

        return $this;
    }

    /**
     * Gets adsense_show_top
     *
     * @return bool
     */
    public function getAdsenseShowTop()
    {
        return $this->container['adsense_show_top'];
    }

    /**
     * Sets adsense_show_top
     *
     * @param bool $adsense_show_top adsense_show_top
     *
     * @return $this
     */
    public function setAdsenseShowTop($adsense_show_top)
    {
        $this->container['adsense_show_top'] = $adsense_show_top;

        return $this;
    }

    /**
     * Gets adsense_show_col
     *
     * @return bool
     */
    public function getAdsenseShowCol()
    {
        return $this->container['adsense_show_col'];
    }

    /**
     * Sets adsense_show_col
     *
     * @param bool $adsense_show_col adsense_show_col
     *
     * @return $this
     */
    public function setAdsenseShowCol($adsense_show_col)
    {
        $this->container['adsense_show_col'] = $adsense_show_col;

        return $this;
    }

    /**
     * Gets analytics_code
     *
     * @return string
     */
    public function getAnalyticsCode()
    {
        return $this->container['analytics_code'];
    }

    /**
     * Sets analytics_code
     *
     * @param string $analytics_code analytics_code
     *
     * @return $this
     */
    public function setAnalyticsCode($analytics_code)
    {
        $this->container['analytics_code'] = $analytics_code;

        return $this;
    }

    /**
     * Gets analytics_measure_id
     *
     * @return string
     */
    public function getAnalyticsMeasureId()
    {
        return $this->container['analytics_measure_id'];
    }

    /**
     * Sets analytics_measure_id
     *
     * @param string $analytics_measure_id analytics_measure_id
     *
     * @return $this
     */
    public function setAnalyticsMeasureId($analytics_measure_id)
    {
        $this->container['analytics_measure_id'] = $analytics_measure_id;

        return $this;
    }

    /**
     * Gets google_ads_id
     *
     * @return string
     */
    public function getGoogleAdsId()
    {
        return $this->container['google_ads_id'];
    }

    /**
     * Sets google_ads_id
     *
     * @param string $google_ads_id google_ads_id
     *
     * @return $this
     */
    public function setGoogleAdsId($google_ads_id)
    {
        $this->container['google_ads_id'] = $google_ads_id;

        return $this;
    }

    /**
     * Gets google_tag_manager_id
     *
     * @return string
     */
    public function getGoogleTagManagerId()
    {
        return $this->container['google_tag_manager_id'];
    }

    /**
     * Sets google_tag_manager_id
     *
     * @param string $google_tag_manager_id google_tag_manager_id
     *
     * @return $this
     */
    public function setGoogleTagManagerId($google_tag_manager_id)
    {
        $this->container['google_tag_manager_id'] = $google_tag_manager_id;

        return $this;
    }

    /**
     * Gets blacklisted_words
     *
     * @return string
     */
    public function getBlacklistedWords()
    {
        return $this->container['blacklisted_words'];
    }

    /**
     * Sets blacklisted_words
     *
     * @param string $blacklisted_words blacklisted_words
     *
     * @return $this
     */
    public function setBlacklistedWords($blacklisted_words)
    {
        $this->container['blacklisted_words'] = $blacklisted_words;

        return $this;
    }

    /**
     * Gets blacklisted_ip
     *
     * @return string
     */
    public function getBlacklistedIp()
    {
        return $this->container['blacklisted_ip'];
    }

    /**
     * Sets blacklisted_ip
     *
     * @param string $blacklisted_ip blacklisted_ip
     *
     * @return $this
     */
    public function setBlacklistedIp($blacklisted_ip)
    {
        $this->container['blacklisted_ip'] = $blacklisted_ip;

        return $this;
    }

    /**
     * Gets blacklisted_domains
     *
     * @return string
     */
    public function getBlacklistedDomains()
    {
        return $this->container['blacklisted_domains'];
    }

    /**
     * Sets blacklisted_domains
     *
     * @param string $blacklisted_domains blacklisted_domains
     *
     * @return $this
     */
    public function setBlacklistedDomains($blacklisted_domains)
    {
        $this->container['blacklisted_domains'] = $blacklisted_domains;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return AnyOfSiteLogo
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param AnyOfSiteLogo $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets akismet_api_key
     *
     * @return string
     */
    public function getAkismetApiKey()
    {
        return $this->container['akismet_api_key'];
    }

    /**
     * Sets akismet_api_key
     *
     * @param string $akismet_api_key akismet_api_key
     *
     * @return $this
     */
    public function setAkismetApiKey($akismet_api_key)
    {
        $this->container['akismet_api_key'] = $akismet_api_key;

        return $this;
    }

    /**
     * Gets no_captcha
     *
     * @return bool
     */
    public function getNoCaptcha()
    {
        return $this->container['no_captcha'];
    }

    /**
     * Sets no_captcha
     *
     * @param bool $no_captcha no_captcha
     *
     * @return $this
     */
    public function setNoCaptcha($no_captcha)
    {
        $this->container['no_captcha'] = $no_captcha;

        return $this;
    }

    /**
     * Gets iconcaptcha
     *
     * @return bool
     */
    public function getIconcaptcha()
    {
        return $this->container['iconcaptcha'];
    }

    /**
     * Sets iconcaptcha
     *
     * @param bool $iconcaptcha iconcaptcha
     *
     * @return $this
     */
    public function setIconcaptcha($iconcaptcha)
    {
        $this->container['iconcaptcha'] = $iconcaptcha;

        return $this;
    }

    /**
     * Gets publicthemevariationpreview_id
     *
     * @return string
     */
    public function getPublicthemevariationpreviewId()
    {
        return $this->container['publicthemevariationpreview_id'];
    }

    /**
     * Sets publicthemevariationpreview_id
     *
     * @param string $publicthemevariationpreview_id publicthemevariationpreview_id
     *
     * @return $this
     */
    public function setPublicthemevariationpreviewId($publicthemevariationpreview_id)
    {
        $this->container['publicthemevariationpreview_id'] = $publicthemevariationpreview_id;

        return $this;
    }

    /**
     * Gets customthemevariationpreview_id
     *
     * @return string
     */
    public function getCustomthemevariationpreviewId()
    {
        return $this->container['customthemevariationpreview_id'];
    }

    /**
     * Sets customthemevariationpreview_id
     *
     * @param string $customthemevariationpreview_id customthemevariationpreview_id
     *
     * @return $this
     */
    public function setCustomthemevariationpreviewId($customthemevariationpreview_id)
    {
        $this->container['customthemevariationpreview_id'] = $customthemevariationpreview_id;

        return $this;
    }

    /**
     * Gets splashscreen_active
     *
     * @return bool
     */
    public function getSplashscreenActive()
    {
        return $this->container['splashscreen_active'];
    }

    /**
     * Sets splashscreen_active
     *
     * @param bool $splashscreen_active splashscreen_active
     *
     * @return $this
     */
    public function setSplashscreenActive($splashscreen_active)
    {
        $this->container['splashscreen_active'] = $splashscreen_active;

        return $this;
    }

    /**
     * Gets splashscreen_location
     *
     * @return 
     */
    public function getSplashscreenLocation()
    {
        return $this->container['splashscreen_location'];
    }

    /**
     * Sets splashscreen_location
     *
     * @param  $splashscreen_location splashscreen_location
     *
     * @return $this
     */
    public function setSplashscreenLocation($splashscreen_location)
    {
        $this->container['splashscreen_location'] = $splashscreen_location;

        return $this;
    }

    /**
     * Gets splashscreen_testmode
     *
     * @return bool
     */
    public function getSplashscreenTestmode()
    {
        return $this->container['splashscreen_testmode'];
    }

    /**
     * Sets splashscreen_testmode
     *
     * @param bool $splashscreen_testmode splashscreen_testmode
     *
     * @return $this
     */
    public function setSplashscreenTestmode($splashscreen_testmode)
    {
        $this->container['splashscreen_testmode'] = $splashscreen_testmode;

        return $this;
    }

    /**
     * Gets zone_meta
     *
     * @return string
     */
    public function getZoneMeta()
    {
        return $this->container['zone_meta'];
    }

    /**
     * Sets zone_meta
     *
     * @param string $zone_meta zone_meta
     *
     * @return $this
     */
    public function setZoneMeta($zone_meta)
    {
        $this->container['zone_meta'] = $zone_meta;

        return $this;
    }

    /**
     * Gets zone_css
     *
     * @return string
     */
    public function getZoneCss()
    {
        return $this->container['zone_css'];
    }

    /**
     * Sets zone_css
     *
     * @param string $zone_css zone_css
     *
     * @return $this
     */
    public function setZoneCss($zone_css)
    {
        $this->container['zone_css'] = $zone_css;

        return $this;
    }

    /**
     * Gets zone_js
     *
     * @return string
     */
    public function getZoneJs()
    {
        return $this->container['zone_js'];
    }

    /**
     * Sets zone_js
     *
     * @param string $zone_js zone_js
     *
     * @return $this
     */
    public function setZoneJs($zone_js)
    {
        $this->container['zone_js'] = $zone_js;

        return $this;
    }

    /**
     * Gets hide_dashboard_welcome_box
     *
     * @return bool
     */
    public function getHideDashboardWelcomeBox()
    {
        return $this->container['hide_dashboard_welcome_box'];
    }

    /**
     * Sets hide_dashboard_welcome_box
     *
     * @param bool $hide_dashboard_welcome_box TODO en session
     *
     * @return $this
     */
    public function setHideDashboardWelcomeBox($hide_dashboard_welcome_box)
    {
        $this->container['hide_dashboard_welcome_box'] = $hide_dashboard_welcome_box;

        return $this;
    }

    /**
     * Gets dashboard_message
     *
     * @return string
     */
    public function getDashboardMessage()
    {
        return $this->container['dashboard_message'];
    }

    /**
     * Sets dashboard_message
     *
     * @param string $dashboard_message dashboard_message
     *
     * @return $this
     */
    public function setDashboardMessage($dashboard_message)
    {
        $this->container['dashboard_message'] = $dashboard_message;

        return $this;
    }

    /**
     * Gets slidshow_options
     *
     * @return string[]
     */
    public function getSlidshowOptions()
    {
        return $this->container['slidshow_options'];
    }

    /**
     * Sets slidshow_options
     *
     * @param string[] $slidshow_options slidshow_options
     *
     * @return $this
     */
    public function setSlidshowOptions($slidshow_options)
    {
        $this->container['slidshow_options'] = $slidshow_options;

        return $this;
    }

    /**
     * Gets favicon
     *
     * @return AnyOfSiteFavicon
     */
    public function getFavicon()
    {
        return $this->container['favicon'];
    }

    /**
     * Sets favicon
     *
     * @param AnyOfSiteFavicon $favicon favicon
     *
     * @return $this
     */
    public function setFavicon($favicon)
    {
        $this->container['favicon'] = $favicon;

        return $this;
    }

    /**
     * Gets homepage_module_id
     *
     * @return string
     */
    public function getHomepageModuleId()
    {
        return $this->container['homepage_module_id'];
    }

    /**
     * Sets homepage_module_id
     *
     * @param string $homepage_module_id homepage_module_id
     *
     * @return $this
     */
    public function setHomepageModuleId($homepage_module_id)
    {
        $this->container['homepage_module_id'] = $homepage_module_id;

        return $this;
    }

    /**
     * Gets preview_token
     *
     * @return string
     */
    public function getPreviewToken()
    {
        return $this->container['preview_token'];
    }

    /**
     * Sets preview_token
     *
     * @param string $preview_token preview_token
     *
     * @return $this
     */
    public function setPreviewToken($preview_token)
    {
        $this->container['preview_token'] = $preview_token;

        return $this;
    }

    /**
     * Gets searchindex_dt
     *
     * @return int
     */
    public function getSearchindexDt()
    {
        return $this->container['searchindex_dt'];
    }

    /**
     * Sets searchindex_dt
     *
     * @param int $searchindex_dt searchindex_dt
     *
     * @return $this
     */
    public function setSearchindexDt($searchindex_dt)
    {
        $this->container['searchindex_dt'] = $searchindex_dt;

        return $this;
    }

    /**
     * Gets robots_auto
     *
     * @return bool
     */
    public function getRobotsAuto()
    {
        return $this->container['robots_auto'];
    }

    /**
     * Sets robots_auto
     *
     * @param bool $robots_auto robots_auto
     *
     * @return $this
     */
    public function setRobotsAuto($robots_auto)
    {
        $this->container['robots_auto'] = $robots_auto;

        return $this;
    }

    /**
     * Gets robots
     *
     * @return string
     */
    public function getRobots()
    {
        return $this->container['robots'];
    }

    /**
     * Sets robots
     *
     * @param string $robots robots
     *
     * @return $this
     */
    public function setRobots($robots)
    {
        $this->container['robots'] = $robots;

        return $this;
    }

    /**
     * Gets filesizequota_used
     *
     * @return int
     */
    public function getFilesizequotaUsed()
    {
        return $this->container['filesizequota_used'];
    }

    /**
     * Sets filesizequota_used
     *
     * @param int $filesizequota_used filesizequota_used
     *
     * @return $this
     */
    public function setFilesizequotaUsed($filesizequota_used)
    {
        $this->container['filesizequota_used'] = $filesizequota_used;

        return $this;
    }

    /**
     * Gets used_storage_quota
     *
     * @return int
     */
    public function getUsedStorageQuota()
    {
        return $this->container['used_storage_quota'];
    }

    /**
     * Sets used_storage_quota
     *
     * @param int $used_storage_quota used_storage_quota
     *
     * @return $this
     */
    public function setUsedStorageQuota($used_storage_quota)
    {
        $this->container['used_storage_quota'] = $used_storage_quota;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets email_sender_name
     *
     * @return string
     */
    public function getEmailSenderName()
    {
        return $this->container['email_sender_name'];
    }

    /**
     * Sets email_sender_name
     *
     * @param string $email_sender_name email_sender_name
     *
     * @return $this
     */
    public function setEmailSenderName($email_sender_name)
    {
        $this->container['email_sender_name'] = $email_sender_name;

        return $this;
    }

    /**
     * Gets activity
     *
     * @return string
     */
    public function getActivity()
    {
        return $this->container['activity'];
    }

    /**
     * Sets activity
     *
     * @param string $activity activity
     *
     * @return $this
     */
    public function setActivity($activity)
    {
        $this->container['activity'] = $activity;

        return $this;
    }

    /**
     * Gets theme_version
     *
     * @return int
     */
    public function getThemeVersion()
    {
        return $this->container['theme_version'];
    }

    /**
     * Sets theme_version
     *
     * @param int $theme_version theme_version
     *
     * @return $this
     */
    public function setThemeVersion($theme_version)
    {
        $this->container['theme_version'] = $theme_version;

        return $this;
    }

    /**
     * Gets shortcut_icon
     *
     * @return AnyOfSiteShortcutIcon
     */
    public function getShortcutIcon()
    {
        return $this->container['shortcut_icon'];
    }

    /**
     * Sets shortcut_icon
     *
     * @param AnyOfSiteShortcutIcon $shortcut_icon shortcut_icon
     *
     * @return $this
     */
    public function setShortcutIcon($shortcut_icon)
    {
        $this->container['shortcut_icon'] = $shortcut_icon;

        return $this;
    }

    /**
     * Gets sitemap_auto
     *
     * @return bool
     */
    public function getSitemapAuto()
    {
        return $this->container['sitemap_auto'];
    }

    /**
     * Sets sitemap_auto
     *
     * @param bool $sitemap_auto sitemap_auto
     *
     * @return $this
     */
    public function setSitemapAuto($sitemap_auto)
    {
        $this->container['sitemap_auto'] = $sitemap_auto;

        return $this;
    }

    /**
     * Gets google_webmaster_meta
     *
     * @return string
     */
    public function getGoogleWebmasterMeta()
    {
        return $this->container['google_webmaster_meta'];
    }

    /**
     * Sets google_webmaster_meta
     *
     * @param string $google_webmaster_meta google_webmaster_meta
     *
     * @return $this
     */
    public function setGoogleWebmasterMeta($google_webmaster_meta)
    {
        $this->container['google_webmaster_meta'] = $google_webmaster_meta;

        return $this;
    }

    /**
     * Gets bing_webmaster_meta
     *
     * @return string
     */
    public function getBingWebmasterMeta()
    {
        return $this->container['bing_webmaster_meta'];
    }

    /**
     * Sets bing_webmaster_meta
     *
     * @param string $bing_webmaster_meta bing_webmaster_meta
     *
     * @return $this
     */
    public function setBingWebmasterMeta($bing_webmaster_meta)
    {
        $this->container['bing_webmaster_meta'] = $bing_webmaster_meta;

        return $this;
    }

    /**
     * Gets search_console_meta
     *
     * @return string
     */
    public function getSearchConsoleMeta()
    {
        return $this->container['search_console_meta'];
    }

    /**
     * Sets search_console_meta
     *
     * @param string $search_console_meta search_console_meta
     *
     * @return $this
     */
    public function setSearchConsoleMeta($search_console_meta)
    {
        $this->container['search_console_meta'] = $search_console_meta;

        return $this;
    }

    /**
     * Gets begin_tab_closed
     *
     * @return bool
     */
    public function getBeginTabClosed()
    {
        return $this->container['begin_tab_closed'];
    }

    /**
     * Sets begin_tab_closed
     *
     * @param bool $begin_tab_closed TODO en session
     *
     * @return $this
     */
    public function setBeginTabClosed($begin_tab_closed)
    {
        $this->container['begin_tab_closed'] = $begin_tab_closed;

        return $this;
    }

    /**
     * Gets scheme
     *
     * @return string
     */
    public function getScheme()
    {
        return $this->container['scheme'];
    }

    /**
     * Sets scheme
     *
     * @param string $scheme scheme
     *
     * @return $this
     */
    public function setScheme($scheme)
    {
        $this->container['scheme'] = $scheme;

        return $this;
    }

    /**
     * Gets google_maps_api_key
     *
     * @return string
     */
    public function getGoogleMapsApiKey()
    {
        return $this->container['google_maps_api_key'];
    }

    /**
     * Sets google_maps_api_key
     *
     * @param string $google_maps_api_key google_maps_api_key
     *
     * @return $this
     */
    public function setGoogleMapsApiKey($google_maps_api_key)
    {
        $this->container['google_maps_api_key'] = $google_maps_api_key;

        return $this;
    }

    /**
     * Gets recaptcha2
     *
     * @return bool
     */
    public function getRecaptcha2()
    {
        return $this->container['recaptcha2'];
    }

    /**
     * Sets recaptcha2
     *
     * @param bool $recaptcha2 recaptcha2
     *
     * @return $this
     */
    public function setRecaptcha2($recaptcha2)
    {
        $this->container['recaptcha2'] = $recaptcha2;

        return $this;
    }

    /**
     * Gets recaptcha2_site_key
     *
     * @return string
     */
    public function getRecaptcha2SiteKey()
    {
        return $this->container['recaptcha2_site_key'];
    }

    /**
     * Sets recaptcha2_site_key
     *
     * @param string $recaptcha2_site_key recaptcha2_site_key
     *
     * @return $this
     */
    public function setRecaptcha2SiteKey($recaptcha2_site_key)
    {
        $this->container['recaptcha2_site_key'] = $recaptcha2_site_key;

        return $this;
    }

    /**
     * Gets recaptcha2_secret_key
     *
     * @return string
     */
    public function getRecaptcha2SecretKey()
    {
        return $this->container['recaptcha2_secret_key'];
    }

    /**
     * Sets recaptcha2_secret_key
     *
     * @param string $recaptcha2_secret_key recaptcha2_secret_key
     *
     * @return $this
     */
    public function setRecaptcha2SecretKey($recaptcha2_secret_key)
    {
        $this->container['recaptcha2_secret_key'] = $recaptcha2_secret_key;

        return $this;
    }

    /**
     * Gets paypal2_merchantid
     *
     * @return string
     */
    public function getPaypal2Merchantid()
    {
        return $this->container['paypal2_merchantid'];
    }

    /**
     * Sets paypal2_merchantid
     *
     * @param string $paypal2_merchantid paypal2_merchantid
     *
     * @return $this
     */
    public function setPaypal2Merchantid($paypal2_merchantid)
    {
        $this->container['paypal2_merchantid'] = $paypal2_merchantid;

        return $this;
    }

    /**
     * Gets paypal2_merchantidinpaypal
     *
     * @return string
     */
    public function getPaypal2Merchantidinpaypal()
    {
        return $this->container['paypal2_merchantidinpaypal'];
    }

    /**
     * Sets paypal2_merchantidinpaypal
     *
     * @param string $paypal2_merchantidinpaypal paypal2_merchantidinpaypal
     *
     * @return $this
     */
    public function setPaypal2Merchantidinpaypal($paypal2_merchantidinpaypal)
    {
        $this->container['paypal2_merchantidinpaypal'] = $paypal2_merchantidinpaypal;

        return $this;
    }

    /**
     * Gets paypal2_email
     *
     * @return string
     */
    public function getPaypal2Email()
    {
        return $this->container['paypal2_email'];
    }

    /**
     * Sets paypal2_email
     *
     * @param string $paypal2_email paypal2_email
     *
     * @return $this
     */
    public function setPaypal2Email($paypal2_email)
    {
        $this->container['paypal2_email'] = $paypal2_email;

        return $this;
    }

    /**
     * Gets paypal2_returnmessage
     *
     * @return string
     */
    public function getPaypal2Returnmessage()
    {
        return $this->container['paypal2_returnmessage'];
    }

    /**
     * Sets paypal2_returnmessage
     *
     * @param string $paypal2_returnmessage paypal2_returnmessage
     *
     * @return $this
     */
    public function setPaypal2Returnmessage($paypal2_returnmessage)
    {
        $this->container['paypal2_returnmessage'] = $paypal2_returnmessage;

        return $this;
    }

    /**
     * Gets paypal2_valid
     *
     * @return bool
     */
    public function getPaypal2Valid()
    {
        return $this->container['paypal2_valid'];
    }

    /**
     * Sets paypal2_valid
     *
     * @param bool $paypal2_valid paypal2_valid
     *
     * @return $this
     */
    public function setPaypal2Valid($paypal2_valid)
    {
        $this->container['paypal2_valid'] = $paypal2_valid;

        return $this;
    }

    /**
     * Gets paypal2_paymentexperience
     *
     * @return string
     */
    public function getPaypal2Paymentexperience()
    {
        return $this->container['paypal2_paymentexperience'];
    }

    /**
     * Sets paypal2_paymentexperience
     *
     * @param string $paypal2_paymentexperience paypal2_paymentexperience
     *
     * @return $this
     */
    public function setPaypal2Paymentexperience($paypal2_paymentexperience)
    {
        $this->container['paypal2_paymentexperience'] = $paypal2_paymentexperience;

        return $this;
    }

    /**
     * Gets social_networks
     *
     * @return string[]
     */
    public function getSocialNetworks()
    {
        return $this->container['social_networks'];
    }

    /**
     * Sets social_networks
     *
     * @param string[] $social_networks social_networks
     *
     * @return $this
     */
    public function setSocialNetworks($social_networks)
    {
        $this->container['social_networks'] = $social_networks;

        return $this;
    }

    /**
     * Gets ads_auto
     *
     * @return bool
     */
    public function getAdsAuto()
    {
        return $this->container['ads_auto'];
    }

    /**
     * Sets ads_auto
     *
     * @param bool $ads_auto ads_auto
     *
     * @return $this
     */
    public function setAdsAuto($ads_auto)
    {
        $this->container['ads_auto'] = $ads_auto;

        return $this;
    }

    /**
     * Gets ads
     *
     * @return string
     */
    public function getAds()
    {
        return $this->container['ads'];
    }

    /**
     * Sets ads
     *
     * @param string $ads ads
     *
     * @return $this
     */
    public function setAds($ads)
    {
        $this->container['ads'] = $ads;

        return $this;
    }

    /**
     * Gets googlefont
     *
     * @return string
     */
    public function getGooglefont()
    {
        return $this->container['googlefont'];
    }

    /**
     * Sets googlefont
     *
     * @param string $googlefont wtf default ? TODO checker type array
     *
     * @return $this
     */
    public function setGooglefont($googlefont)
    {
        $this->container['googlefont'] = $googlefont;

        return $this;
    }

    /**
     * Gets token_instagram
     *
     * @return string
     */
    public function getTokenInstagram()
    {
        return $this->container['token_instagram'];
    }

    /**
     * Sets token_instagram
     *
     * @param string $token_instagram token_instagram
     *
     * @return $this
     */
    public function setTokenInstagram($token_instagram)
    {
        $this->container['token_instagram'] = $token_instagram;

        return $this;
    }

    /**
     * Gets token_instagram_expire_dt
     *
     * @return int
     */
    public function getTokenInstagramExpireDt()
    {
        return $this->container['token_instagram_expire_dt'];
    }

    /**
     * Sets token_instagram_expire_dt
     *
     * @param int $token_instagram_expire_dt token_instagram_expire_dt
     *
     * @return $this
     */
    public function setTokenInstagramExpireDt($token_instagram_expire_dt)
    {
        $this->container['token_instagram_expire_dt'] = $token_instagram_expire_dt;

        return $this;
    }

    /**
     * Gets instagram_token
     *
     * @return string
     */
    public function getInstagramToken()
    {
        return $this->container['instagram_token'];
    }

    /**
     * Sets instagram_token
     *
     * @param string $instagram_token instagram_token
     *
     * @return $this
     */
    public function setInstagramToken($instagram_token)
    {
        $this->container['instagram_token'] = $instagram_token;

        return $this;
    }

    /**
     * Gets instagramtoken_expiration_dt
     *
     * @return int
     */
    public function getInstagramtokenExpirationDt()
    {
        return $this->container['instagramtoken_expiration_dt'];
    }

    /**
     * Sets instagramtoken_expiration_dt
     *
     * @param int $instagramtoken_expiration_dt instagramtoken_expiration_dt
     *
     * @return $this
     */
    public function setInstagramtokenExpirationDt($instagramtoken_expiration_dt)
    {
        $this->container['instagramtoken_expiration_dt'] = $instagramtoken_expiration_dt;

        return $this;
    }

    /**
     * Gets instagram_token_expired
     *
     * @return bool
     */
    public function getInstagramTokenExpired()
    {
        return $this->container['instagram_token_expired'];
    }

    /**
     * Sets instagram_token_expired
     *
     * @param bool $instagram_token_expired instagram_token_expired
     *
     * @return $this
     */
    public function setInstagramTokenExpired($instagram_token_expired)
    {
        $this->container['instagram_token_expired'] = $instagram_token_expired;

        return $this;
    }

    /**
     * Gets nb_days_before_instagram_token_expire
     *
     * @return int
     */
    public function getNbDaysBeforeInstagramTokenExpire()
    {
        return $this->container['nb_days_before_instagram_token_expire'];
    }

    /**
     * Sets nb_days_before_instagram_token_expire
     *
     * @param int $nb_days_before_instagram_token_expire nb_days_before_instagram_token_expire
     *
     * @return $this
     */
    public function setNbDaysBeforeInstagramTokenExpire($nb_days_before_instagram_token_expire)
    {
        $this->container['nb_days_before_instagram_token_expire'] = $nb_days_before_instagram_token_expire;

        return $this;
    }

    /**
     * Gets storage_folders
     *
     * @return \Emonsite\Models\StorageFolder[]
     */
    public function getStorageFolders()
    {
        return $this->container['storage_folders'];
    }

    /**
     * Sets storage_folders
     *
     * @param \Emonsite\Models\StorageFolder[] $storage_folders storage_folders
     *
     * @return $this
     */
    public function setStorageFolders($storage_folders)
    {
        $this->container['storage_folders'] = $storage_folders;

        return $this;
    }

    /**
     * Gets storage_folder
     *
     * @return \Emonsite\Models\StorageFolder[]
     */
    public function getStorageFolder()
    {
        return $this->container['storage_folder'];
    }

    /**
     * Sets storage_folder
     *
     * @param \Emonsite\Models\StorageFolder[] $storage_folder storage_folder
     *
     * @return $this
     */
    public function setStorageFolder($storage_folder)
    {
        $this->container['storage_folder'] = $storage_folder;

        return $this;
    }

    /**
     * Gets site_langs
     *
     * @return \Emonsite\Models\SiteLang[]
     */
    public function getSiteLangs()
    {
        return $this->container['site_langs'];
    }

    /**
     * Sets site_langs
     *
     * @param \Emonsite\Models\SiteLang[] $site_langs site_langs
     *
     * @return $this
     */
    public function setSiteLangs($site_langs)
    {
        $this->container['site_langs'] = $site_langs;

        return $this;
    }

    /**
     * Gets default_site_lang
     *
     * @return \Emonsite\Models\SiteLang
     */
    public function getDefaultSiteLang()
    {
        return $this->container['default_site_lang'];
    }

    /**
     * Sets default_site_lang
     *
     * @param \Emonsite\Models\SiteLang $default_site_lang default_site_lang
     *
     * @return $this
     */
    public function setDefaultSiteLang($default_site_lang)
    {
        $this->container['default_site_lang'] = $default_site_lang;

        return $this;
    }

    /**
     * Gets active_site_langs
     *
     * @return string[]
     */
    public function getActiveSiteLangs()
    {
        return $this->container['active_site_langs'];
    }

    /**
     * Sets active_site_langs
     *
     * @param string[] $active_site_langs active_site_langs
     *
     * @return $this
     */
    public function setActiveSiteLangs($active_site_langs)
    {
        $this->container['active_site_langs'] = $active_site_langs;

        return $this;
    }

    /**
     * Gets lang
     *
     * @return string[]
     */
    public function getLang()
    {
        return $this->container['lang'];
    }

    /**
     * Sets lang
     *
     * @param string[] $lang lang
     *
     * @return $this
     */
    public function setLang($lang)
    {
        $this->container['lang'] = $lang;

        return $this;
    }

    /**
     * Gets custom_theme_variations
     *
     * @return \Emonsite\Models\CustomThemeVariation[]
     */
    public function getCustomThemeVariations()
    {
        return $this->container['custom_theme_variations'];
    }

    /**
     * Sets custom_theme_variations
     *
     * @param \Emonsite\Models\CustomThemeVariation[] $custom_theme_variations custom_theme_variations
     *
     * @return $this
     */
    public function setCustomThemeVariations($custom_theme_variations)
    {
        $this->container['custom_theme_variations'] = $custom_theme_variations;

        return $this;
    }

    /**
     * Gets custom_theme_variation
     *
     * @return \Emonsite\Models\CustomThemeVariation
     */
    public function getCustomThemeVariation()
    {
        return $this->container['custom_theme_variation'];
    }

    /**
     * Sets custom_theme_variation
     *
     * @param \Emonsite\Models\CustomThemeVariation $custom_theme_variation custom_theme_variation
     *
     * @return $this
     */
    public function setCustomThemeVariation($custom_theme_variation)
    {
        $this->container['custom_theme_variation'] = $custom_theme_variation;

        return $this;
    }

    /**
     * Gets modules
     *
     * @return string[]
     */
    public function getModules()
    {
        return $this->container['modules'];
    }

    /**
     * Sets modules
     *
     * @param string[] $modules modules
     *
     * @return $this
     */
    public function setModules($modules)
    {
        $this->container['modules'] = $modules;

        return $this;
    }

    /**
     * Gets module
     *
     * @return string[]
     */
    public function getModule()
    {
        return $this->container['module'];
    }

    /**
     * Sets module
     *
     * @param string[] $module module
     *
     * @return $this
     */
    public function setModule($module)
    {
        $this->container['module'] = $module;

        return $this;
    }

    /**
     * Gets wuro_enabled
     *
     * @return bool
     */
    public function getWuroEnabled()
    {
        return $this->container['wuro_enabled'];
    }

    /**
     * Sets wuro_enabled
     *
     * @param bool $wuro_enabled wuro_enabled
     *
     * @return $this
     */
    public function setWuroEnabled($wuro_enabled)
    {
        $this->container['wuro_enabled'] = $wuro_enabled;

        return $this;
    }

    /**
     * Gets wuro_api_end_point
     *
     * @return string
     */
    public function getWuroApiEndPoint()
    {
        return $this->container['wuro_api_end_point'];
    }

    /**
     * Sets wuro_api_end_point
     *
     * @param string $wuro_api_end_point wuro_api_end_point
     *
     * @return $this
     */
    public function setWuroApiEndPoint($wuro_api_end_point)
    {
        $this->container['wuro_api_end_point'] = $wuro_api_end_point;

        return $this;
    }

    /**
     * Gets wuro_app_id
     *
     * @return string
     */
    public function getWuroAppId()
    {
        return $this->container['wuro_app_id'];
    }

    /**
     * Sets wuro_app_id
     *
     * @param string $wuro_app_id wuro_app_id
     *
     * @return $this
     */
    public function setWuroAppId($wuro_app_id)
    {
        $this->container['wuro_app_id'] = $wuro_app_id;

        return $this;
    }

    /**
     * Gets wuro_app_secret
     *
     * @return string
     */
    public function getWuroAppSecret()
    {
        return $this->container['wuro_app_secret'];
    }

    /**
     * Sets wuro_app_secret
     *
     * @param string $wuro_app_secret wuro_app_secret
     *
     * @return $this
     */
    public function setWuroAppSecret($wuro_app_secret)
    {
        $this->container['wuro_app_secret'] = $wuro_app_secret;

        return $this;
    }

    /**
     * Gets captcha
     *
     * @return string
     */
    public function getCaptcha()
    {
        return $this->container['captcha'];
    }

    /**
     * Sets captcha
     *
     * @param string $captcha captcha
     *
     * @return $this
     */
    public function setCaptcha($captcha)
    {
        $this->container['captcha'] = $captcha;

        return $this;
    }

    /**
     * Gets eco_config
     *
     * @return AnyOfSiteEcoConfig
     */
    public function getEcoConfig()
    {
        return $this->container['eco_config'];
    }

    /**
     * Sets eco_config
     *
     * @param AnyOfSiteEcoConfig $eco_config eco_config
     *
     * @return $this
     */
    public function setEcoConfig($eco_config)
    {
        $this->container['eco_config'] = $eco_config;

        return $this;
    }

    /**
     * Gets config_lp
     *
     * @return AnyOfSiteConfigLp
     */
    public function getConfigLp()
    {
        return $this->container['config_lp'];
    }

    /**
     * Sets config_lp
     *
     * @param AnyOfSiteConfigLp $config_lp config_lp
     *
     * @return $this
     */
    public function setConfigLp($config_lp)
    {
        $this->container['config_lp'] = $config_lp;

        return $this;
    }

    /**
     * Gets eco_advices_config
     *
     * @return AnyOfSiteEcoAdvicesConfig
     */
    public function getEcoAdvicesConfig()
    {
        return $this->container['eco_advices_config'];
    }

    /**
     * Sets eco_advices_config
     *
     * @param AnyOfSiteEcoAdvicesConfig $eco_advices_config eco_advices_config
     *
     * @return $this
     */
    public function setEcoAdvicesConfig($eco_advices_config)
    {
        $this->container['eco_advices_config'] = $eco_advices_config;

        return $this;
    }

    /**
     * Gets eco_store_delivery
     *
     * @return AnyOfSiteEcoStoreDelivery
     */
    public function getEcoStoreDelivery()
    {
        return $this->container['eco_store_delivery'];
    }

    /**
     * Sets eco_store_delivery
     *
     * @param AnyOfSiteEcoStoreDelivery $eco_store_delivery eco_store_delivery
     *
     * @return $this
     */
    public function setEcoStoreDelivery($eco_store_delivery)
    {
        $this->container['eco_store_delivery'] = $eco_store_delivery;

        return $this;
    }

    /**
     * Gets hcaptcha_site_key
     *
     * @return string
     */
    public function getHcaptchaSiteKey()
    {
        return $this->container['hcaptcha_site_key'];
    }

    /**
     * Sets hcaptcha_site_key
     *
     * @param string $hcaptcha_site_key hcaptcha_site_key
     *
     * @return $this
     */
    public function setHcaptchaSiteKey($hcaptcha_site_key)
    {
        $this->container['hcaptcha_site_key'] = $hcaptcha_site_key;

        return $this;
    }

    /**
     * Gets hcaptcha_secret_key
     *
     * @return string
     */
    public function getHcaptchaSecretKey()
    {
        return $this->container['hcaptcha_secret_key'];
    }

    /**
     * Sets hcaptcha_secret_key
     *
     * @param string $hcaptcha_secret_key hcaptcha_secret_key
     *
     * @return $this
     */
    public function setHcaptchaSecretKey($hcaptcha_secret_key)
    {
        $this->container['hcaptcha_secret_key'] = $hcaptcha_secret_key;

        return $this;
    }

    /**
     * Gets eco_orders
     *
     * @return string[]
     */
    public function getEcoOrders()
    {
        return $this->container['eco_orders'];
    }

    /**
     * Sets eco_orders
     *
     * @param string[] $eco_orders eco_orders
     *
     * @return $this
     */
    public function setEcoOrders($eco_orders)
    {
        $this->container['eco_orders'] = $eco_orders;

        return $this;
    }

    /**
     * Gets eco_collection_points
     *
     * @return string[]
     */
    public function getEcoCollectionPoints()
    {
        return $this->container['eco_collection_points'];
    }

    /**
     * Sets eco_collection_points
     *
     * @param string[] $eco_collection_points eco_collection_points
     *
     * @return $this
     */
    public function setEcoCollectionPoints($eco_collection_points)
    {
        $this->container['eco_collection_points'] = $eco_collection_points;

        return $this;
    }

    /**
     * Gets carriers
     *
     * @return string[]
     */
    public function getCarriers()
    {
        return $this->container['carriers'];
    }

    /**
     * Sets carriers
     *
     * @param string[] $carriers carriers
     *
     * @return $this
     */
    public function setCarriers($carriers)
    {
        $this->container['carriers'] = $carriers;

        return $this;
    }

    /**
     * Gets cel_soft_deletion
     *
     * @return \Emonsite\Models\Site
     */
    public function getCelSoftDeletion()
    {
        return $this->container['cel_soft_deletion'];
    }

    /**
     * Sets cel_soft_deletion
     *
     * @param \Emonsite\Models\Site $cel_soft_deletion cel_soft_deletion
     *
     * @return $this
     */
    public function setCelSoftDeletion($cel_soft_deletion)
    {
        $this->container['cel_soft_deletion'] = $cel_soft_deletion;

        return $this;
    }

    /**
     * Gets webhooks
     *
     * @return \Emonsite\Models\Webhook[]
     */
    public function getWebhooks()
    {
        return $this->container['webhooks'];
    }

    /**
     * Sets webhooks
     *
     * @param \Emonsite\Models\Webhook[] $webhooks webhooks
     *
     * @return $this
     */
    public function setWebhooks($webhooks)
    {
        $this->container['webhooks'] = $webhooks;

        return $this;
    }

    /**
     * Gets nb_days_since_creation
     *
     * @return int
     */
    public function getNbDaysSinceCreation()
    {
        return $this->container['nb_days_since_creation'];
    }

    /**
     * Sets nb_days_since_creation
     *
     * @param int $nb_days_since_creation nb_days_since_creation
     *
     * @return $this
     */
    public function setNbDaysSinceCreation($nb_days_since_creation)
    {
        $this->container['nb_days_since_creation'] = $nb_days_since_creation;

        return $this;
    }

    /**
     * Gets structures_payment
     *
     * @return \Emonsite\Models\StructurePayment[]
     */
    public function getStructuresPayment()
    {
        return $this->container['structures_payment'];
    }

    /**
     * Sets structures_payment
     *
     * @param \Emonsite\Models\StructurePayment[] $structures_payment structures_payment
     *
     * @return $this
     */
    public function setStructuresPayment($structures_payment)
    {
        $this->container['structures_payment'] = $structures_payment;

        return $this;
    }

    /**
     * Gets editable_zones_bottom_site_block
     *
     * @return AnyOfSiteEditableZonesBottomSiteBlock
     */
    public function getEditableZonesBottomSiteBlock()
    {
        return $this->container['editable_zones_bottom_site_block'];
    }

    /**
     * Sets editable_zones_bottom_site_block
     *
     * @param AnyOfSiteEditableZonesBottomSiteBlock $editable_zones_bottom_site_block editable_zones_bottom_site_block
     *
     * @return $this
     */
    public function setEditableZonesBottomSiteBlock($editable_zones_bottom_site_block)
    {
        $this->container['editable_zones_bottom_site_block'] = $editable_zones_bottom_site_block;

        return $this;
    }

    /**
     * Gets member_options
     *
     * @return AnyOfSiteMemberOptions
     */
    public function getMemberOptions()
    {
        return $this->container['member_options'];
    }

    /**
     * Sets member_options
     *
     * @param AnyOfSiteMemberOptions $member_options member_options
     *
     * @return $this
     */
    public function setMemberOptions($member_options)
    {
        $this->container['member_options'] = $member_options;

        return $this;
    }

    /**
     * Gets legal
     *
     * @return AnyOfSiteLegal
     */
    public function getLegal()
    {
        return $this->container['legal'];
    }

    /**
     * Sets legal
     *
     * @param AnyOfSiteLegal $legal legal
     *
     * @return $this
     */
    public function setLegal($legal)
    {
        $this->container['legal'] = $legal;

        return $this;
    }

    /**
     * Gets in_store_pick_up_points
     *
     * @return 
     */
    public function getInStorePickUpPoints()
    {
        return $this->container['in_store_pick_up_points'];
    }

    /**
     * Sets in_store_pick_up_points
     *
     * @param  $in_store_pick_up_points Retourne la liste des points de retrait magasin uniquement
     *
     * @return $this
     */
    public function setInStorePickUpPoints($in_store_pick_up_points)
    {
        $this->container['in_store_pick_up_points'] = $in_store_pick_up_points;

        return $this;
    }

    /**
     * Gets structure_widgets
     *
     * @return \Emonsite\Models\StructureWidgets[]
     */
    public function getStructureWidgets()
    {
        return $this->container['structure_widgets'];
    }

    /**
     * Sets structure_widgets
     *
     * @param \Emonsite\Models\StructureWidgets[] $structure_widgets structure_widgets
     *
     * @return $this
     */
    public function setStructureWidgets($structure_widgets)
    {
        $this->container['structure_widgets'] = $structure_widgets;

        return $this;
    }

    /**
     * Gets default_menu_h_widget
     *
     * @return AnyOfSiteDefaultMenuHWidget
     */
    public function getDefaultMenuHWidget()
    {
        return $this->container['default_menu_h_widget'];
    }

    /**
     * Sets default_menu_h_widget
     *
     * @param AnyOfSiteDefaultMenuHWidget $default_menu_h_widget return le widget menu H par défaut
     *
     * @return $this
     */
    public function setDefaultMenuHWidget($default_menu_h_widget)
    {
        $this->container['default_menu_h_widget'] = $default_menu_h_widget;

        return $this;
    }

    /**
     * Gets structures
     *
     * @return \Emonsite\Models\Structure[]
     */
    public function getStructures()
    {
        return $this->container['structures'];
    }

    /**
     * Sets structures
     *
     * @param \Emonsite\Models\Structure[] $structures structures
     *
     * @return $this
     */
    public function setStructures($structures)
    {
        $this->container['structures'] = $structures;

        return $this;
    }

    /**
     * Gets not_found_page_block
     *
     * @return AnyOfSiteNotFoundPageBlock
     */
    public function getNotFoundPageBlock()
    {
        return $this->container['not_found_page_block'];
    }

    /**
     * Sets not_found_page_block
     *
     * @param AnyOfSiteNotFoundPageBlock $not_found_page_block not_found_page_block
     *
     * @return $this
     */
    public function setNotFoundPageBlock($not_found_page_block)
    {
        $this->container['not_found_page_block'] = $not_found_page_block;

        return $this;
    }

    /**
     * Gets browser_extension_enabled
     *
     * @return bool
     */
    public function getBrowserExtensionEnabled()
    {
        return $this->container['browser_extension_enabled'];
    }

    /**
     * Sets browser_extension_enabled
     *
     * @param bool $browser_extension_enabled browser_extension_enabled
     *
     * @return $this
     */
    public function setBrowserExtensionEnabled($browser_extension_enabled)
    {
        $this->container['browser_extension_enabled'] = $browser_extension_enabled;

        return $this;
    }

    /**
     * Gets edirectory_order_options
     *
     * @return AnyOfSiteEdirectoryOrderOptions
     */
    public function getEdirectoryOrderOptions()
    {
        return $this->container['edirectory_order_options'];
    }

    /**
     * Sets edirectory_order_options
     *
     * @param AnyOfSiteEdirectoryOrderOptions $edirectory_order_options edirectory_order_options
     *
     * @return $this
     */
    public function setEdirectoryOrderOptions($edirectory_order_options)
    {
        $this->container['edirectory_order_options'] = $edirectory_order_options;

        return $this;
    }

    /**
     * Gets add_dt
     *
     * @return int
     */
    public function getAddDt()
    {
        return $this->container['add_dt'];
    }

    /**
     * Sets add_dt
     *
     * @param int $add_dt add_dt
     *
     * @return $this
     */
    public function setAddDt($add_dt)
    {
        $this->container['add_dt'] = $add_dt;

        return $this;
    }

    /**
     * Gets upd_dt
     *
     * @return int
     */
    public function getUpdDt()
    {
        return $this->container['upd_dt'];
    }

    /**
     * Sets upd_dt
     *
     * @param int $upd_dt upd_dt
     *
     * @return $this
     */
    public function setUpdDt($upd_dt)
    {
        $this->container['upd_dt'] = $upd_dt;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets add_user_id
     *
     * @return string
     */
    public function getAddUserId()
    {
        return $this->container['add_user_id'];
    }

    /**
     * Sets add_user_id
     *
     * @param string $add_user_id add_user_id
     *
     * @return $this
     */
    public function setAddUserId($add_user_id)
    {
        $this->container['add_user_id'] = $add_user_id;

        return $this;
    }

    /**
     * Gets upd_user_id
     *
     * @return string
     */
    public function getUpdUserId()
    {
        return $this->container['upd_user_id'];
    }

    /**
     * Sets upd_user_id
     *
     * @param string $upd_user_id upd_user_id
     *
     * @return $this
     */
    public function setUpdUserId($upd_user_id)
    {
        $this->container['upd_user_id'] = $upd_user_id;

        return $this;
    }

    /**
     * Gets versions
     *
     * @return \Emonsite\Models\SiteV[]
     */
    public function getVersions()
    {
        return $this->container['versions'];
    }

    /**
     * Sets versions
     *
     * @param \Emonsite\Models\SiteV[] $versions IMPLEMENTEZ le mapping dans l'entity TODO trouver comment le faire dynamiquement avec un listener doctrine
     *
     * @return $this
     */
    public function setVersions($versions)
    {
        $this->container['versions'] = $versions;

        return $this;
    }

    /**
     * Gets version
     *
     * @return \Emonsite\Models\VersionInterface[]
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param \Emonsite\Models\VersionInterface[] $version version
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets version_by_lang
     *
     * @return string[]
     */
    public function getVersionByLang()
    {
        return $this->container['version_by_lang'];
    }

    /**
     * Sets version_by_lang
     *
     * @param string[] $version_by_lang version_by_lang
     *
     * @return $this
     */
    public function setVersionByLang($version_by_lang)
    {
        $this->container['version_by_lang'] = $version_by_lang;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
