{
    "paths": {
        "/auth": {
            "post": {
                "tags": [
                    "Authentification"
                ],
                "operationId": "postCredentialsItem",
                "summary": "Get a JWT token to login.",
                "requestBody": {
                    "description": "Create new JWT Token",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Credentials"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Get JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tokens"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/.well-known/acme-challenge/{certbotToken}": {
            "get": {
                "summary": "Retrieve certbot validation challenge matching token",
                "parameters": [
                    {
                        "name": "certbotToken",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "SslLe"
                ],
                "operationId": "get_sslle_validationSslLeItem",
                "responses": {
                    "204": {
                        "description": "SslLe resource response"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/album_images": {
            "get": {
                "tags": [
                    "AlbumImage"
                ],
                "operationId": "getAlbumImageCollection",
                "summary": "Retrieves the collection of AlbumImage resources.",
                "responses": {
                    "200": {
                        "description": "AlbumImage collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image[siteId]": {
                                        "type": "string"
                                    },
                                    "image[file]": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "AlbumImage"
                ],
                "operationId": "postAlbumImageCollection",
                "summary": "Creates a AlbumImage resource.",
                "responses": {
                    "201": {
                        "description": "AlbumImage resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                }
                            }
                        },
                        "links": {
                            "GetAlbumImageItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getAlbumImageItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /album_images/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/album_images/{id}": {
            "get": {
                "tags": [
                    "AlbumImage"
                ],
                "operationId": "getAlbumImageItem",
                "summary": "Retrieves a AlbumImage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "AlbumImage resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/AlbumImage:4147e3b456efec88633ecd0377e3d39b"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/begin_categories": {
            "get": {
                "tags": [
                    "BeginCategory"
                ],
                "operationId": "getBeginCategoryCollection",
                "summary": "Retrieves the collection of BeginCategoryOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BeginCategoryOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "BeginCategory"
                ],
                "operationId": "postBeginCategoryCollection",
                "summary": "Creates a BeginCategory resource.",
                "responses": {
                    "201": {
                        "description": "BeginCategory resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            }
                        },
                        "links": {
                            "GetBeginCategoryItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getBeginCategoryItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /begin_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginCategory:dc16a9bcc02b0a6b952ca856e741db30:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginCategory:dc16a9bcc02b0a6b952ca856e741db30"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginCategory:dc16a9bcc02b0a6b952ca856e741db30"
                            }
                        }
                    },
                    "description": "The new BeginCategory resource"
                }
            }
        },
        "/begin_categories/{id}": {
            "get": {
                "tags": [
                    "BeginCategory"
                ],
                "operationId": "getBeginCategoryItem",
                "summary": "Retrieves a BeginCategoryOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BeginCategoryOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "BeginCategory"
                ],
                "operationId": "patchBeginCategoryItem",
                "summary": "Updates the BeginCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BeginCategory resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginCategory:b425d7ae39b0fe04f80380a5489db196"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginCategory:f0c108203dccba65ff19d7e99e810cf3"
                            }
                        }
                    },
                    "description": "The updated BeginCategory resource"
                }
            },
            "delete": {
                "tags": [
                    "BeginCategory"
                ],
                "operationId": "deleteBeginCategoryItem",
                "summary": "Removes the BeginCategory resource.",
                "responses": {
                    "204": {
                        "description": "BeginCategory resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/begin_choices": {
            "get": {
                "tags": [
                    "BeginChoice"
                ],
                "operationId": "getBeginChoiceCollection",
                "summary": "Retrieves the collection of BeginChoiceOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BeginChoiceOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "BeginChoice"
                ],
                "operationId": "postBeginChoiceCollection",
                "summary": "Creates a BeginChoice resource.",
                "responses": {
                    "201": {
                        "description": "BeginChoice resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            }
                        },
                        "links": {
                            "GetBeginChoiceItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getBeginChoiceItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /begin_choices/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginChoice:6e2a40ac5a3e62cfe436bfdd79474c58:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginChoice:6e2a40ac5a3e62cfe436bfdd79474c58"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginChoice:6e2a40ac5a3e62cfe436bfdd79474c58"
                            }
                        }
                    },
                    "description": "The new BeginChoice resource"
                }
            }
        },
        "/begin_choices/{id}": {
            "get": {
                "tags": [
                    "BeginChoice"
                ],
                "operationId": "getBeginChoiceItem",
                "summary": "Retrieves a BeginChoiceOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BeginChoiceOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "BeginChoice"
                ],
                "operationId": "patchBeginChoiceItem",
                "summary": "Updates the BeginChoice resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BeginChoice resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BeginChoice:e3028f4ebfb2c48645a56fd863368df3"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BeginChoice:bb182fb4fb9ff316bd0e48934d37505d"
                            }
                        }
                    },
                    "description": "The updated BeginChoice resource"
                }
            },
            "delete": {
                "tags": [
                    "BeginChoice"
                ],
                "operationId": "deleteBeginChoiceItem",
                "summary": "Removes the BeginChoice resource.",
                "responses": {
                    "204": {
                        "description": "BeginChoice resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/blog_posts": {
            "get": {
                "tags": [
                    "BlogPost"
                ],
                "operationId": "getBlogPostCollection",
                "summary": "Retrieves the collection of BlogPostOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BlogPostOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "published",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "order[publishFrom]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/blog_posts/{id}": {
            "get": {
                "tags": [
                    "BlogPost"
                ],
                "operationId": "getBlogPostItem",
                "summary": "Retrieves a BlogPostOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BlogPostOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BlogPost:cfba0aa09261d831c83f1f9969814d18"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/brand_mailtemplates": {
            "get": {
                "tags": [
                    "BrandMailtemplate"
                ],
                "operationId": "getBrandMailtemplateCollection",
                "summary": "Retrieves the collection of BrandMailtemplateOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BrandMailtemplateOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/brand_mailtemplates/{id}": {
            "get": {
                "tags": [
                    "BrandMailtemplate"
                ],
                "operationId": "getBrandMailtemplateItem",
                "summary": "Retrieves a BrandMailtemplateOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandMailtemplateOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/branddomains": {
            "get": {
                "tags": [
                    "Branddomain"
                ],
                "operationId": "getBranddomainCollection",
                "summary": "Retrieves the collection of BranddomainOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BranddomainOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/branddomains/{id}": {
            "get": {
                "tags": [
                    "Branddomain"
                ],
                "operationId": "getBranddomainItem",
                "summary": "Retrieves a BranddomainOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BranddomainOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/brands": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandCollection",
                "summary": "Retrieves the collection of BrandOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "BrandOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/brands/{id}": {
            "get": {
                "tags": [
                    "Brand"
                ],
                "operationId": "getBrandItem",
                "summary": "Retrieves a BrandOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BrandOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Brand"
                ],
                "operationId": "patchBrandItem",
                "summary": "Updates the Brand resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Brand resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Brand:2fb1a13c6cb9d850d673a6831c427f00"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Brand:962c5489a05f3ff6192cd4c630d8abd7"
                            }
                        }
                    },
                    "description": "The updated Brand resource"
                }
            }
        },
        "/brands/{id}/brand_domains": {
            "get": {
                "tags": [
                    "Branddomain",
                    "Brand"
                ],
                "operationId": "api_brands_brand_domains_get_subresource",
                "summary": "Retrieves the collection of Branddomain resources.",
                "responses": {
                    "200": {
                        "description": "Branddomain collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Branddomain:5a892977f4b30fe6e5d02bbae1dcc678"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "operationId": "getCategoryCollection",
                "summary": "Retrieves the collection of CategoryOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "CategoryOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modelId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "modelId[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "operationId": "postCategoryCollection",
                "summary": "Creates a Category resource.",
                "responses": {
                    "201": {
                        "description": "Category resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                }
                            }
                        },
                        "links": {
                            "GetCategoryItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getCategoryItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category:a72a7db8b7aeb918546eb332f4161205:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Category:a72a7db8b7aeb918546eb332f4161205"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Category:a72a7db8b7aeb918546eb332f4161205"
                            }
                        }
                    },
                    "description": "The new Category resource"
                }
            }
        },
        "/categories/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "operationId": "getCategoryItem",
                "summary": "Retrieves a CategoryOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CategoryOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category:1244f72848b2e9f4bc7039366e5cef3e"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/command_products": {
            "get": {
                "tags": [
                    "CommandProduct"
                ],
                "operationId": "getCommandProductCollection",
                "summary": "Retrieves the collection of CommandProductOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "CommandProductOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "command.id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "CommandProduct"
                ],
                "operationId": "postCommandProductCollection",
                "summary": "Creates a CommandProduct resource.",
                "responses": {
                    "201": {
                        "description": "CommandProduct resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                }
                            }
                        },
                        "links": {
                            "GetCommandProductItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getCommandProductItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /command_products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommandProduct:e6648ceda3fb8628d90f7e34797db5f5:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommandProduct:e6648ceda3fb8628d90f7e34797db5f5"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/CommandProduct:e6648ceda3fb8628d90f7e34797db5f5"
                            }
                        }
                    },
                    "description": "The new CommandProduct resource"
                }
            }
        },
        "/command_products/{id}": {
            "get": {
                "tags": [
                    "CommandProduct"
                ],
                "operationId": "getCommandProductItem",
                "summary": "Retrieves a CommandProductOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CommandProductOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommandProduct:e9771de728231a75b73008fe2e6c0e5f"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/commands": {
            "get": {
                "tags": [
                    "Command"
                ],
                "operationId": "getCommandCollection",
                "summary": "Retrieves the collection of CommandOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "CommandOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "reference",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reference[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "products.offer.id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "perso",
                                "pro",
                                "business",
                                "eco",
                                "maindomain",
                                "secondarydomain",
                                "ssl_standard",
                                "ndd_ssl",
                                "ndd_vpro_ssl"
                            ]
                        },
                        "description": "- perso : Individual\n- pro : PRO\n- business : Business\n- eco : E-commerce\n- maindomain : Domain namePRO\n- secondarydomain : Secondary Domain namePRO\n- ssl_standard : SSL certificate\n- ndd_ssl : Domain Name + SSL\n- ndd_vpro_ssl : Version PRO + Domain Name + SSL certificate"
                    },
                    {
                        "name": "user.username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "products.site.id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "products.site.id[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "paymean",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cb",
                                "check",
                                "transfer",
                                "paypal",
                                "credits",
                                "stripe",
                                "cash"
                            ]
                        },
                        "description": "- cb : CB\n- check : Ch\u00e8que\n- transfer : Virement\n- paypal : Paypal\n- credits : Cr\u00e9dits\n- stripe : Stripe\n- cash : Esp\u00e8ce"
                    },
                    {
                        "name": "paymean[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "cart",
                                "locked",
                                "paid",
                                "canceled"
                            ]
                        },
                        "description": "- cart : Pending\n- locked : Awaiting payment\n- paid : Paid\n- canceled : Canceled"
                    },
                    {
                        "name": "status[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "total",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "total[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "addDt[before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[strictly_before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[strictly_after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentDt[before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentDt[strictly_before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentDt[after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "paymentDt[strictly_after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/commands/{id}": {
            "get": {
                "tags": [
                    "Command"
                ],
                "operationId": "getCommandItem",
                "summary": "Retrieves a CommandOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CommandOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Command"
                ],
                "operationId": "patchCommandItem",
                "summary": "Updates the Command resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Command resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Command:13659cedec6eacf2649cf892ab7577d0"
                            }
                        }
                    },
                    "description": "The updated Command resource"
                }
            }
        },
        "/commands/{id}/activate": {
            "get": {
                "summary": "Activate a command (payment received)",
                "tags": [
                    "Command"
                ],
                "operationId": "activateCommandItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CommandOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Command:ee5f35022d477654f1cddfdb02f77421"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/coupons": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "operationId": "getCouponCollection",
                "summary": "Retrieves the collection of CouponOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "CouponOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "code",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Coupon"
                ],
                "operationId": "postCouponCollection",
                "summary": "Creates a Coupon resource.",
                "responses": {
                    "201": {
                        "description": "Coupon resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            }
                        },
                        "links": {
                            "GetCouponItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getCouponItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /coupons/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169"
                            }
                        }
                    },
                    "description": "The new Coupon resource"
                }
            }
        },
        "/coupons/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "operationId": "getCouponItem",
                "summary": "Retrieves a CouponOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "CouponOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "operationId": "deleteCouponItem",
                "summary": "Removes the Coupon resource.",
                "responses": {
                    "204": {
                        "description": "Coupon resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            },
            "put": {
                "tags": [
                    "Coupon"
                ],
                "operationId": "putCouponItem",
                "summary": "Replaces the Coupon resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon:56c6e2889ced52899ea604222e3c8c36"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Coupon:118a7fb412c704381e027860fe8a9169"
                            }
                        }
                    },
                    "description": "The updated Coupon resource"
                }
            }
        },
        "/directory_categories": {
            "get": {
                "tags": [
                    "DirectoryCategory"
                ],
                "operationId": "getDirectoryCategoryCollection",
                "summary": "Retrieves the collection of DirectoryCategoryOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "DirectoryCategoryOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "parent",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "parent[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "DirectoryCategory"
                ],
                "operationId": "postDirectoryCategoryCollection",
                "summary": "Creates a DirectoryCategory resource.",
                "responses": {
                    "201": {
                        "description": "DirectoryCategory resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            }
                        },
                        "links": {
                            "GetDirectoryCategoryItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getDirectoryCategoryItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /directory_categories/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectoryCategory:88821a0000ba036256fd388bd5e0b115:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectoryCategory:88821a0000ba036256fd388bd5e0b115"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectoryCategory:88821a0000ba036256fd388bd5e0b115"
                            }
                        }
                    },
                    "description": "The new DirectoryCategory resource"
                }
            }
        },
        "/directory_categories/{id}": {
            "get": {
                "tags": [
                    "DirectoryCategory"
                ],
                "operationId": "getDirectoryCategoryItem",
                "summary": "Retrieves a DirectoryCategoryOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DirectoryCategoryOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "DirectoryCategory"
                ],
                "operationId": "patchDirectoryCategoryItem",
                "summary": "Updates the DirectoryCategory resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DirectoryCategory resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectoryCategory:31fbbfdd88806b77396d71a17314e994"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectoryCategory:866944aa50655fd7df7140606ff983e5"
                            }
                        }
                    },
                    "description": "The updated DirectoryCategory resource"
                }
            },
            "delete": {
                "tags": [
                    "DirectoryCategory"
                ],
                "operationId": "deleteDirectoryCategoryItem",
                "summary": "Removes the DirectoryCategory resource.",
                "responses": {
                    "204": {
                        "description": "DirectoryCategory resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/directory_sites": {
            "get": {
                "tags": [
                    "DirectorySite"
                ],
                "operationId": "getDirectorySiteCollection",
                "summary": "Retrieves the collection of DirectorySiteOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "DirectorySiteOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "category[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "site",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "DirectorySite"
                ],
                "operationId": "postDirectorySiteCollection",
                "summary": "Creates a DirectorySite resource.",
                "responses": {
                    "201": {
                        "description": "DirectorySite resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            }
                        },
                        "links": {
                            "GetDirectorySiteItem": {
                                "parameters": {
                                    "site": "$response.body#/site"
                                },
                                "operationId": "getDirectorySiteItem",
                                "description": "The `site` value returned in the response can be used as the `site` parameter in `GET /directory_sites/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectorySite:9cb6adf6305292849b553106f66e2a8e:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectorySite:9cb6adf6305292849b553106f66e2a8e"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectorySite:9cb6adf6305292849b553106f66e2a8e"
                            }
                        }
                    },
                    "description": "The new DirectorySite resource"
                }
            }
        },
        "/directory_sites/{id}": {
            "get": {
                "tags": [
                    "DirectorySite"
                ],
                "operationId": "getDirectorySiteItem",
                "summary": "Retrieves a DirectorySiteOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DirectorySiteOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "DirectorySite"
                ],
                "operationId": "patchDirectorySiteItem",
                "summary": "Updates the DirectorySite resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "DirectorySite resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectorySite:c4b6d694621fb452df0348553f6c643b"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectorySite:966bbe081a8f082ba358af25f71a3895"
                            }
                        }
                    },
                    "description": "The updated DirectorySite resource"
                }
            },
            "delete": {
                "tags": [
                    "DirectorySite"
                ],
                "operationId": "deleteDirectorySiteItem",
                "summary": "Removes the DirectorySite resource.",
                "responses": {
                    "204": {
                        "description": "DirectorySite resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/eco_combinations": {
            "get": {
                "tags": [
                    "EcoCombination"
                ],
                "operationId": "getEcoCombinationCollection",
                "summary": "Retrieves the collection of EcoCombinationOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoCombinationOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "EcoCombination"
                ],
                "operationId": "postEcoCombinationCollection",
                "summary": "Creates a EcoCombination resource.",
                "responses": {
                    "201": {
                        "description": "EcoCombination resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                }
                            }
                        },
                        "links": {
                            "GetEcoCombinationItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getEcoCombinationItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /eco_combinations/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoCombination:a3c1a277fc6663e5ff2c6f85617980fe:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoCombination:a3c1a277fc6663e5ff2c6f85617980fe"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoCombination:a3c1a277fc6663e5ff2c6f85617980fe"
                            }
                        }
                    },
                    "description": "The new EcoCombination resource"
                }
            }
        },
        "/eco_combinations/{id}": {
            "get": {
                "tags": [
                    "EcoCombination"
                ],
                "operationId": "getEcoCombinationItem",
                "summary": "Retrieves a EcoCombinationOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoCombinationOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "EcoCombination"
                ],
                "operationId": "deleteEcoCombinationItem",
                "summary": "Removes the EcoCombination resource.",
                "responses": {
                    "204": {
                        "description": "EcoCombination resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/eco_discounts": {
            "get": {
                "tags": [
                    "EcoDiscount"
                ],
                "operationId": "getEcoDiscountCollection",
                "summary": "Retrieves the collection of EcoDiscountOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoDiscountOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "EcoDiscount"
                ],
                "operationId": "postEcoDiscountCollection",
                "summary": "Creates a EcoDiscount resource.",
                "responses": {
                    "201": {
                        "description": "EcoDiscount resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            }
                        },
                        "links": {
                            "GetEcoDiscountItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getEcoDiscountItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /eco_discounts/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoDiscount:d3d9b67a56fd84ba8bd9bd07a15bcf49:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoDiscount:d3d9b67a56fd84ba8bd9bd07a15bcf49"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoDiscount:d3d9b67a56fd84ba8bd9bd07a15bcf49"
                            }
                        }
                    },
                    "description": "The new EcoDiscount resource"
                }
            }
        },
        "/eco_discounts/{id}": {
            "get": {
                "tags": [
                    "EcoDiscount"
                ],
                "operationId": "getEcoDiscountItem",
                "summary": "Retrieves a EcoDiscountOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoDiscountOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "EcoDiscount"
                ],
                "operationId": "patchEcoDiscountItem",
                "summary": "Updates the EcoDiscount resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoDiscount resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoDiscount:b3d1155ab8f4c317b0b03ea010998010"
                            }
                        }
                    },
                    "description": "The updated EcoDiscount resource"
                }
            },
            "delete": {
                "tags": [
                    "EcoDiscount"
                ],
                "operationId": "deleteEcoDiscountItem",
                "summary": "Removes the EcoDiscount resource.",
                "responses": {
                    "204": {
                        "description": "EcoDiscount resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/eco_manufacturers": {
            "get": {
                "tags": [
                    "EcoManufacturer"
                ],
                "operationId": "getEcoManufacturerCollection",
                "summary": "Retrieves the collection of EcoManufacturerOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoManufacturerOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/eco_manufacturers/{id}": {
            "get": {
                "tags": [
                    "EcoManufacturer"
                ],
                "operationId": "getEcoManufacturerItem",
                "summary": "Retrieves a EcoManufacturerOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoManufacturerOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoManufacturer:3fefe29d8db145737169803b5fde4d82"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/eco_order_detail_uploads/{id}/download": {
            "get": {
                "summary": "download the file",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "tags": [
                    "EcoOrderDetailUpload"
                ],
                "operationId": "downloadEcoOrderDetailUploadItem",
                "responses": {
                    "200": {
                        "description": "EcoOrderDetailUpload resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrderDetailUpload:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrderDetailUpload"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrderDetailUpload"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/eco_orders": {
            "get": {
                "tags": [
                    "EcoOrder"
                ],
                "operationId": "getEcoOrderCollection",
                "summary": "Retrieves the collection of EcoOrderOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoOrderOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "addDt[before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[strictly_before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addDt[strictly_after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/eco_orders/{id}": {
            "get": {
                "tags": [
                    "EcoOrder"
                ],
                "operationId": "getEcoOrderItem",
                "summary": "Retrieves a EcoOrderOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoOrderOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "EcoOrder"
                ],
                "operationId": "patchEcoOrderItem",
                "summary": "Updates the EcoOrder resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoOrder resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoOrder:93bd0f9e3377e379cb5585eb311ed117"
                            }
                        }
                    },
                    "description": "The updated EcoOrder resource"
                }
            }
        },
        "/eco_packlink_carriers/{id}": {
            "get": {
                "tags": [
                    "EcoPacklinkCarrier"
                ],
                "operationId": "getEcoPacklinkCarrierItem",
                "summary": "Retrieves a EcoPacklinkOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoPacklinkOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPacklinkCarrier:36308a1b3d24cc804f1a513e820d895b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPacklinkCarrier:36308a1b3d24cc804f1a513e820d895b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPacklinkCarrier:36308a1b3d24cc804f1a513e820d895b"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/eco_pictures": {
            "post": {
                "tags": [
                    "EcoPicture"
                ],
                "operationId": "postEcoPictureCollection",
                "summary": "Creates a EcoPicture resource.",
                "responses": {
                    "201": {
                        "description": "EcoPicture resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe"
                                }
                            }
                        },
                        "links": {
                            "GetEcoPictureItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getEcoPictureItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /eco_pictures/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoPicture:79ef563d06537e846c283ccecbecc002:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoPicture:79ef563d06537e846c283ccecbecc002"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoPicture:79ef563d06537e846c283ccecbecc002"
                            }
                        }
                    },
                    "description": "The new EcoPicture resource"
                }
            }
        },
        "/eco_pictures/{id}": {
            "get": {
                "tags": [
                    "EcoPicture"
                ],
                "operationId": "getEcoPictureItem",
                "summary": "Retrieves a EcoPictureOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoPictureOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/eco_products": {
            "get": {
                "tags": [
                    "EcoProduct"
                ],
                "operationId": "getEcoProductCollection",
                "summary": "Retrieves the collection of EcoProductOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoProductOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "ean13",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ean13[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order[updDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "updDt[before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "updDt[strictly_before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "updDt[after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "updDt[strictly_after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "EcoProduct"
                ],
                "operationId": "postEcoProductCollection",
                "summary": "Creates a EcoProduct resource.",
                "responses": {
                    "201": {
                        "description": "EcoProduct resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            }
                        },
                        "links": {
                            "GetEcoProductItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getEcoProductItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /eco_products/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoProduct:d02cf7d16e689640fac55c85a0d3ce3f:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoProduct:d02cf7d16e689640fac55c85a0d3ce3f"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoProduct:d02cf7d16e689640fac55c85a0d3ce3f"
                            }
                        }
                    },
                    "description": "The new EcoProduct resource"
                }
            }
        },
        "/eco_products/{id}": {
            "get": {
                "tags": [
                    "EcoProduct"
                ],
                "operationId": "getEcoProductItem",
                "summary": "Retrieves a EcoProductOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoProductOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "EcoProduct"
                ],
                "operationId": "patchEcoProductItem",
                "summary": "Updates the EcoProduct resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoProduct resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoProduct:598f8229d42c1ae36352f3a2f993e71a"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/EcoProduct:91429ff1a736cfe91b412a9d5d2f8bd1"
                            }
                        }
                    },
                    "description": "The updated EcoProduct resource"
                }
            },
            "delete": {
                "tags": [
                    "EcoProduct"
                ],
                "operationId": "deleteEcoProductItem",
                "summary": "Removes the EcoProduct resource.",
                "responses": {
                    "204": {
                        "description": "EcoProduct resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/eco_suppliers": {
            "get": {
                "tags": [
                    "EcoSupplier"
                ],
                "operationId": "getEcoSupplierCollection",
                "summary": "Retrieves the collection of EcoSupplierOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoSupplierOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/eco_suppliers/{id}": {
            "get": {
                "tags": [
                    "EcoSupplier"
                ],
                "operationId": "getEcoSupplierItem",
                "summary": "Retrieves a EcoSupplierOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoSupplierOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoSupplier:48593f7d78d0bb92230e457adf84f3f9"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/eco_taxes": {
            "get": {
                "tags": [
                    "EcoTax"
                ],
                "operationId": "getEcoTaxCollection",
                "summary": "Retrieves the collection of EcoTaxOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "EcoTaxOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/eco_taxes/{id}": {
            "get": {
                "tags": [
                    "EcoTax"
                ],
                "operationId": "getEcoTaxItem",
                "summary": "Retrieves a EcoTaxOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "EcoTaxOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/EcoTax:4aaa3cd99bce23b9546619d29652fde1"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/groups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "operationId": "getGroupCollection",
                "summary": "Retrieves the collection of GroupOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "GroupOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "operationId": "postGroupCollection",
                "summary": "Creates a Group resource.",
                "responses": {
                    "201": {
                        "description": "Group resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                }
                            }
                        },
                        "links": {
                            "GetGroupItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getGroupItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /groups/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group:db47b4a609ad5ce5cda04f418c74eade:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group:db47b4a609ad5ce5cda04f418c74eade"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Group:db47b4a609ad5ce5cda04f418c74eade"
                            }
                        }
                    },
                    "description": "The new Group resource"
                }
            }
        },
        "/groups/{id}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "operationId": "getGroupItem",
                "summary": "Retrieves a GroupOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "GroupOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group:799b1bea2ff8730b1a1a5b188922b633"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/me": {
            "get": {
                "summary": "Retrieve the logged user",
                "parameters": [],
                "tags": [
                    "User"
                ],
                "operationId": "get_meUserItem",
                "responses": {
                    "200": {
                        "description": "UserOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/me/test-push-notif": {
            "post": {
                "summary": "Push a test notification on the user device",
                "parameters": [],
                "tags": [
                    "User"
                ],
                "operationId": "push_notifUserItem",
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getUserItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    },
                    "description": "The new User resource"
                }
            }
        },
        "/me/validation_mail": {
            "get": {
                "summary": "Send the e-mail validation e-mail",
                "parameters": [],
                "tags": [
                    "User"
                ],
                "operationId": "get_validation_mailUserItem",
                "responses": {
                    "200": {
                        "description": "UserOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/offers": {
            "get": {
                "tags": [
                    "Offer"
                ],
                "operationId": "getOfferCollection",
                "summary": "Retrieves the collection of OfferOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "OfferOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/offers/{id}": {
            "get": {
                "tags": [
                    "Offer"
                ],
                "operationId": "getOfferItem",
                "summary": "Retrieves a OfferOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OfferOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Offer:9e545314e83938dc6f60861a54586191"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "tags": [
                    "Role"
                ],
                "operationId": "getRoleCollection",
                "summary": "Retrieves the collection of RoleOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "RoleOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Role"
                ],
                "operationId": "postRoleCollection",
                "summary": "Creates a Role resource.",
                "responses": {
                    "201": {
                        "description": "Role resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            }
                        },
                        "links": {
                            "GetRoleItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getRoleItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /roles/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role:398f80f76f54ad7f04b1f3d6647c661a:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role:398f80f76f54ad7f04b1f3d6647c661a"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Role:398f80f76f54ad7f04b1f3d6647c661a"
                            }
                        }
                    },
                    "description": "The new Role resource"
                }
            }
        },
        "/roles-resources": {
            "get": {
                "summary": "Get all role resources",
                "parameters": [],
                "tags": [
                    "Role"
                ],
                "operationId": "resourcesRoleItem",
                "responses": {
                    "200": {
                        "description": "RoleOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/roles/{id}": {
            "get": {
                "tags": [
                    "Role"
                ],
                "operationId": "getRoleItem",
                "summary": "Retrieves a RoleOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "RoleOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Role"
                ],
                "operationId": "patchRoleItem",
                "summary": "Updates the Role resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role:41c793592002936a9986d67e92f37a9b"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Role:8335fa6e7449daa5d9298e9ce37ab462"
                            }
                        }
                    },
                    "description": "The updated Role resource"
                }
            },
            "delete": {
                "tags": [
                    "Role"
                ],
                "operationId": "deleteRoleItem",
                "summary": "Removes the Role resource.",
                "responses": {
                    "204": {
                        "description": "Role resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/sessions": {
            "get": {
                "tags": [
                    "Session"
                ],
                "operationId": "getSessionCollection",
                "summary": "Retrieves the collection of SessionOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "SessionOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "userIp",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "user[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "hit[before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hit[strictly_before]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hit[after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hit[strictly_after]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/sessions/{id}": {
            "get": {
                "tags": [
                    "Session"
                ],
                "operationId": "getSessionItem",
                "summary": "Retrieves a SessionOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SessionOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Session:1bc7a372e0caf630efd366b7299c4bd2"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/sites": {
            "get": {
                "tags": [
                    "Site"
                ],
                "operationId": "getSiteCollection",
                "summary": "Retrieves the collection of SiteOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "SiteOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "sitename",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "host",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "addUserIp",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addUserIp[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "siteDeleted",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "Site"
                ],
                "operationId": "postSiteCollection",
                "summary": "Creates a Site resource.",
                "responses": {
                    "201": {
                        "description": "Site resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            }
                        },
                        "links": {
                            "GetSiteItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getSiteItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /sites/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site:f8f2933682cb2687a860a3e01f671ed0:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site:f8f2933682cb2687a860a3e01f671ed0"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Site:f8f2933682cb2687a860a3e01f671ed0"
                            }
                        }
                    },
                    "description": "The new Site resource"
                }
            }
        },
        "/sites/{id}": {
            "get": {
                "tags": [
                    "Site"
                ],
                "operationId": "getSiteItem",
                "summary": "Retrieves a SiteOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SiteOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Site"
                ],
                "operationId": "patchSiteItem",
                "summary": "Updates the Site resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Site resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Site:0097c999ec7d3611ad5fec647120ea72"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Site:7e8883c9b486869412701afd330abd48"
                            }
                        }
                    },
                    "description": "The updated Site resource"
                }
            }
        },
        "/sites/{id}/site_users": {
            "get": {
                "tags": [
                    "Siteuser",
                    "Site"
                ],
                "operationId": "api_sites_site_users_get_subresource",
                "summary": "Retrieves the collection of Siteuser resources.",
                "responses": {
                    "200": {
                        "description": "Siteuser collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        },
        "/siteusers": {
            "post": {
                "tags": [
                    "Siteuser"
                ],
                "operationId": "postSiteuserCollection",
                "summary": "Creates a Siteuser resource.",
                "responses": {
                    "201": {
                        "description": "Siteuser resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                }
                            }
                        },
                        "links": {
                            "GetSiteuserItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getSiteuserItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /siteusers/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Siteuser:57c801516c2b5b79ccf4541b195da432:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Siteuser:57c801516c2b5b79ccf4541b195da432"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/Siteuser:57c801516c2b5b79ccf4541b195da432"
                            }
                        }
                    },
                    "description": "The new Siteuser resource"
                }
            }
        },
        "/siteusers/{id}": {
            "delete": {
                "tags": [
                    "Siteuser"
                ],
                "operationId": "deleteSiteuserItem",
                "summary": "Removes the Siteuser resource.",
                "responses": {
                    "204": {
                        "description": "Siteuser resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/storage_images": {
            "get": {
                "tags": [
                    "StorageImage"
                ],
                "operationId": "getStorageImageCollection",
                "summary": "Retrieves the collection of StorageImageOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "StorageImageOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "image[siteId]": {
                                        "type": "string"
                                    },
                                    "image[file]": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "StorageImage"
                ],
                "operationId": "postStorageImageCollection",
                "summary": "Creates a StorageImage resource.",
                "responses": {
                    "201": {
                        "description": "StorageImage resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            }
                        },
                        "links": {
                            "GetStorageImageItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getStorageImageItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /storage_images/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/storage_images/{id}": {
            "get": {
                "tags": [
                    "StorageImage"
                ],
                "operationId": "getStorageImageItem",
                "summary": "Retrieves a StorageImageOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StorageImageOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "StorageImage"
                ],
                "operationId": "patchStorageImageItem",
                "summary": "Updates the StorageImage resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "StorageImage resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/StorageImage:64ebe0c84f35c94c053ca1a666bfce79"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/StorageImage:292cb7fe7e2c3f669075bf385747b767"
                            }
                        }
                    },
                    "description": "The updated StorageImage resource"
                }
            }
        },
        "/user_domain_mailboxes": {
            "get": {
                "tags": [
                    "UserDomainMailbox"
                ],
                "operationId": "getUserDomainMailboxCollection",
                "summary": "Retrieves the collection of UserDomainMailboxOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "UserDomainMailboxOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "domain[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "username[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserDomainMailbox"
                ],
                "operationId": "postUserDomainMailboxCollection",
                "summary": "Creates a UserDomainMailbox resource.",
                "responses": {
                    "201": {
                        "description": "UserDomainMailbox resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                }
                            }
                        },
                        "links": {
                            "GetUserDomainMailboxItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getUserDomainMailboxItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /user_domain_mailboxes/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDomainMailbox:26e994f28120c4b51733f4efd1c6a999:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDomainMailbox:26e994f28120c4b51733f4efd1c6a999"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/UserDomainMailbox:26e994f28120c4b51733f4efd1c6a999"
                            }
                        }
                    },
                    "description": "The new UserDomainMailbox resource"
                }
            }
        },
        "/user_domain_mailboxes/{id}": {
            "get": {
                "tags": [
                    "UserDomainMailbox"
                ],
                "operationId": "getUserDomainMailboxItem",
                "summary": "Retrieves a UserDomainMailboxOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserDomainMailboxOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDomainMailbox:b24869693c225df47103d00fd93b91e9"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            }
        },
        "/user_has_roles": {
            "get": {
                "tags": [
                    "UserHasRole"
                ],
                "operationId": "getUserHasRoleCollection",
                "summary": "Retrieves the collection of UserHasRoleOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "UserHasRoleOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "UserHasRole"
                ],
                "operationId": "postUserHasRoleCollection",
                "summary": "Creates a UserHasRole resource.",
                "responses": {
                    "201": {
                        "description": "UserHasRole resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            }
                        },
                        "links": {
                            "GetUserHasRoleItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getUserHasRoleItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /user_has_roles/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserHasRole:589632707daa9dd4818942897415b76b:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserHasRole:589632707daa9dd4818942897415b76b"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/UserHasRole:589632707daa9dd4818942897415b76b"
                            }
                        }
                    },
                    "description": "The new UserHasRole resource"
                }
            }
        },
        "/user_has_roles/{id}": {
            "get": {
                "tags": [
                    "UserHasRole"
                ],
                "operationId": "getUserHasRoleItem",
                "summary": "Retrieves a UserHasRoleOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserHasRoleOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "UserHasRole"
                ],
                "operationId": "patchUserHasRoleItem",
                "summary": "Updates the UserHasRole resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserHasRole resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserHasRole:e0ac26c03ac9034d16aff17dd49124c2"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserHasRole:d91fd0c69421e5afa9bf303992483883"
                            }
                        }
                    },
                    "description": "The updated UserHasRole resource"
                }
            },
            "delete": {
                "tags": [
                    "UserHasRole"
                ],
                "operationId": "deleteUserHasRoleItem",
                "summary": "Removes the UserHasRole resource.",
                "responses": {
                    "204": {
                        "description": "UserHasRole resource deleted"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUserCollection",
                "summary": "Retrieves the collection of UserOutputDto resources.",
                "responses": {
                    "200": {
                        "description": "UserOutputDto collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                    }
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "id[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "group[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "brand",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "brand[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "addUserIp",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "addUserIp[]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "style": "form",
                        "explode": true
                    },
                    {
                        "name": "order[addDt]",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "operationId": "postUserCollection",
                "summary": "Creates a User resource.",
                "responses": {
                    "201": {
                        "description": "User resource created",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        },
                        "links": {
                            "GetUserItem": {
                                "parameters": {
                                    "id": "$response.body#/id"
                                },
                                "operationId": "getUserItem",
                                "description": "The `id` value returned in the response can be used as the `id` parameter in `GET /users/{id}`."
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/ld+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User:4efa5659e91aca04a3152aef9f91ffc1:jsonld"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User:4efa5659e91aca04a3152aef9f91ffc1"
                            }
                        },
                        "text/html": {
                            "schema": {
                                "$ref": "#/components/schemas/User:4efa5659e91aca04a3152aef9f91ffc1"
                            }
                        }
                    },
                    "description": "The new User resource"
                }
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "operationId": "getUserItem",
                "summary": "Retrieves a UserOutputDto resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "UserOutputDto resource response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "operationId": "patchUserItem",
                "summary": "Updates the User resource.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User resource updated",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e:jsonld"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "$ref": "#/components/schemas/User:940d105763f3d1a848f991a4d326f00e"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "requestBody": {
                    "content": {
                        "application/merge-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User:5b998e983cd83cb3333677d49ed1f14c"
                            }
                        }
                    },
                    "description": "The updated User resource"
                }
            }
        },
        "/users/{id}/site_users": {
            "get": {
                "tags": [
                    "Siteuser",
                    "User"
                ],
                "operationId": "api_users_site_users_get_subresource",
                "summary": "Retrieves the collection of Siteuser resources.",
                "responses": {
                    "200": {
                        "description": "Siteuser collection response",
                        "content": {
                            "application/ld+json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "hydra:member": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05:jsonld"
                                            }
                                        },
                                        "hydra:totalItems": {
                                            "type": "integer",
                                            "minimum": 0
                                        },
                                        "hydra:view": {
                                            "type": "object",
                                            "properties": {
                                                "@id": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:first": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:last": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                },
                                                "hydra:next": {
                                                    "type": "string",
                                                    "format": "iri-reference"
                                                }
                                            }
                                        },
                                        "hydra:search": {
                                            "type": "object",
                                            "properties": {
                                                "@type": {
                                                    "type": "string"
                                                },
                                                "hydra:template": {
                                                    "type": "string"
                                                },
                                                "hydra:variableRepresentation": {
                                                    "type": "string"
                                                },
                                                "hydra:mapping": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "@type": {
                                                                "type": "string"
                                                            },
                                                            "variable": {
                                                                "type": "string"
                                                            },
                                                            "property": {
                                                                "type": "string",
                                                                "nullable": true
                                                            },
                                                            "required": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "required": [
                                        "hydra:member"
                                    ]
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                    }
                                }
                            },
                            "text/html": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Siteuser:7fc182df899df5888744e3f43c9c8f05"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "description": "The collection page number",
                        "schema": {
                            "type": "integer",
                            "default": 1
                        }
                    },
                    {
                        "name": "itemsPerPage",
                        "in": "query",
                        "required": false,
                        "description": "The number of items per page",
                        "schema": {
                            "type": "integer",
                            "default": 30,
                            "minimum": 0
                        }
                    }
                ]
            }
        }
    },
    "openapi": "3.0.2",
    "info": {
        "title": "API E-monsite",
        "version": "alpha"
    },
    "security": [
        {
            "apiKey": []
        }
    ],
    "components": {
        "schemas": {
            "AbstractBlock": {
                "type": "object",
                "properties": {
                    "lines": {
                        "description": "Faire mapping dans classe parent",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "AbstractBlock:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "description": "Faire mapping dans classe parent",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "AlbumImage:4147e3b456efec88633ecd0377e3d39b": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "siteId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "weight": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "mimeType": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "storageName": {
                        "readOnly": true
                    },
                    "publicPath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "url": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "AlbumImage:4147e3b456efec88633ecd0377e3d39b:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "category": {
                        "type": "string"
                    },
                    "siteId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "weight": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "mimeType": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "storageName": {
                        "readOnly": true
                    },
                    "publicPath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "url": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "ArrayCollection": {
                "type": "object",
                "properties": {
                    "elements": {
                        "writeOnly": true,
                        "description": "An array containing the entries of this collection.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keys": {
                        "readOnly": true,
                        "description": "{@inheritDoc}"
                    },
                    "values": {
                        "readOnly": true,
                        "description": "{@inheritDoc}"
                    },
                    "empty": {
                        "readOnly": true,
                        "description": "{@inheritDoc}",
                        "type": "boolean"
                    },
                    "iterator": {
                        "readOnly": true,
                        "description": "{@inheritDoc}",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ArrayCollection:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "elements": {
                        "writeOnly": true,
                        "description": "An array containing the entries of this collection.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "keys": {
                        "readOnly": true,
                        "description": "{@inheritDoc}"
                    },
                    "values": {
                        "readOnly": true,
                        "description": "{@inheritDoc}"
                    },
                    "empty": {
                        "readOnly": true,
                        "description": "{@inheritDoc}",
                        "type": "boolean"
                    },
                    "iterator": {
                        "readOnly": true,
                        "description": "{@inheritDoc}",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AssocStructureModule": {
                "type": "object",
                "properties": {
                    "module": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "zone": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "tax": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "structure": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/StructurePayment"
                    },
                    "onlyStorepickup": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "AssocStructureModule:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "module": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "zone": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "tax": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "structure": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/StructurePayment:jsonld"
                    },
                    "onlyStorepickup": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "AssocStructurePayment": {
                "type": "object",
                "properties": {
                    "structure": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/StructurePayment"
                    },
                    "paymentId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "params": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "impact": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "impactPercent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "amountDisplay": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "ordering": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructurePaymentV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AssocStructurePayment:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "structure": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/StructurePayment:jsonld"
                    },
                    "paymentId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "params": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "impact": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "impactPercent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "amountDisplay": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "ordering": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructurePaymentV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "AssocStructurePaymentV": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/AssocStructurePayment"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "AssocStructurePaymentV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/AssocStructurePayment:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "BeginCategory:b425d7ae39b0fe04f80380a5489db196": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "beginChoices": {}
                }
            },
            "BeginCategory:b425d7ae39b0fe04f80380a5489db196:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "beginChoices": {}
                }
            },
            "BeginCategory:dc16a9bcc02b0a6b952ca856e741db30": {
                "type": "object",
                "description": "",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "BeginCategory:dc16a9bcc02b0a6b952ca856e741db30:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string"
                    }
                }
            },
            "BeginCategory:f0c108203dccba65ff19d7e99e810cf3": {
                "type": "object",
                "description": "",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "uri": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BeginChoice:6e2a40ac5a3e62cfe436bfdd79474c58": {
                "type": "object",
                "description": "",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "module": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "BeginChoice:6e2a40ac5a3e62cfe436bfdd79474c58:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "module": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "BeginChoice:bb182fb4fb9ff316bd0e48934d37505d": {
                "type": "object",
                "description": "",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer",
                        "nullable": true
                    },
                    "module": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "BeginChoice:e3028f4ebfb2c48645a56fd863368df3": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "module": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "BeginChoice:e3028f4ebfb2c48645a56fd863368df3:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "module": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Block": {
                "type": "object",
                "properties": {
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLine"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "Block:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLine:jsonld"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "BlockCell": {
                "type": "object",
                "properties": {
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockLine"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "BlockCell:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockLine:jsonld"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "BlockCellInterface": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "width": {
                        "description": "largeur de la cellule en pourcentage\nTODO pk nullable ? Si null, c'est 100 ?",
                        "type": "number",
                        "nullable": true
                    },
                    "contentType": {
                        "description": "Type de contenu de la cellule\nnullable car la cellule peut ne pas \u00eatre configur\u00e9 mais quand m\u00eame \u00eatre enregistr\u00e9\nTODO constantes pour chaque types",
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "description": "Identifiant du widget si la cellule est de ce type\nTODO ? Ca peut etre quoi d'autre ? Tout est cens\u00e9 \u00eatre un widget",
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "description": "Identifiant de la variation du widget (je sais pas ce que c'est)",
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "description": "Preset CSS de la cellule (quid ?)",
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "Pour sauvegarder les options de design",
                        "type": "string",
                        "nullable": true
                    },
                    "line": {
                        "$ref": "#/components/schemas/BlockLineInterface"
                    },
                    "version": {
                        "description": "La version dans la langue demand\u00e9 ou la langue par d\u00e9fault",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockCellInterface:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "width": {
                        "description": "largeur de la cellule en pourcentage\nTODO pk nullable ? Si null, c'est 100 ?",
                        "type": "number",
                        "nullable": true
                    },
                    "contentType": {
                        "description": "Type de contenu de la cellule\nnullable car la cellule peut ne pas \u00eatre configur\u00e9 mais quand m\u00eame \u00eatre enregistr\u00e9\nTODO constantes pour chaque types",
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "description": "Identifiant du widget si la cellule est de ce type\nTODO ? Ca peut etre quoi d'autre ? Tout est cens\u00e9 \u00eatre un widget",
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "description": "Identifiant de la variation du widget (je sais pas ce que c'est)",
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "description": "Preset CSS de la cellule (quid ?)",
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "Pour sauvegarder les options de design",
                        "type": "string",
                        "nullable": true
                    },
                    "line": {
                        "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                    },
                    "version": {
                        "description": "La version dans la langue demand\u00e9 ou la langue par d\u00e9fault",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockCellV": {
                "type": "object",
                "properties": {
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "BlockCellV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "BlockEditableZonesBottomSiteCell": {
                "type": "object",
                "properties": {
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLine"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteCellV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockEditableZonesBottomSiteCell:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLine:jsonld"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteCellV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockEditableZonesBottomSiteCellV": {
                "type": "object",
                "properties": {
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockEditableZonesBottomSiteCellV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockEditableZonesBottomSiteLine": {
                "type": "object",
                "properties": {
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EditableZonesBottomSiteBlock"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteCell"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLineV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockEditableZonesBottomSiteLine:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EditableZonesBottomSiteBlock:jsonld"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteCell:jsonld"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLineV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockEditableZonesBottomSiteLineV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockEditableZonesBottomSiteLineV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockLine": {
                "type": "object",
                "properties": {
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Block"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCell"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "BlockLine:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Block:jsonld"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCell:jsonld"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "BlockLineInterface": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "block": {
                        "$ref": "#/components/schemas/AbstractBlock"
                    },
                    "cells": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface"
                        }
                    },
                    "version": {
                        "description": "La version dans la langue demand\u00e9 ou la langue par d\u00e9fault",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockLineInterface:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "block": {
                        "$ref": "#/components/schemas/AbstractBlock:jsonld"
                    },
                    "cells": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface:jsonld"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface:jsonld"
                        }
                    },
                    "version": {
                        "description": "La version dans la langue demand\u00e9 ou la langue par d\u00e9fault",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockLineV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "BlockLineV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "BlockPageCell": {
                "type": "object",
                "properties": {
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockPageLine"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageCellV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockPageCell:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "line": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "$ref": "#/components/schemas/BlockPageLine:jsonld"
                    },
                    "width": {
                        "type": "string",
                        "nullable": true
                    },
                    "contentType": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "type": "string",
                        "nullable": true
                    },
                    "widgetVariant": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "designOptions": {
                        "description": "TODO type json pour avoir un array direct",
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageCellV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockPageCellV": {
                "type": "object",
                "properties": {
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockPageCellV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "content": {
                        "description": "Contenu, le format d\u00e9pend du type, probl\u00e8me :\nc'est en json, sauf pour type text, o\u00f9 c'est directement le contenu text\n\u00e7a devrait \u00eatre un widget comme tout le reste",
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "cachedContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "cachedContentExpirationDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockPageLine": {
                "type": "object",
                "properties": {
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PageBlock"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageCell"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageLineV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockPageLine:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "block": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PageBlock:jsonld"
                            }
                        ]
                    },
                    "cssClass": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssStyle": {
                        "type": "string",
                        "nullable": true
                    },
                    "height": {
                        "type": "integer",
                        "nullable": true
                    },
                    "position": {
                        "type": "integer"
                    },
                    "pagination": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cells": {
                        "description": "FAIRE LE MAPPING DANS L'ENTITY",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageCell:jsonld"
                        }
                    },
                    "cell": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockCellInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageLineV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "BlockPageLineV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlockPageLineV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "BlogPost:cfba0aa09261d831c83f1f9969814d18": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "publishTo": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isPinned": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "intro": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BlogPost:cfba0aa09261d831c83f1f9969814d18:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "publishTo": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "isPinned": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "intro": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteUrl": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Brand:2fb1a13c6cb9d850d673a6831c427f00": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "technicalDomain": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "defaultLang": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "noreplyEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string"
                    },
                    "directoryEdito": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultTimezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "loginIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "credits": {
                        "type": "number",
                        "nullable": true
                    },
                    "billingFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingZipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "tvaIntra": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "newUserRegistrationEnabled": {
                        "type": "boolean"
                    },
                    "newSiteCreationEnabled": {
                        "type": "boolean"
                    },
                    "brandDomains": {},
                    "changelogifyAppId": {
                        "type": "string",
                        "nullable": true
                    },
                    "hcaptcha": {
                        "type": "boolean"
                    }
                }
            },
            "Brand:2fb1a13c6cb9d850d673a6831c427f00:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "technicalDomain": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "defaultLang": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "noreplyEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string"
                    },
                    "directoryEdito": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultTimezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "loginIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "credits": {
                        "type": "number",
                        "nullable": true
                    },
                    "billingFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingZipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "tvaIntra": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "newUserRegistrationEnabled": {
                        "type": "boolean"
                    },
                    "newSiteCreationEnabled": {
                        "type": "boolean"
                    },
                    "brandDomains": {},
                    "changelogifyAppId": {
                        "type": "string",
                        "nullable": true
                    },
                    "hcaptcha": {
                        "type": "boolean"
                    }
                }
            },
            "Brand:962c5489a05f3ff6192cd4c630d8abd7": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "technicalDomain": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "defaultLang": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "noreplyEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "fromtoEmailAmazon": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string"
                    },
                    "directoryEdito": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultTimezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactAddress": {
                        "type": "string",
                        "nullable": true
                    },
                    "credits": {
                        "type": "number",
                        "nullable": true
                    },
                    "envoimoinscher": {
                        "type": "boolean"
                    },
                    "billingFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingOrganisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingZipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "billingCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "tvaIntra": {
                        "type": "string",
                        "nullable": true
                    },
                    "mailchimpKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "mailchimpDefaultListId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "disableNewUserRegistration": {
                        "type": "boolean"
                    },
                    "disableNewSiteCreation": {
                        "type": "boolean"
                    },
                    "brandDomains": {},
                    "changelogifyAppId": {
                        "type": "string",
                        "nullable": true
                    },
                    "managerGoogleLoginEnabled": {
                        "type": "boolean"
                    },
                    "hcaptcha": {
                        "type": "boolean"
                    },
                    "blogUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "blogFeedUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "forumUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "forumFeedUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "facebookPageUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "twitterAccountUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "twitterAccountId": {
                        "type": "string",
                        "nullable": true
                    },
                    "youtubeChannelUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageContactUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageContactSupportUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageContactClientUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageContactIllicitContentUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageHelpUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersFreeUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersNoAd2Url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersVpro2Url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersEco2Url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pageOffersBusiness2Url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pagePresentationUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "loginIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "directoryEnabled": {
                        "type": "boolean"
                    },
                    "adsEnabled": {
                        "type": "boolean"
                    },
                    "faqEnabled": {
                        "type": "boolean"
                    },
                    "useZendeskFaq": {
                        "type": "boolean"
                    },
                    "phoneSupportEnabled": {
                        "type": "boolean"
                    },
                    "tutorialEnabled": {
                        "type": "boolean"
                    },
                    "tutorialLink": {
                        "type": "string",
                        "nullable": true
                    },
                    "guideUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoGuideUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "ecoGuideUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "offersDisabled": {
                        "type": "boolean"
                    },
                    "supportContactAdapter": {
                        "type": "string",
                        "nullable": true
                    },
                    "supportContactZendeskTags": {
                        "type": "string",
                        "nullable": true
                    },
                    "supportContactLuminjoPublicKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "supportContactLuminjoPrivateKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "supportContactLuminjoTags": {
                        "type": "string",
                        "nullable": true
                    },
                    "supportContactLuminjoFolder": {
                        "type": "string",
                        "nullable": true
                    },
                    "directoryMetaDescription": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "brand": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "BrandMailtemplate:f7868dc2d61d9d5900e2966c0baf4626:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "brand": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Branddomain:5a892977f4b30fe6e5d02bbae1dcc678": {
                "type": "object",
                "description": "Branddomain",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                }
            },
            "Branddomain:5a892977f4b30fe6e5d02bbae1dcc678:jsonld": {
                "type": "object",
                "description": "Branddomain",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "domain": {
                        "type": "string"
                    }
                }
            },
            "Category:1244f72848b2e9f4bc7039366e5cef3e": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "parent": {},
                    "modelId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "masked": {
                        "type": "boolean"
                    }
                }
            },
            "Category:1244f72848b2e9f4bc7039366e5cef3e:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "parent": {},
                    "modelId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "masked": {
                        "type": "boolean"
                    }
                }
            },
            "Category:a72a7db8b7aeb918546eb332f4161205": {
                "type": "object",
                "description": "",
                "required": [
                    "siteId",
                    "name"
                ],
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string",
                        "nullable": true
                    },
                    "modelId": {
                        "description": "TODO validation de l'input",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "masked": {
                        "type": "boolean"
                    }
                }
            },
            "Category:a72a7db8b7aeb918546eb332f4161205:jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "siteId",
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "parentId": {
                        "type": "string",
                        "nullable": true
                    },
                    "modelId": {
                        "description": "TODO validation de l'input",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "masked": {
                        "type": "boolean"
                    }
                }
            },
            "Collection": {
                "type": "object",
                "properties": {
                    "empty": {
                        "readOnly": true,
                        "description": "Checks whether the collection is empty (contains no elements).",
                        "type": "boolean"
                    },
                    "element": {
                        "writeOnly": true,
                        "description": "Removes the specified element from the collection, if it is found."
                    },
                    "keys": {
                        "readOnly": true,
                        "description": "Gets all keys/indices of the collection.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "values": {
                        "readOnly": true,
                        "description": "Gets all values of the collection.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iterator": {
                        "readOnly": true
                    }
                }
            },
            "Collection:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "empty": {
                        "readOnly": true,
                        "description": "Checks whether the collection is empty (contains no elements).",
                        "type": "boolean"
                    },
                    "element": {
                        "writeOnly": true,
                        "description": "Removes the specified element from the collection, if it is found."
                    },
                    "keys": {
                        "readOnly": true,
                        "description": "Gets all keys/indices of the collection.",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "values": {
                        "readOnly": true,
                        "description": "Gets all values of the collection.",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "iterator": {
                        "readOnly": true
                    }
                }
            },
            "Command:13659cedec6eacf2649cf892ab7577d0": {
                "type": "object",
                "description": "",
                "properties": {
                    "status": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Command:ee5f35022d477654f1cddfdb02f77421": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {},
                    "paymentDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "brand": {},
                    "reference": {
                        "type": "string"
                    },
                    "legalform": {
                        "type": "string",
                        "nullable": true
                    },
                    "total": {
                        "type": "number"
                    },
                    "paymean": {
                        "description": "cb : CB,\ncheck : Ch\u00e8que,\ntransfer : Virement,\npaypal : Paypal,\ncredits : Cr\u00e9dits,\nstripe : Stripe,\ncase : Esp\u00e8ce",
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "organisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "addr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string"
                    },
                    "tvaIntra": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "cart : Panier,\nlocked : En attente de paiement,\npaid : Pay\u00e9e,\ncanceled : annul\u00e9e",
                        "type": "string",
                        "nullable": true
                    },
                    "statusDetail": {
                        "type": "string",
                        "nullable": true
                    },
                    "promo": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyTotal": {
                        "type": "number"
                    },
                    "priceWithoutPromos": {
                        "type": "number",
                        "nullable": true
                    },
                    "currencyPriceWithoutPromos": {
                        "type": "number",
                        "nullable": true
                    },
                    "currencyMonthlyTotal": {
                        "type": "number",
                        "nullable": true
                    },
                    "monthlyActive": {
                        "type": "boolean"
                    },
                    "products": {},
                    "invoices": {}
                }
            },
            "Command:ee5f35022d477654f1cddfdb02f77421:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {},
                    "paymentDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "brand": {},
                    "reference": {
                        "type": "string"
                    },
                    "legalform": {
                        "type": "string",
                        "nullable": true
                    },
                    "total": {
                        "type": "number"
                    },
                    "paymean": {
                        "description": "cb : CB,\ncheck : Ch\u00e8que,\ntransfer : Virement,\npaypal : Paypal,\ncredits : Cr\u00e9dits,\nstripe : Stripe,\ncase : Esp\u00e8ce",
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "organisation": {
                        "type": "string",
                        "nullable": true
                    },
                    "addr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipcode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string"
                    },
                    "tvaIntra": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "description": "cart : Panier,\nlocked : En attente de paiement,\npaid : Pay\u00e9e,\ncanceled : annul\u00e9e",
                        "type": "string",
                        "nullable": true
                    },
                    "statusDetail": {
                        "type": "string",
                        "nullable": true
                    },
                    "promo": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyTotal": {
                        "type": "number"
                    },
                    "priceWithoutPromos": {
                        "type": "number",
                        "nullable": true
                    },
                    "currencyPriceWithoutPromos": {
                        "type": "number",
                        "nullable": true
                    },
                    "currencyMonthlyTotal": {
                        "type": "number",
                        "nullable": true
                    },
                    "monthlyActive": {
                        "type": "boolean"
                    },
                    "products": {},
                    "invoices": {}
                }
            },
            "CommandProduct:e6648ceda3fb8628d90f7e34797db5f5": {
                "type": "object",
                "description": "",
                "properties": {
                    "command": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "offer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    },
                    "renew": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "sslInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyPrice": {
                        "type": "number"
                    },
                    "coupon": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionQty": {
                        "type": "integer",
                        "nullable": true
                    },
                    "information": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CommandProduct:e6648ceda3fb8628d90f7e34797db5f5:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "command": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "offer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    },
                    "renew": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "sslInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyPrice": {
                        "type": "number"
                    },
                    "coupon": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionQty": {
                        "type": "integer",
                        "nullable": true
                    },
                    "information": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CommandProduct:e9771de728231a75b73008fe2e6c0e5f": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string",
                        "nullable": true
                    },
                    "plan": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {},
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    },
                    "renew": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "sslInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyPrice": {
                        "type": "number"
                    },
                    "coupon": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionQty": {
                        "type": "integer",
                        "nullable": true
                    },
                    "information": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CommandProduct:e9771de728231a75b73008fe2e6c0e5f:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "offer": {
                        "type": "string",
                        "nullable": true
                    },
                    "plan": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {},
                    "quantity": {
                        "type": "integer"
                    },
                    "price": {
                        "type": "number"
                    },
                    "renew": {
                        "type": "boolean"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "domain": {
                        "type": "string",
                        "nullable": true
                    },
                    "domainInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "sslInfos": {
                        "type": "string",
                        "nullable": true
                    },
                    "currency": {
                        "type": "string"
                    },
                    "currencyPrice": {
                        "type": "number"
                    },
                    "coupon": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "optionQty": {
                        "type": "integer",
                        "nullable": true
                    },
                    "information": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Coupon:118a7fb412c704381e027860fe8a9169": {
                "type": "object",
                "description": "",
                "required": [
                    "code",
                    "applicableOn"
                ],
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "availableOnRenew": {
                        "type": "boolean"
                    },
                    "availableOnNewbuy": {
                        "type": "boolean"
                    },
                    "maxUsedNb": {
                        "type": "integer",
                        "nullable": true
                    },
                    "freetime": {
                        "type": "boolean"
                    },
                    "minDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "maxDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "valuePercent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "applicableOn": {
                        "type": "string",
                        "enum": [
                            "currency",
                            "percent"
                        ],
                        "example": "currency"
                    },
                    "minPriceEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionOn": {
                        "type": "string",
                        "nullable": true
                    },
                    "activeOffers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Coupon:118a7fb412c704381e027860fe8a9169:jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "code",
                    "applicableOn"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "availableOnRenew": {
                        "type": "boolean"
                    },
                    "availableOnNewbuy": {
                        "type": "boolean"
                    },
                    "maxUsedNb": {
                        "type": "integer",
                        "nullable": true
                    },
                    "freetime": {
                        "type": "boolean"
                    },
                    "minDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "maxDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "valuePercent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "applicableOn": {
                        "type": "string",
                        "enum": [
                            "currency",
                            "percent"
                        ],
                        "example": "currency"
                    },
                    "minPriceEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionOn": {
                        "type": "string",
                        "nullable": true
                    },
                    "activeOffers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Coupon:56c6e2889ced52899ea604222e3c8c36": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableOnRenew": {
                        "type": "boolean"
                    },
                    "availableOnNewbuy": {
                        "type": "boolean"
                    },
                    "usedNb": {
                        "type": "integer"
                    },
                    "maxUsedNb": {
                        "type": "integer",
                        "nullable": true
                    },
                    "limitReached": {
                        "type": "boolean"
                    },
                    "freetime": {
                        "type": "boolean"
                    },
                    "minDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "maxDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "valuePercent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "applicableOn": {
                        "type": "string"
                    },
                    "minPriceEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionOn": {
                        "type": "string",
                        "nullable": true
                    },
                    "activeOffers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versions": {}
                }
            },
            "Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "offers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "availableOnRenew": {
                        "type": "boolean"
                    },
                    "availableOnNewbuy": {
                        "type": "boolean"
                    },
                    "usedNb": {
                        "type": "integer"
                    },
                    "maxUsedNb": {
                        "type": "integer",
                        "nullable": true
                    },
                    "limitReached": {
                        "type": "boolean"
                    },
                    "freetime": {
                        "type": "boolean"
                    },
                    "minDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "maxDt": {
                        "type": "integer",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteId": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string",
                        "nullable": true
                    },
                    "valueEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "valueGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "valuePercent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "applicableOn": {
                        "type": "string"
                    },
                    "minPriceEur": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceUsd": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceAud": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceCad": {
                        "type": "number",
                        "nullable": true
                    },
                    "minPriceGbp": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionOn": {
                        "type": "string",
                        "nullable": true
                    },
                    "activeOffers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "versions": {}
                }
            },
            "CustomThemeVariation": {
                "type": "object",
                "properties": {
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "themeId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "variationId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "params": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "css": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssoverride": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "avatarFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "mediumFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "maxiFormat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "CustomThemeVariation:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "themeId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "variationId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "params": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "css": {
                        "type": "string",
                        "nullable": true
                    },
                    "cssoverride": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "avatarFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "thumbnailFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "mediumFormat": {
                        "type": "string",
                        "nullable": true
                    },
                    "maxiFormat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectoryCategory:31fbbfdd88806b77396d71a17314e994": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tradName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "edito": {
                        "type": "string",
                        "nullable": true
                    },
                    "h1": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMakeH2": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMake": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectoryCategory:31fbbfdd88806b77396d71a17314e994:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "tradName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "edito": {
                        "type": "string",
                        "nullable": true
                    },
                    "h1": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMakeH2": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMake": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectoryCategory:866944aa50655fd7df7140606ff983e5": {
                "type": "object",
                "description": "",
                "properties": {
                    "edito": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectoryCategory:88821a0000ba036256fd388bd5e0b115": {
                "type": "object",
                "description": "",
                "properties": {
                    "tradName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "edito": {
                        "type": "string",
                        "nullable": true
                    },
                    "h1": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMakeH2": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMake": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectoryCategory:88821a0000ba036256fd388bd5e0b115:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "tradName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "uri": {
                        "type": "string",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "edito": {
                        "type": "string",
                        "nullable": true
                    },
                    "h1": {
                        "type": "string"
                    },
                    "metaDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMakeH2": {
                        "type": "string",
                        "nullable": true
                    },
                    "howToMake": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectorySite:966bbe081a8f082ba358af25f71a3895": {
                "type": "object",
                "description": "",
                "properties": {
                    "featured": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "featuredCategory": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "DirectorySite:9cb6adf6305292849b553106f66e2a8e": {
                "type": "object",
                "description": "",
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "featured": {
                        "type": "boolean"
                    },
                    "featuredCategory": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    }
                }
            },
            "DirectorySite:9cb6adf6305292849b553106f66e2a8e:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "category": {
                        "type": "string",
                        "nullable": true
                    },
                    "featured": {
                        "type": "boolean"
                    },
                    "featuredCategory": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "keywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    }
                }
            },
            "DirectorySite:c4b6d694621fb452df0348553f6c643b": {
                "type": "object",
                "description": "",
                "properties": {
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "parentCategory": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "featured": {
                        "type": "boolean"
                    },
                    "featuredCategory": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "keywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "browsershotGeneratedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "DirectorySite:c4b6d694621fb452df0348553f6c643b:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "parentCategory": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "featured": {
                        "type": "boolean"
                    },
                    "featuredCategory": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "keywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "browsershotGeneratedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "EcoAddress:77238a8f1065d4119c83bccaf7ecf57f": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "type": {
                        "description": "invoice|delivery|both",
                        "type": "string"
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "line1": {
                        "type": "string",
                        "nullable": true
                    },
                    "line2": {
                        "type": "string",
                        "nullable": true
                    },
                    "line3": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "intracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "siret": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoAddress:77238a8f1065d4119c83bccaf7ecf57f:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "supplier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "type": {
                        "description": "invoice|delivery|both",
                        "type": "string"
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "gender": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "line1": {
                        "type": "string",
                        "nullable": true
                    },
                    "line2": {
                        "type": "string",
                        "nullable": true
                    },
                    "line3": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "intracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "siret": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoAdvicesConfig": {
                "type": "object",
                "properties": {
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "avisVerifiesRawConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "econfianceConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoAdvicesConfig:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "source": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "avisVerifiesRawConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "econfianceConfig": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoCarrier:eb0f7227c629f25ab3eaf649171a15ab": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "info": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EcoCarrier:eb0f7227c629f25ab3eaf649171a15ab:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "info": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EcoCollectionPoint:563c4b10d21b54db780227488e899fa5": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "cost": {
                        "type": "number"
                    },
                    "schedule": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "availableForInStorePickUp": {
                        "type": "boolean"
                    },
                    "availableForDrive": {
                        "type": "boolean"
                    },
                    "availableForClickAndCollect": {
                        "type": "boolean"
                    },
                    "retentionTime": {
                        "type": "integer"
                    },
                    "availabilityDelay": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoCollectionPoint:563c4b10d21b54db780227488e899fa5:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "latitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "cost": {
                        "type": "number"
                    },
                    "schedule": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "availableForInStorePickUp": {
                        "type": "boolean"
                    },
                    "availableForDrive": {
                        "type": "boolean"
                    },
                    "availableForClickAndCollect": {
                        "type": "boolean"
                    },
                    "retentionTime": {
                        "type": "integer"
                    },
                    "availabilityDelay": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    }
                }
            },
            "EcoCombination:3bb0d34c5ea0c72f2026a57c27faba00:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                }
            },
            "EcoCombination:a3c1a277fc6663e5ff2c6f85617980fe": {
                "type": "object",
                "description": "",
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    }
                }
            },
            "EcoCombination:a3c1a277fc6663e5ff2c6f85617980fe:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    }
                }
            },
            "EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "freeShipping": {
                        "type": "boolean"
                    },
                    "freeWrapping": {
                        "type": "boolean"
                    },
                    "reductionFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reductionPurchaseMinimum": {
                        "type": "number",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "oneByUser": {
                        "type": "boolean"
                    },
                    "display": {
                        "type": "boolean"
                    }
                }
            },
            "EcoDiscount:9b4a1b3cb469f303a66926f3d9bc3ad0:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "freeShipping": {
                        "type": "boolean"
                    },
                    "freeWrapping": {
                        "type": "boolean"
                    },
                    "reductionFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reductionPurchaseMinimum": {
                        "type": "number",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "oneByUser": {
                        "type": "boolean"
                    },
                    "display": {
                        "type": "boolean"
                    }
                }
            },
            "EcoDiscount:b3d1155ab8f4c317b0b03ea010998010": {
                "type": "object",
                "description": "",
                "required": [
                    "code"
                ],
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "freeShipping": {
                        "type": "boolean"
                    },
                    "freeWrapping": {
                        "type": "boolean"
                    },
                    "reductionFrom": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionPurchaseMinimum": {
                        "type": "number",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "oneByUser": {
                        "type": "boolean"
                    },
                    "display": {
                        "type": "boolean"
                    }
                }
            },
            "EcoDiscount:d3d9b67a56fd84ba8bd9bd07a15bcf49": {
                "type": "object",
                "description": "",
                "required": [
                    "siteId",
                    "code"
                ],
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "freeShipping": {
                        "type": "boolean"
                    },
                    "freeWrapping": {
                        "type": "boolean"
                    },
                    "reductionFrom": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionPurchaseMinimum": {
                        "type": "number",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "oneByUser": {
                        "type": "boolean"
                    },
                    "display": {
                        "type": "boolean"
                    }
                }
            },
            "EcoDiscount:d3d9b67a56fd84ba8bd9bd07a15bcf49:jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "siteId",
                    "code"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "freeShipping": {
                        "type": "boolean"
                    },
                    "freeWrapping": {
                        "type": "boolean"
                    },
                    "reductionFrom": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "integer",
                        "nullable": true
                    },
                    "reductionPurchaseMinimum": {
                        "type": "number",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "oneByUser": {
                        "type": "boolean"
                    },
                    "display": {
                        "type": "boolean"
                    }
                }
            },
            "EcoFacetFilters": {
                "type": "object",
                "properties": {
                    "config": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "EcoFacetFilters:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "config": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "EcoLoyaltyPoints": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "activeTopaidOrder": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "seuil": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "palier": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "tauxAttribution": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "tauxRedemption": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "showProduct": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "startPoints": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "showTauxRedemption": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "showTauxRedemptionCart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "accessRights": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "categoriesRights": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "categories": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "groups": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membergroup"
                        }
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "EcoLoyaltyPoints:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "activeTopaidOrder": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "seuil": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "palier": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "tauxAttribution": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "tauxRedemption": {
                        "readOnly": true,
                        "type": "number"
                    },
                    "showProduct": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "startPoints": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "showTauxRedemption": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "showTauxRedemptionCart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "accessRights": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "categoriesRights": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "categories": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "groups": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Membergroup:jsonld"
                        }
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "EcoManufacturer:3fefe29d8db145737169803b5fde4d82": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoManufacturer:3fefe29d8db145737169803b5fde4d82:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "member": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "memberEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "memberLang": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string"
                    },
                    "deliveryAddress": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "invoiceAddress": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "carrier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "packlink": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "boxtalCarrier": {
                        "type": "boolean"
                    },
                    "boxtalParams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "store": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string"
                    },
                    "paymeanType": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalProductsHt": {
                        "type": "number"
                    },
                    "totalProductsTtc": {
                        "type": "number"
                    },
                    "totalShippingTtc": {
                        "type": "number"
                    },
                    "totalShippingHt": {
                        "type": "number"
                    },
                    "totalShippingTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalShippingTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalPaymeanTtc": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanHt": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalWrappingTtc": {
                        "type": "number"
                    },
                    "totalWrappingHt": {
                        "type": "number"
                    },
                    "totalWrappingTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalWrappingTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalReductionsTtc": {
                        "type": "number"
                    },
                    "totalTopay": {
                        "type": "number"
                    },
                    "totalPaid": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalProductsWeight": {
                        "type": "number"
                    },
                    "paidAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "paymentStatus": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "integer",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "customStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryShippingNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveredAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "refundedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true
                    },
                    "discount": {
                        "type": "string",
                        "nullable": true
                    },
                    "nbLoyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "usedLoyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "totalLoyaltyPoints": {
                        "type": "number",
                        "nullable": true
                    },
                    "deliveryCivility": {
                        "type": "integer",
                        "nullable": true
                    },
                    "deliveryFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCompany": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryIntracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCivility": {
                        "type": "integer",
                        "nullable": true
                    },
                    "invoiceFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCompany": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoicePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceIntracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "lines": {}
                }
            },
            "EcoOrder:06eb27d89b43dc4782ed8913cc65bcf1:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "member": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "memberEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "memberLang": {
                        "type": "string",
                        "nullable": true
                    },
                    "number": {
                        "type": "string"
                    },
                    "deliveryAddress": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "invoiceAddress": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "carrier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "packlink": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "boxtalCarrier": {
                        "type": "boolean"
                    },
                    "boxtalParams": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "store": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "paymean": {
                        "type": "string"
                    },
                    "paymeanType": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalProductsHt": {
                        "type": "number"
                    },
                    "totalProductsTtc": {
                        "type": "number"
                    },
                    "totalShippingTtc": {
                        "type": "number"
                    },
                    "totalShippingHt": {
                        "type": "number"
                    },
                    "totalShippingTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalShippingTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalPaymeanTtc": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanHt": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalPaymeanTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalWrappingTtc": {
                        "type": "number"
                    },
                    "totalWrappingHt": {
                        "type": "number"
                    },
                    "totalWrappingTaxRate": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalWrappingTaxName": {
                        "type": "string",
                        "nullable": true
                    },
                    "totalReductionsTtc": {
                        "type": "number"
                    },
                    "totalTopay": {
                        "type": "number"
                    },
                    "totalPaid": {
                        "type": "number",
                        "nullable": true
                    },
                    "totalProductsWeight": {
                        "type": "number"
                    },
                    "paidAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "paymentStatus": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceDate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "deliveryNumber": {
                        "type": "integer",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "customStatus": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryShippingNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryComments": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveredAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "refundedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "comments": {
                        "type": "string",
                        "nullable": true
                    },
                    "discount": {
                        "type": "string",
                        "nullable": true
                    },
                    "nbLoyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "usedLoyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "totalLoyaltyPoints": {
                        "type": "number",
                        "nullable": true
                    },
                    "deliveryCivility": {
                        "type": "integer",
                        "nullable": true
                    },
                    "deliveryFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCompany": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryIntracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCivility": {
                        "type": "integer",
                        "nullable": true
                    },
                    "invoiceFirstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceLastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCompany": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoicePhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceIntracomm": {
                        "type": "string",
                        "nullable": true
                    },
                    "lines": {}
                }
            },
            "EcoOrder:93bd0f9e3377e379cb5585eb311ed117": {
                "type": "object",
                "description": "",
                "properties": {
                    "paymentStatus": {
                        "description": "pending|received|refunding|refunded|canceled",
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "nullable": true
                    },
                    "deliveryShippingNumber": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoOrderDetail:7aba138374756b6a38adb2fea47d2260": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "product": {},
                    "combination": {},
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pictureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "taxId": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "puHt": {
                        "type": "number",
                        "nullable": true
                    },
                    "puTtc": {
                        "type": "number",
                        "nullable": true
                    },
                    "downloadableProduct": {
                        "type": "boolean"
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "customField": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                }
            },
            "EcoOrderDetail:7aba138374756b6a38adb2fea47d2260:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "product": {},
                    "combination": {},
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "url": {
                        "type": "string",
                        "nullable": true
                    },
                    "pictureUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "taxId": {
                        "type": "string"
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "puHt": {
                        "type": "number",
                        "nullable": true
                    },
                    "puTtc": {
                        "type": "number",
                        "nullable": true
                    },
                    "downloadableProduct": {
                        "type": "boolean"
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "customField": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                }
            },
            "EcoOrderDetailUpload": {
                "type": "object",
                "description": "",
                "properties": {
                    "sessionId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "customfield": {
                        "readOnly": true,
                        "description": "TODO entit\u00e9 eco_product_customfield",
                        "type": "string"
                    },
                    "cartitemkey": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "order": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "member": {
                        "readOnly": true,
                        "description": "TODO A supprimer ? D\u00e9j\u00e0 dans EcoOrder",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "file": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileSize": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoOrderDetailUpload:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessionId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "customfield": {
                        "readOnly": true,
                        "description": "TODO entit\u00e9 eco_product_customfield",
                        "type": "string"
                    },
                    "cartitemkey": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "order": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "member": {
                        "readOnly": true,
                        "description": "TODO A supprimer ? D\u00e9j\u00e0 dans EcoOrder",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "file": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "fileSize": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoPacklink": {
                "type": "object",
                "properties": {
                    "ecoConfig": {
                        "$ref": "#/components/schemas/EcoSite"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "activeCarriers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "packageDefined": {
                        "readOnly": true,
                        "description": "D\u00e9termine si un colis type a \u00e9t\u00e9 renseign\u00e9",
                        "type": "boolean"
                    },
                    "senderDefined": {
                        "readOnly": true,
                        "description": "D\u00e9termine si les coordonn\u00e9es d'exp\u00e9diteurs ont \u00e9t\u00e9 renseign\u00e9s",
                        "type": "boolean"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EcoPacklinkHasZone"
                        }
                    },
                    "tax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoPacklink:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "ecoConfig": {
                        "$ref": "#/components/schemas/EcoSite:jsonld"
                    },
                    "apiKey": {
                        "type": "string"
                    },
                    "activeCarriers": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "company": {
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "packages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "packageDefined": {
                        "readOnly": true,
                        "description": "D\u00e9termine si un colis type a \u00e9t\u00e9 renseign\u00e9",
                        "type": "boolean"
                    },
                    "senderDefined": {
                        "readOnly": true,
                        "description": "D\u00e9termine si les coordonn\u00e9es d'exp\u00e9diteurs ont \u00e9t\u00e9 renseign\u00e9s",
                        "type": "boolean"
                    },
                    "zones": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EcoPacklinkHasZone:jsonld"
                        }
                    },
                    "tax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoPacklinkCarrier:36308a1b3d24cc804f1a513e820d895b": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoPacklinkCarrier:36308a1b3d24cc804f1a513e820d895b:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoPacklinkHasZone": {
                "type": "object",
                "properties": {
                    "carrier": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/EcoPacklink"
                    },
                    "zone": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/EcoZone"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoPacklinkHasZone:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "carrier": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/EcoPacklink:jsonld"
                    },
                    "zone": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/EcoZone:jsonld"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "EcoPicture:79ef563d06537e846c283ccecbecc002": {
                "type": "object",
                "description": "",
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "storageImageId": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "integer"
                    }
                }
            },
            "EcoPicture:79ef563d06537e846c283ccecbecc002:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "productId": {
                        "type": "string"
                    },
                    "storageImageId": {
                        "type": "string"
                    },
                    "ordering": {
                        "type": "integer"
                    }
                }
            },
            "EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "image": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "ordering": {
                        "type": "integer"
                    }
                }
            },
            "EcoPicture:db02d0aaad5f8444eaf8f3e058d9affe:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "product": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "image": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "ordering": {
                        "type": "integer"
                    }
                }
            },
            "EcoProduct:598f8229d42c1ae36352f3a2f993e71a": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "supplier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "tax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "numSales": {
                        "type": "integer",
                        "nullable": true
                    },
                    "outOfStock": {
                        "type": "string"
                    },
                    "wholesalePrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "price": {
                        "type": "number"
                    },
                    "ecotax": {
                        "type": "number",
                        "nullable": true
                    },
                    "hasReduction": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerKilo": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "dlProduct": {
                        "type": "boolean"
                    },
                    "dlFilepath": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultPicture": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "pictures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "EcoProduct:598f8229d42c1ae36352f3a2f993e71a:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "supplier": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "manufacturer": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "tax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "numSales": {
                        "type": "integer",
                        "nullable": true
                    },
                    "outOfStock": {
                        "type": "string"
                    },
                    "wholesalePrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "price": {
                        "type": "number"
                    },
                    "ecotax": {
                        "type": "number",
                        "nullable": true
                    },
                    "hasReduction": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerKilo": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "dlProduct": {
                        "type": "boolean"
                    },
                    "dlFilepath": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultPicture": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "pictures": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "EcoProduct:91429ff1a736cfe91b412a9d5d2f8bd1": {
                "type": "object",
                "description": "",
                "properties": {
                    "published": {
                        "type": "boolean"
                    },
                    "categoryId": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierId": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxId": {
                        "type": "string",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "numSales": {
                        "type": "integer",
                        "nullable": true
                    },
                    "outOfStock": {
                        "type": "integer",
                        "nullable": true
                    },
                    "price": {
                        "type": "number"
                    },
                    "ecotax": {
                        "type": "number",
                        "nullable": true
                    },
                    "hasReduction": {
                        "type": "boolean"
                    },
                    "reductionByCategoryId": {
                        "type": "string",
                        "nullable": true
                    },
                    "hasReductionByQuantity": {
                        "type": "boolean"
                    },
                    "reductionPrice": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionPercent": {
                        "type": "number",
                        "nullable": true
                    },
                    "reductionFrom": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reductionTo": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "onSale": {
                        "type": "boolean"
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerKilo": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoProduct:d02cf7d16e689640fac55c85a0d3ce3f": {
                "type": "object",
                "description": "",
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "categoryId": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierId": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxId": {
                        "type": "string",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "price": {
                        "type": "number"
                    },
                    "ecotax": {
                        "type": "number",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerKilo": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoProduct:d02cf7d16e689640fac55c85a0d3ce3f:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "categoryId": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierId": {
                        "type": "string",
                        "nullable": true
                    },
                    "manufacturerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "taxId": {
                        "type": "string",
                        "nullable": true
                    },
                    "reference": {
                        "type": "string",
                        "nullable": true
                    },
                    "supplierReference": {
                        "type": "string",
                        "nullable": true
                    },
                    "ean13": {
                        "type": "string",
                        "nullable": true
                    },
                    "quantity": {
                        "type": "integer",
                        "nullable": true
                    },
                    "price": {
                        "type": "number"
                    },
                    "ecotax": {
                        "type": "number",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerKilo": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerLiter": {
                        "type": "number",
                        "nullable": true
                    },
                    "pricePerUnit": {
                        "type": "number",
                        "nullable": true
                    },
                    "condition": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "EcoSite": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "sellingEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shopEmail": {
                        "type": "string"
                    },
                    "shopDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopState": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "shopTimezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopFax": {
                        "type": "string",
                        "nullable": true
                    },
                    "conditions": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "purchaseMinimum": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "giftWrapping": {
                        "readOnly": true,
                        "type": "boolean",
                        "nullable": true
                    },
                    "giftWrappingPrice": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "giftWrappingTax": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "recyclablePack": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "priceDisplay": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "tax": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "taxDefault": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "defaultTax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "stockManagement": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderOutOfStock": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displayQties": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "thresholdDisplayQties": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "lastQties": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "stockAlertMailEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "destockEvent": {
                        "readOnly": true,
                        "description": "Quand retirer les produits du stock (panier, validation_commande, validation_paiement)",
                        "type": "integer"
                    },
                    "productsPerPage": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "productsShowPagination": {
                        "readOnly": true,
                        "description": "Afficher la pagination des produits (* 0 en haut, 1 en bas, 2 les deux)",
                        "type": "integer"
                    },
                    "productsOrderBy": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "productsOrderWay": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nbDaysNewProduct": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "shippingHandling": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "shippingFreeOnPrice": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shippingFreePrice": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "shippingFreeOnWeight": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shippingFreeWeight": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "shippingMethod": {
                        "readOnly": true,
                        "description": "calcul des frais de manutentions: par tranche de prix ou tranche de poids",
                        "type": "integer",
                        "nullable": true
                    },
                    "weightUnit": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "currencyDefault": {
                        "type": "string"
                    },
                    "currencyDecimals": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "currencyDecimalsSep": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "currencyThousandsSep": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "currencySignBefore": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "invoicePrefix": {
                        "type": "string"
                    },
                    "invoiceNumber": {
                        "type": "integer"
                    },
                    "nextInvoiceReference": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deliveryPrefix": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deliveryNumber": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "orderReturn": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderReturnNbDays": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "vouchersEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commentsEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displaySupplierImage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displayManufacturerImage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "allowDiscounts": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "allowoDiscunts": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "abletobuy": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "abletobuyMembergroup": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Membergroup"
                            }
                        ]
                    },
                    "published": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderingNotification": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "defaultCustomerCountry": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "showReference": {
                        "type": "boolean"
                    },
                    "envoiMoinsCher": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroActive": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "wuroKey": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBrandId": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "wuroModelName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroCategoryName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBillingDocumentModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoImageListing": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "seoImageTopPage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commandPrefix": {
                        "type": "string",
                        "nullable": true
                    },
                    "csPopup": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sessionCart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sessionCartPourcent": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "listingRating": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "listingStepper": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "showReduction": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "stockAlertClientMailEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "richSnippet": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "gshoppingExcludedDest": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBillingEnabled": {
                        "type": "boolean"
                    },
                    "wuroQuoteEnabled": {
                        "type": "boolean"
                    },
                    "wuroQuoteDocumentModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceNumberWithPrefixAndIncrement": {
                        "readOnly": true,
                        "description": "Return current full invoice number (with prefix) and increment number for next invoice.",
                        "type": "string"
                    },
                    "packlinkConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoPacklink"
                            }
                        ]
                    },
                    "displayProductReference": {
                        "type": "boolean"
                    },
                    "gShoppingRestockDelay": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "collectTvaCustomer": {
                        "type": "boolean"
                    },
                    "googleContentApiToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiRefreshToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiTokenExpiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "googleMerchantId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiTokenExpired": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "googleContentApiUpdates": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Collection"
                    },
                    "facetConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoFacetFilters"
                            }
                        ]
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EcoSiteV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "EcoSite:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sellingEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shopEmail": {
                        "type": "string"
                    },
                    "shopDetails": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopAddr1": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopAddr2": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCity": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopCountry": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopState": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "shopTimezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "shopFax": {
                        "type": "string",
                        "nullable": true
                    },
                    "conditions": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "purchaseMinimum": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "giftWrapping": {
                        "readOnly": true,
                        "type": "boolean",
                        "nullable": true
                    },
                    "giftWrappingPrice": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "giftWrappingTax": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "recyclablePack": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "priceDisplay": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "tax": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "taxDefault": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "defaultTax": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "stockManagement": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderOutOfStock": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displayQties": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "thresholdDisplayQties": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "lastQties": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "stockAlertMailEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "destockEvent": {
                        "readOnly": true,
                        "description": "Quand retirer les produits du stock (panier, validation_commande, validation_paiement)",
                        "type": "integer"
                    },
                    "productsPerPage": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "productsShowPagination": {
                        "readOnly": true,
                        "description": "Afficher la pagination des produits (* 0 en haut, 1 en bas, 2 les deux)",
                        "type": "integer"
                    },
                    "productsOrderBy": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "productsOrderWay": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "nbDaysNewProduct": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "shippingHandling": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "shippingFreeOnPrice": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shippingFreePrice": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "shippingFreeOnWeight": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "shippingFreeWeight": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "shippingMethod": {
                        "readOnly": true,
                        "description": "calcul des frais de manutentions: par tranche de prix ou tranche de poids",
                        "type": "integer",
                        "nullable": true
                    },
                    "weightUnit": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "currencyDefault": {
                        "type": "string"
                    },
                    "currencyDecimals": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "currencyDecimalsSep": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "currencyThousandsSep": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "currencySignBefore": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "invoicePrefix": {
                        "type": "string"
                    },
                    "invoiceNumber": {
                        "type": "integer"
                    },
                    "nextInvoiceReference": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deliveryPrefix": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "deliveryNumber": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "orderReturn": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderReturnNbDays": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "vouchersEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commentsEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displaySupplierImage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "displayManufacturerImage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "allowDiscounts": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "allowoDiscunts": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "abletobuy": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "abletobuyMembergroup": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Membergroup:jsonld"
                            }
                        ]
                    },
                    "published": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "orderingNotification": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "defaultCustomerCountry": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "showReference": {
                        "type": "boolean"
                    },
                    "envoiMoinsCher": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroActive": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "wuroKey": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBrandId": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "wuroModelName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroCategoryName": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBillingDocumentModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoImageListing": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "seoImageTopPage": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commandPrefix": {
                        "type": "string",
                        "nullable": true
                    },
                    "csPopup": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sessionCart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "sessionCartPourcent": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "listingRating": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "listingStepper": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "showReduction": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "stockAlertClientMailEnabled": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "richSnippet": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "gshoppingExcludedDest": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "wuroBillingEnabled": {
                        "type": "boolean"
                    },
                    "wuroQuoteEnabled": {
                        "type": "boolean"
                    },
                    "wuroQuoteDocumentModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "invoiceNumberWithPrefixAndIncrement": {
                        "readOnly": true,
                        "description": "Return current full invoice number (with prefix) and increment number for next invoice.",
                        "type": "string"
                    },
                    "packlinkConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoPacklink:jsonld"
                            }
                        ]
                    },
                    "displayProductReference": {
                        "type": "boolean"
                    },
                    "gShoppingRestockDelay": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "collectTvaCustomer": {
                        "type": "boolean"
                    },
                    "googleContentApiToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiRefreshToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiTokenExpiresAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "googleMerchantId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleContentApiTokenExpired": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "googleContentApiUpdates": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Collection:jsonld"
                    },
                    "facetConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoFacetFilters:jsonld"
                            }
                        ]
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EcoSiteV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "EcoSiteV": {
                "type": "object",
                "properties": {
                    "shopName": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextStock": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextReplenishment": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextBreak": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextBreakingSoon": {
                        "type": "string",
                        "nullable": true
                    },
                    "breadcrumb": {
                        "description": "pas utilis\u00e9 apparemment TODO remove",
                        "type": "string",
                        "nullable": true
                    },
                    "textDiscounts": {
                        "type": "string",
                        "nullable": true
                    },
                    "specialAnnotations": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/EcoSite"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EcoSiteV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "shopName": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextStock": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextReplenishment": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextBreak": {
                        "type": "string",
                        "nullable": true
                    },
                    "statusTextBreakingSoon": {
                        "type": "string",
                        "nullable": true
                    },
                    "breadcrumb": {
                        "description": "pas utilis\u00e9 apparemment TODO remove",
                        "type": "string",
                        "nullable": true
                    },
                    "textDiscounts": {
                        "type": "string",
                        "nullable": true
                    },
                    "specialAnnotations": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/EcoSite:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EcoStoreDelivery": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "site": {
                        "writeOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "activeInStorePickup": {
                        "type": "boolean"
                    },
                    "inStoreUserCreditSms": {
                        "type": "string",
                        "nullable": true
                    },
                    "inStoreSmsAlert": {
                        "type": "boolean"
                    },
                    "inStoreActivePayment": {
                        "type": "boolean"
                    }
                }
            },
            "EcoStoreDelivery:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "site": {
                        "writeOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "activeInStorePickup": {
                        "type": "boolean"
                    },
                    "inStoreUserCreditSms": {
                        "type": "string",
                        "nullable": true
                    },
                    "inStoreSmsAlert": {
                        "type": "boolean"
                    },
                    "inStoreActivePayment": {
                        "type": "boolean"
                    }
                }
            },
            "EcoSupplier:48593f7d78d0bb92230e457adf84f3f9": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoSupplier:48593f7d78d0bb92230e457adf84f3f9:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "EcoTax:4aaa3cd99bce23b9546619d29652fde1": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "number"
                    }
                }
            },
            "EcoTax:4aaa3cd99bce23b9546619d29652fde1:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "rate": {
                        "type": "number"
                    }
                }
            },
            "EcoZone": {
                "type": "object",
                "properties": {
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "countries": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "EcoZone:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "countries": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "EdirectoryOrderOptions": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "orderEnabled": {
                        "type": "boolean"
                    },
                    "spotlightsEnabled": {
                        "type": "boolean"
                    },
                    "currencyPosition": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EdirectoryOrderOptionsV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "EdirectoryOrderOptions:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "orderEnabled": {
                        "type": "boolean"
                    },
                    "spotlightsEnabled": {
                        "type": "boolean"
                    },
                    "currencyPosition": {
                        "type": "string"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EdirectoryOrderOptionsV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "EdirectoryOrderOptionsV": {
                "type": "object",
                "properties": {
                    "orderIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "submitIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/EdirectoryOrderOptions"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EdirectoryOrderOptionsV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "orderIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "submitIntro": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/EdirectoryOrderOptions:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "EditableZonesBottomSiteBlock": {
                "type": "object",
                "properties": {
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLine"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "EditableZonesBottomSiteBlock:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockEditableZonesBottomSiteLine:jsonld"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "Group:799b1bea2ff8730b1a1a5b188922b633": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Group:799b1bea2ff8730b1a1a5b188922b633:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Group:db47b4a609ad5ce5cda04f418c74eade": {
                "type": "object",
                "description": "",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Group:db47b4a609ad5ce5cda04f418c74eade:jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "name"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Legal": {
                "type": "object",
                "properties": {
                    "legalMentionActive": {
                        "type": "boolean"
                    },
                    "legalform": {
                        "description": "TODO enum",
                        "type": "string",
                        "nullable": true
                    },
                    "headquarter": {
                        "type": "string",
                        "nullable": true
                    },
                    "capital": {
                        "type": "string",
                        "nullable": true
                    },
                    "legalname": {
                        "type": "string",
                        "nullable": true
                    },
                    "bossLegalname": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "rcs": {
                        "type": "string",
                        "nullable": true
                    },
                    "cguActive": {
                        "type": "boolean"
                    },
                    "retractionActive": {
                        "type": "boolean"
                    },
                    "cookieActive": {
                        "type": "boolean"
                    },
                    "privacyPolicyActive": {
                        "type": "boolean"
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie"
                        }
                    },
                    "customCookies": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie"
                        }
                    },
                    "cookie": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie"
                        }
                    },
                    "cguPage": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ]
                    },
                    "cgvPage": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Page"
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Legal:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "legalMentionActive": {
                        "type": "boolean"
                    },
                    "legalform": {
                        "description": "TODO enum",
                        "type": "string",
                        "nullable": true
                    },
                    "headquarter": {
                        "type": "string",
                        "nullable": true
                    },
                    "capital": {
                        "type": "string",
                        "nullable": true
                    },
                    "legalname": {
                        "type": "string",
                        "nullable": true
                    },
                    "bossLegalname": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "type": "string",
                        "nullable": true
                    },
                    "rcs": {
                        "type": "string",
                        "nullable": true
                    },
                    "cguActive": {
                        "type": "boolean"
                    },
                    "retractionActive": {
                        "type": "boolean"
                    },
                    "cookieActive": {
                        "type": "boolean"
                    },
                    "privacyPolicyActive": {
                        "type": "boolean"
                    },
                    "cookies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie:jsonld"
                        }
                    },
                    "customCookies": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie:jsonld"
                        }
                    },
                    "cookie": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookie:jsonld"
                        }
                    },
                    "cguPage": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Page:jsonld"
                            }
                        ]
                    },
                    "cgvPage": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Page:jsonld"
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "LegalCookie": {
                "type": "object",
                "properties": {
                    "faviconUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "model": {
                        "description": "TODO enum",
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookieV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "LegalCookie:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "faviconUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "model": {
                        "description": "TODO enum",
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LegalCookieV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "LegalCookieV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "shortDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "longDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "privacyPolicyUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/LegalCookie"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "LegalCookieV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "shortDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "longDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "privacyPolicyUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/LegalCookie:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "LegalV": {
                "type": "object",
                "properties": {
                    "legalMentions": {
                        "type": "string",
                        "nullable": true
                    },
                    "cgu": {
                        "type": "string",
                        "nullable": true
                    },
                    "cgv": {
                        "type": "string",
                        "nullable": true
                    },
                    "retraction": {
                        "type": "string",
                        "nullable": true
                    },
                    "privacyPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Legal"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "LegalV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "legalMentions": {
                        "type": "string",
                        "nullable": true
                    },
                    "cgu": {
                        "type": "string",
                        "nullable": true
                    },
                    "cgv": {
                        "type": "string",
                        "nullable": true
                    },
                    "retraction": {
                        "type": "string",
                        "nullable": true
                    },
                    "privacyPolicy": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Legal:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Member:932a58eeee98eaad5172e0835ffd7e08": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "gender": {
                        "description": "male|female",
                        "type": "string",
                        "nullable": true
                    },
                    "fistrname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newsletter": {
                        "type": "boolean"
                    },
                    "aboutme": {
                        "type": "string",
                        "nullable": true
                    },
                    "sign": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "loyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ecoOrders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Member:932a58eeee98eaad5172e0835ffd7e08:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "username": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "gender": {
                        "description": "male|female",
                        "type": "string",
                        "nullable": true
                    },
                    "fistrname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "birthdate": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "newsletter": {
                        "type": "boolean"
                    },
                    "aboutme": {
                        "type": "string",
                        "nullable": true
                    },
                    "sign": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "loyaltyPoints": {
                        "type": "integer",
                        "nullable": true
                    },
                    "ecoOrders": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Membergroup": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "Membergroup:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "Memberoptions": {
                "type": "object",
                "properties": {
                    "memberSpaceEnabled": {
                        "type": "boolean"
                    },
                    "defaultMembergroupIds": {
                        "description": "TODO qqch de plus propre genre type array",
                        "type": "string",
                        "nullable": true
                    },
                    "profileEnabled": {
                        "type": "boolean"
                    },
                    "displayToMemberOnly": {
                        "type": "boolean"
                    },
                    "profileMembergroup": {
                        "description": "qui peut voir les profils utilisateurs",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Membergroup"
                            }
                        ]
                    },
                    "displayEmail": {
                        "type": "boolean"
                    },
                    "displayRealName": {
                        "type": "boolean"
                    },
                    "registrationEnabled": {
                        "type": "boolean"
                    },
                    "registrationAutovalidate": {
                        "type": "boolean"
                    },
                    "hasActiveSubscription": {
                        "type": "boolean"
                    },
                    "subscriptionCurrency": {
                        "type": "string"
                    },
                    "subscriptionCurrencyPosition": {
                        "description": "TODO virer \u00e7a et faire en fonction de la langue ou que sais-je",
                        "type": "string"
                    },
                    "membersSelfdelete": {
                        "description": "?",
                        "type": "boolean"
                    },
                    "redirectAfterLogin": {
                        "type": "boolean"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectMethod": {
                        "description": "TODO enum nullable",
                        "type": "string"
                    },
                    "enableDisconnectMessage": {
                        "description": "serieusement ? c'est quoi cette option \u00e0 la con ?",
                        "type": "boolean"
                    },
                    "redirectModuleId": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectCategoryId": {
                        "description": "relation ?",
                        "type": "string",
                        "nullable": true
                    },
                    "redirectItemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MemberoptionsV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Memberoptions:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "memberSpaceEnabled": {
                        "type": "boolean"
                    },
                    "defaultMembergroupIds": {
                        "description": "TODO qqch de plus propre genre type array",
                        "type": "string",
                        "nullable": true
                    },
                    "profileEnabled": {
                        "type": "boolean"
                    },
                    "displayToMemberOnly": {
                        "type": "boolean"
                    },
                    "profileMembergroup": {
                        "description": "qui peut voir les profils utilisateurs",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Membergroup:jsonld"
                            }
                        ]
                    },
                    "displayEmail": {
                        "type": "boolean"
                    },
                    "displayRealName": {
                        "type": "boolean"
                    },
                    "registrationEnabled": {
                        "type": "boolean"
                    },
                    "registrationAutovalidate": {
                        "type": "boolean"
                    },
                    "hasActiveSubscription": {
                        "type": "boolean"
                    },
                    "subscriptionCurrency": {
                        "type": "string"
                    },
                    "subscriptionCurrencyPosition": {
                        "description": "TODO virer \u00e7a et faire en fonction de la langue ou que sais-je",
                        "type": "string"
                    },
                    "membersSelfdelete": {
                        "description": "?",
                        "type": "boolean"
                    },
                    "redirectAfterLogin": {
                        "type": "boolean"
                    },
                    "redirectUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectMethod": {
                        "description": "TODO enum nullable",
                        "type": "string"
                    },
                    "enableDisconnectMessage": {
                        "description": "serieusement ? c'est quoi cette option \u00e0 la con ?",
                        "type": "boolean"
                    },
                    "redirectModuleId": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectModelId": {
                        "type": "string",
                        "nullable": true
                    },
                    "redirectCategoryId": {
                        "description": "relation ?",
                        "type": "string",
                        "nullable": true
                    },
                    "redirectItemId": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MemberoptionsV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "MemberoptionsV": {
                "type": "object",
                "properties": {
                    "registrationRgpdText": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Memberoptions"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "MemberoptionsV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "registrationRgpdText": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Memberoptions:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Offer:9e545314e83938dc6f60861a54586191": {
                "type": "object",
                "description": "",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "basePurchasingPrice": {
                        "type": "number"
                    },
                    "baseRenewalPrice": {
                        "type": "number"
                    },
                    "EURPurchasingPrice": {
                        "type": "number"
                    },
                    "EURRenewalPrice": {
                        "type": "number"
                    }
                }
            },
            "Offer:9e545314e83938dc6f60861a54586191:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "basePurchasingPrice": {
                        "type": "number"
                    },
                    "baseRenewalPrice": {
                        "type": "number"
                    },
                    "EURPurchasingPrice": {
                        "type": "number"
                    },
                    "EURRenewalPrice": {
                        "type": "number"
                    }
                }
            },
            "Page": {
                "type": "object",
                "properties": {
                    "aliasClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "pageindex": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isPageindex": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "modelId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteUrl": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "trashDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "trashUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "description": "Date de publication, pass\u00e9 ou future",
                        "type": "integer",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "aliases": {
                        "description": "Faire la mapping dans l'entity",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageAlias"
                        }
                    },
                    "alias": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "block": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PageBlock"
                            }
                        ]
                    }
                }
            },
            "Page:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "aliasClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "pageindex": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "isPageindex": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "modelId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteUrl": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "trashDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "trashUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "published": {
                        "type": "boolean"
                    },
                    "publishFrom": {
                        "description": "Date de publication, pass\u00e9 ou future",
                        "type": "integer",
                        "nullable": true
                    },
                    "category": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "aliases": {
                        "description": "Faire la mapping dans l'entity",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageAlias:jsonld"
                        }
                    },
                    "alias": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "block": {
                        "description": "FAIRE MAPPING DANS ENTITY",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PageBlock:jsonld"
                            }
                        ]
                    }
                }
            },
            "PageAlias": {
                "type": "object",
                "properties": {
                    "modelId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "item": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Page"
                    },
                    "category": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "PageAlias:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "modelId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "item": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Page:jsonld"
                    },
                    "category": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "PageBlock": {
                "type": "object",
                "properties": {
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageLine"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "PageBlock:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lineClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "cellClass": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lines": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockPageLine:jsonld"
                        }
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "line": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "row": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BlockLineInterface:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "PageV": {
                "type": "object",
                "properties": {
                    "titleInBlocks": {
                        "type": "boolean"
                    },
                    "titlemenu": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Page"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "seoUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoH1": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoKeywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoImage": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "seoAdditionalMeta": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoNoIndex": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "previewableContent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "PageV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "titleInBlocks": {
                        "type": "boolean"
                    },
                    "titlemenu": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Page:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "seoUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoH1": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoKeywords": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoDescription": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoImage": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "seoAdditionalMeta": {
                        "type": "string",
                        "nullable": true
                    },
                    "seoNoIndex": {
                        "type": "boolean"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "content": {
                        "type": "string",
                        "nullable": true
                    },
                    "previewableContent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Role:398f80f76f54ad7f04b1f3d6647c661a": {
                "type": "object",
                "description": "",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Role:398f80f76f54ad7f04b1f3d6647c661a:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Role:41c793592002936a9986d67e92f37a9b": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "$ref": "#/components/schemas/ArrayCollection"
                    }
                }
            },
            "Role:41c793592002936a9986d67e92f37a9b:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "$ref": "#/components/schemas/ArrayCollection:jsonld"
                    }
                }
            },
            "Role:8335fa6e7449daa5d9298e9ce37ab462": {
                "type": "object",
                "description": "",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "resources": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                }
            },
            "Session:1bc7a372e0caf630efd366b7299c4bd2": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hit": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "datas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "user": {},
                    "userIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAgent": {
                        "type": "string",
                        "nullable": true
                    },
                    "app": {
                        "type": "string"
                    },
                    "geolocation": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Session:1bc7a372e0caf630efd366b7299c4bd2:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "hit": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "datas": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "user": {},
                    "userIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "userAgent": {
                        "type": "string",
                        "nullable": true
                    },
                    "app": {
                        "type": "string"
                    },
                    "geolocation": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Site": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "url": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "siteSuspend": {
                        "type": "boolean"
                    },
                    "siteDeleted": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "siteDeletionDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "siteDeletionIp": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "siteDeletionReason": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "siteDeletionUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "managerSuspend": {
                        "type": "boolean"
                    },
                    "reasonSuspend": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultLang": {
                        "type": "string"
                    },
                    "showLayoutFlags": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "showI18nLinks": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "timezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "domainId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sitename": {
                        "type": "string"
                    },
                    "host": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "paypalId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalCmd": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalInsertcart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "paypalCurrencyCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalUndefinedQuantity": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "mailformat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "messagemoderation": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatarStorageServerId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "adsenseCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "adsenseShowTop": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "adsenseShowCol": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "analyticsCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "analyticsMeasureId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleAdsId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleTagManagerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedWords": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedDomains": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias"
                            }
                        ]
                    },
                    "akismetApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "noCaptcha": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "iconcaptcha": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "publicthemevariationpreviewId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "customthemevariationpreviewId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenActive": {
                        "type": "boolean"
                    },
                    "splashscreenLocation": {},
                    "splashscreenTestmode": {
                        "type": "boolean"
                    },
                    "zoneMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneCss": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneJs": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "hideDashboardWelcomeBox": {
                        "description": "TODO en session",
                        "type": "boolean"
                    },
                    "dashboardMessage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "slidshowOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "favicon": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias"
                            }
                        ]
                    },
                    "homepageModuleId": {
                        "type": "string"
                    },
                    "previewToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "searchindexDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "robotsAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "robots": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "filesizequotaUsed": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "usedStorageQuota": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "emailSenderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "activity": {
                        "type": "string",
                        "nullable": true
                    },
                    "themeVersion": {
                        "type": "integer"
                    },
                    "shortcutIcon": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias"
                            }
                        ]
                    },
                    "sitemapAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "googleWebmasterMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "bingWebmasterMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "searchConsoleMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "beginTabClosed": {
                        "description": "TODO en session",
                        "type": "boolean"
                    },
                    "scheme": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "googleMapsApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "recaptcha2": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "recaptcha2SiteKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "recaptcha2SecretKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Merchantid": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Merchantidinpaypal": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Email": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Returnmessage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "paypal2Paymentexperience": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "socialNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "adsAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "ads": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "googlefont": {
                        "readOnly": true,
                        "description": "wtf default ? TODO checker type array",
                        "type": "string",
                        "nullable": true
                    },
                    "tokenInstagram": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "tokenInstagramExpireDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "instagramToken": {
                        "type": "string"
                    },
                    "instagramtokenExpirationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "instagramTokenExpired": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "nbDaysBeforeInstagramTokenExpire": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storageFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder"
                        }
                    },
                    "storageFolder": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder"
                        }
                    },
                    "siteLangs": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteLang"
                        }
                    },
                    "defaultSiteLang": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/SiteLang"
                    },
                    "activeSiteLangs": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customThemeVariations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomThemeVariation"
                        }
                    },
                    "customThemeVariation": {
                        "$ref": "#/components/schemas/CustomThemeVariation"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "module": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "wuroEnabled": {
                        "type": "boolean"
                    },
                    "wuroApiEndPoint": {
                        "type": "string",
                        "nullable": true
                    },
                    "wuroAppId": {
                        "type": "string",
                        "nullable": true
                    },
                    "wuroAppSecret": {
                        "type": "string",
                        "nullable": true
                    },
                    "captcha": {
                        "type": "string",
                        "nullable": true
                    },
                    "ecoConfig": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoSite"
                            }
                        ]
                    },
                    "configLP": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoLoyaltyPoints"
                            }
                        ]
                    },
                    "ecoAdvicesConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoAdvicesConfig"
                            }
                        ]
                    },
                    "ecoStoreDelivery": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoStoreDelivery"
                            }
                        ]
                    },
                    "hcaptchaSiteKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "hcaptchaSecretKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "ecoOrders": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ecoCollectionPoints": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "carriers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "celSoftDeletion": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "webhooks": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook"
                        }
                    },
                    "nbDaysSinceCreation": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "structuresPayment": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructurePayment"
                        }
                    },
                    "editableZonesBottomSiteBlock": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EditableZonesBottomSiteBlock"
                            }
                        ]
                    },
                    "memberOptions": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Memberoptions"
                            }
                        ]
                    },
                    "legal": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Legal"
                            }
                        ]
                    },
                    "inStorePickUpPoints": {
                        "readOnly": true,
                        "description": "Retourne la liste des points de retrait magasin uniquement"
                    },
                    "structureWidgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgets"
                        }
                    },
                    "defaultMenuHWidget": {
                        "readOnly": true,
                        "description": "return le widget menu H par d\u00e9faut",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StructureWidgets"
                            }
                        ]
                    },
                    "structures": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Structure"
                        }
                    },
                    "notFoundPageBlock": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Block"
                            }
                        ]
                    },
                    "browserExtensionEnabled": {
                        "type": "boolean"
                    },
                    "edirectoryOrderOptions": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EdirectoryOrderOptions"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "Site:0097c999ec7d3611ad5fec647120ea72": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdByIp": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "brand": {},
                    "sitename": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "shardId": {
                        "type": "string"
                    },
                    "storageQuotaUsed": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "siteSuspend": {
                        "type": "boolean"
                    },
                    "managerSuspend": {
                        "type": "boolean"
                    },
                    "reasonSuspend": {
                        "type": "string",
                        "nullable": true
                    },
                    "whitelist": {
                        "type": "string"
                    },
                    "lastLogAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "siteUsers": {},
                    "plan": {
                        "description": "Le plan en cours (perso, pro, business, eco)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "products": {
                        "type": "string"
                    },
                    "modules": {},
                    "title": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Site:0097c999ec7d3611ad5fec647120ea72:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "createdByIp": {
                        "type": "string"
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "brand": {},
                    "sitename": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "shardId": {
                        "type": "string"
                    },
                    "storageQuotaUsed": {
                        "type": "integer"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "siteSuspend": {
                        "type": "boolean"
                    },
                    "managerSuspend": {
                        "type": "boolean"
                    },
                    "reasonSuspend": {
                        "type": "string",
                        "nullable": true
                    },
                    "whitelist": {
                        "type": "string"
                    },
                    "lastLogAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "siteUsers": {},
                    "plan": {
                        "description": "Le plan en cours (perso, pro, business, eco)",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "products": {
                        "type": "string"
                    },
                    "modules": {},
                    "title": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Site:7e8883c9b486869412701afd330abd48": {
                "type": "object",
                "description": "",
                "required": [
                    "siteName"
                ],
                "properties": {
                    "siteName": {
                        "type": "string"
                    },
                    "siteSuspend": {
                        "type": "boolean"
                    },
                    "managerSuspend": {
                        "type": "boolean"
                    },
                    "reasonSuspend": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Site:f8f2933682cb2687a860a3e01f671ed0": {
                "type": "object",
                "description": "",
                "required": [
                    "siteName",
                    "brandId"
                ],
                "properties": {
                    "siteName": {
                        "type": "string"
                    },
                    "brandId": {
                        "type": "string"
                    }
                }
            },
            "Site:f8f2933682cb2687a860a3e01f671ed0:jsonld": {
                "type": "object",
                "description": "",
                "required": [
                    "siteName",
                    "brandId"
                ],
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteName": {
                        "type": "string"
                    },
                    "brandId": {
                        "type": "string"
                    }
                }
            },
            "Site:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "url": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "siteSuspend": {
                        "type": "boolean"
                    },
                    "siteDeleted": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "siteDeletionDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "siteDeletionIp": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "siteDeletionReason": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "siteDeletionUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "managerSuspend": {
                        "type": "boolean"
                    },
                    "reasonSuspend": {
                        "type": "string",
                        "nullable": true
                    },
                    "defaultLang": {
                        "type": "string"
                    },
                    "showLayoutFlags": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "showI18nLinks": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "timezone": {
                        "type": "string",
                        "nullable": true
                    },
                    "brandId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "domainId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sitename": {
                        "type": "string"
                    },
                    "host": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "paypalId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalCmd": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalInsertcart": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "paypalCurrencyCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypalUndefinedQuantity": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "mailformat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "messagemoderation": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatarStorageServerId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "adsenseCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "adsenseShowTop": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "adsenseShowCol": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "analyticsCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "analyticsMeasureId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleAdsId": {
                        "type": "string",
                        "nullable": true
                    },
                    "googleTagManagerId": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedWords": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedIp": {
                        "type": "string",
                        "nullable": true
                    },
                    "blacklistedDomains": {
                        "type": "string",
                        "nullable": true
                    },
                    "logo": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias:jsonld"
                            }
                        ]
                    },
                    "akismetApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "noCaptcha": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "iconcaptcha": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "publicthemevariationpreviewId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "customthemevariationpreviewId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenActive": {
                        "type": "boolean"
                    },
                    "splashscreenLocation": {},
                    "splashscreenTestmode": {
                        "type": "boolean"
                    },
                    "zoneMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneCss": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneJs": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "hideDashboardWelcomeBox": {
                        "description": "TODO en session",
                        "type": "boolean"
                    },
                    "dashboardMessage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "slidshowOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "favicon": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias:jsonld"
                            }
                        ]
                    },
                    "homepageModuleId": {
                        "type": "string"
                    },
                    "previewToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "searchindexDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "robotsAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "robots": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "filesizequotaUsed": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "usedStorageQuota": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "emailSenderName": {
                        "type": "string",
                        "nullable": true
                    },
                    "activity": {
                        "type": "string",
                        "nullable": true
                    },
                    "themeVersion": {
                        "type": "integer"
                    },
                    "shortcutIcon": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageMedias:jsonld"
                            }
                        ]
                    },
                    "sitemapAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "googleWebmasterMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "bingWebmasterMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "searchConsoleMeta": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "beginTabClosed": {
                        "description": "TODO en session",
                        "type": "boolean"
                    },
                    "scheme": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "googleMapsApiKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "recaptcha2": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "recaptcha2SiteKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "recaptcha2SecretKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Merchantid": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Merchantidinpaypal": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Email": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Returnmessage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "paypal2Valid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "paypal2Paymentexperience": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "socialNetworks": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "adsAuto": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "ads": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "googlefont": {
                        "readOnly": true,
                        "description": "wtf default ? TODO checker type array",
                        "type": "string",
                        "nullable": true
                    },
                    "tokenInstagram": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "tokenInstagramExpireDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "instagramToken": {
                        "type": "string"
                    },
                    "instagramtokenExpirationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "instagramTokenExpired": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "nbDaysBeforeInstagramTokenExpire": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "storageFolders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder:jsonld"
                        }
                    },
                    "storageFolder": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder:jsonld"
                        }
                    },
                    "siteLangs": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteLang:jsonld"
                        }
                    },
                    "defaultSiteLang": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/SiteLang:jsonld"
                    },
                    "activeSiteLangs": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "lang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "customThemeVariations": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomThemeVariation:jsonld"
                        }
                    },
                    "customThemeVariation": {
                        "$ref": "#/components/schemas/CustomThemeVariation:jsonld"
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "module": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "wuroEnabled": {
                        "type": "boolean"
                    },
                    "wuroApiEndPoint": {
                        "type": "string",
                        "nullable": true
                    },
                    "wuroAppId": {
                        "type": "string",
                        "nullable": true
                    },
                    "wuroAppSecret": {
                        "type": "string",
                        "nullable": true
                    },
                    "captcha": {
                        "type": "string",
                        "nullable": true
                    },
                    "ecoConfig": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoSite:jsonld"
                            }
                        ]
                    },
                    "configLP": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoLoyaltyPoints:jsonld"
                            }
                        ]
                    },
                    "ecoAdvicesConfig": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoAdvicesConfig:jsonld"
                            }
                        ]
                    },
                    "ecoStoreDelivery": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EcoStoreDelivery:jsonld"
                            }
                        ]
                    },
                    "hcaptchaSiteKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "hcaptchaSecretKey": {
                        "type": "string",
                        "nullable": true
                    },
                    "ecoOrders": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ecoCollectionPoints": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "carriers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "celSoftDeletion": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "webhooks": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook:jsonld"
                        }
                    },
                    "nbDaysSinceCreation": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "structuresPayment": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructurePayment:jsonld"
                        }
                    },
                    "editableZonesBottomSiteBlock": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EditableZonesBottomSiteBlock:jsonld"
                            }
                        ]
                    },
                    "memberOptions": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Memberoptions:jsonld"
                            }
                        ]
                    },
                    "legal": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Legal:jsonld"
                            }
                        ]
                    },
                    "inStorePickUpPoints": {
                        "readOnly": true,
                        "description": "Retourne la liste des points de retrait magasin uniquement"
                    },
                    "structureWidgets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgets:jsonld"
                        }
                    },
                    "defaultMenuHWidget": {
                        "readOnly": true,
                        "description": "return le widget menu H par d\u00e9faut",
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StructureWidgets:jsonld"
                            }
                        ]
                    },
                    "structures": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Structure:jsonld"
                        }
                    },
                    "notFoundPageBlock": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Block:jsonld"
                            }
                        ]
                    },
                    "browserExtensionEnabled": {
                        "type": "boolean"
                    },
                    "edirectoryOrderOptions": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EdirectoryOrderOptions:jsonld"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SiteV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SiteLang": {
                "type": "object",
                "properties": {
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site"
                    },
                    "lang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "active": {
                        "description": "TODO no nullable et virer le cast dans le getter",
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "SiteLang:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "lang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "active": {
                        "description": "TODO no nullable et virer le cast dans le getter",
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "SiteModule:8b09c679ecec5d6a7c06faae7c40b10c": {
                "type": "object",
                "description": "",
                "properties": {
                    "moduleId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SiteModule:8b09c679ecec5d6a7c06faae7c40b10c:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "moduleId": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "SiteV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagline": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagLine": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneTop": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenLinkText": {
                        "type": "string",
                        "nullable": true
                    },
                    "notFoundPageTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateformat": {
                        "type": "string",
                        "nullable": true
                    },
                    "breadcrumb": {
                        "type": "string",
                        "nullable": true
                    },
                    "sitemap": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Site"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "SiteV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagline": {
                        "type": "string",
                        "nullable": true
                    },
                    "tagLine": {
                        "type": "string",
                        "nullable": true
                    },
                    "zoneTop": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenContent": {
                        "type": "string",
                        "nullable": true
                    },
                    "splashscreenLinkText": {
                        "type": "string",
                        "nullable": true
                    },
                    "notFoundPageTitle": {
                        "type": "string",
                        "nullable": true
                    },
                    "dateformat": {
                        "type": "string",
                        "nullable": true
                    },
                    "breadcrumb": {
                        "type": "string",
                        "nullable": true
                    },
                    "sitemap": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "Siteuser:57c801516c2b5b79ccf4541b195da432": {
                "type": "object",
                "description": "",
                "properties": {
                    "siteId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "temporary": {
                        "type": "boolean"
                    }
                }
            },
            "Siteuser:57c801516c2b5b79ccf4541b195da432:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "userId": {
                        "type": "string"
                    },
                    "role": {
                        "type": "string"
                    },
                    "temporary": {
                        "type": "boolean"
                    }
                }
            },
            "Siteuser:7fc182df899df5888744e3f43c9c8f05": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "temporary": {
                        "description": "true quand le support se connecte en admin par ex.",
                        "type": "boolean"
                    },
                    "user": {},
                    "site": {}
                }
            },
            "Siteuser:7fc182df899df5888744e3f43c9c8f05:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "role": {
                        "type": "string"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "temporary": {
                        "description": "true quand le support se connecte en admin par ex.",
                        "type": "boolean"
                    },
                    "user": {},
                    "site": {}
                }
            },
            "StorageFolder": {
                "type": "object",
                "properties": {
                    "dirtype": {
                        "readOnly": true,
                        "description": "TODO enum bundle",
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parent": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder"
                            }
                        ]
                    },
                    "children": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder"
                        }
                    },
                    "position": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "StorageFolder:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "dirtype": {
                        "readOnly": true,
                        "description": "TODO enum bundle",
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "parent": {
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder:jsonld"
                            }
                        ]
                    },
                    "children": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageFolder:jsonld"
                        }
                    },
                    "position": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "StorageImage:292cb7fe7e2c3f669075bf385747b767": {
                "type": "object",
                "description": "",
                "properties": {
                    "trashed": {
                        "type": "boolean"
                    }
                }
            },
            "StorageImage:64ebe0c84f35c94c053ca1a666bfce79": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer",
                        "nullable": true
                    },
                    "mimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "storageName": {},
                    "publicPath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "StorageImage:64ebe0c84f35c94c053ca1a666bfce79:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "siteId": {
                        "type": "string"
                    },
                    "weight": {
                        "type": "integer",
                        "nullable": true
                    },
                    "mimeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "type": "boolean"
                    },
                    "storageName": {},
                    "publicPath": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    }
                }
            },
            "StorageImageV": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "StorageImageV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "StorageMedias": {
                "type": "object",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "filesize": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "filemime": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "trash": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "storagePath": {
                        "description": "TODO juste setter un champ.",
                        "type": "string"
                    },
                    "publicPath": {
                        "type": "string"
                    },
                    "privatefilepath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "privateFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilePath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "StorageMedias:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "filesize": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "filemime": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "trash": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "storagePath": {
                        "description": "TODO juste setter un champ.",
                        "type": "string"
                    },
                    "publicPath": {
                        "type": "string"
                    },
                    "privatefilepath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "privateFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilePath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "Structure": {
                "type": "object",
                "properties": {
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "usewidgetcontentcache": {
                        "type": "boolean"
                    },
                    "widgets": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgets"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "Structure:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "usewidgetcontentcache": {
                        "type": "boolean"
                    },
                    "widgets": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgets:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "StructurePayment": {
                "type": "object",
                "properties": {
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymeans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructurePayment"
                        }
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructureModule"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "StructurePayment:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "paymeans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructurePayment:jsonld"
                        }
                    },
                    "modules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AssocStructureModule:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "StructureWidgets": {
                "type": "object",
                "properties": {
                    "structure": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Structure"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "widgetVariant": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneNumber": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "zoneCodename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "zoneType": {
                        "readOnly": true,
                        "description": "TODO enum",
                        "type": "string"
                    },
                    "ordering": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "cssClass": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "menuId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgetsV"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StructureWidgets:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "structure": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Structure:jsonld"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "widgetId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "widgetVariant": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zoneNumber": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "zoneCodename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "zoneType": {
                        "readOnly": true,
                        "description": "TODO enum",
                        "type": "string"
                    },
                    "ordering": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "active": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "cssClass": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cssId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "menuId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StructureWidgetsV:jsonld"
                        }
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "StructureWidgetsV": {
                "type": "object",
                "properties": {
                    "title": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "titleImage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "titleHref": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "params": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cachedcontent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cachedcontentExpirationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/StructureWidgets"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    }
                }
            },
            "StructureWidgetsV:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "title": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "titleImage": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "titleHref": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "params": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "cachedcontent": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "cachedcontentExpirationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "$ref": "#/components/schemas/StructureWidgets:jsonld"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    }
                }
            },
            "User": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "creator": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "addUserIp": {
                        "type": "string"
                    },
                    "username": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "description": "TODO WARNING : des emails sont en chaine vide, probablement ems v1 - v3. Quid ?",
                        "type": "string"
                    },
                    "shardId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "tel": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "brand": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayrealname": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "connectionToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "lastLogDt": {
                        "description": "Timestamp de la derni\u00e8re fois que le user \u00e0 \u00e9t\u00e9 vu sur le manager, MAJ 1x / jour",
                        "type": "integer",
                        "nullable": true
                    },
                    "mailchimpEmail": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "remainingSms": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "emailValid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "emailValidationToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "emailValidationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "nbReminderValidationMailSent": {
                        "type": "integer"
                    },
                    "chatbotActive": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "siteUsers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "domains": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomain"
                        }
                    },
                    "recentUpdatedSitesUsers": {
                        "readOnly": true,
                        "description": "Les sites users ordered par last_log_dt",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "recentCreatedSiteUser": {
                        "readOnly": true,
                        "description": "Le dernier Siteuser cr\u00e9\u00e9",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "agencyCustomer": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "userInValidationPeriod": {
                        "readOnly": true,
                        "description": "Indique si le user est dans la \"p\u00e9riode de validation\" de 30 jours apr\u00e8s sa cr\u00e9ation",
                        "type": "boolean"
                    },
                    "emailVerified": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "siteUserMarketingSend": {
                        "readOnly": true,
                        "description": "Retourne le Siteuser dont le flag marketing_email_send",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "authorName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessions": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ssoAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSsoAccount"
                        }
                    },
                    "userHasRole": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "User:4efa5659e91aca04a3152aef9f91ffc1": {
                "type": "object",
                "description": "",
                "properties": {
                    "email": {
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    }
                }
            },
            "User:4efa5659e91aca04a3152aef9f91ffc1:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    }
                }
            },
            "User:5b998e983cd83cb3333677d49ed1f14c": {
                "type": "object",
                "description": "",
                "properties": {
                    "firstname": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastname": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "tel": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "email": {
                        "externalDocs": {
                            "url": "http://schema.org/email"
                        },
                        "type": "string"
                    },
                    "fcmToken": {
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "User:940d105763f3d1a848f991a4d326f00e": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "brand": {},
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "addUserIp": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "gender": {
                        "description": "male|female",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "shardId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addrLine1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addrLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "tel": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "emailValid": {
                        "type": "boolean"
                    },
                    "chatbotEnabled": {
                        "type": "boolean"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteUsers": {},
                    "fcmToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "sessions": {}
                }
            },
            "User:940d105763f3d1a848f991a4d326f00e:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "brand": {},
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "addUserIp": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "gender": {
                        "description": "male|female",
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "nullable": true
                    },
                    "shardId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "nullable": true
                    },
                    "lastName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addrLine1": {
                        "type": "string",
                        "nullable": true
                    },
                    "addrLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "zipCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "type": "string",
                        "nullable": true
                    },
                    "tel": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "type": "string"
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "emailValid": {
                        "type": "boolean"
                    },
                    "chatbotEnabled": {
                        "type": "boolean"
                    },
                    "avatarUrl": {
                        "type": "string",
                        "nullable": true
                    },
                    "siteUsers": {},
                    "fcmToken": {
                        "type": "string",
                        "nullable": true
                    },
                    "sessions": {}
                }
            },
            "User:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "creator": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "addUserIp": {
                        "type": "string"
                    },
                    "username": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "email": {
                        "description": "TODO WARNING : des emails sont en chaine vide, probablement ems v1 - v3. Quid ?",
                        "type": "string"
                    },
                    "shardId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "tel": {
                        "type": "string",
                        "nullable": true
                    },
                    "group": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "brand": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "displayrealname": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "connectionToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "deleted": {
                        "type": "boolean"
                    },
                    "lastLogDt": {
                        "description": "Timestamp de la derni\u00e8re fois que le user \u00e0 \u00e9t\u00e9 vu sur le manager, MAJ 1x / jour",
                        "type": "integer",
                        "nullable": true
                    },
                    "mailchimpEmail": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "remainingSms": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "emailValid": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "emailValidationToken": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "emailValidationDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "nbReminderValidationMailSent": {
                        "type": "integer"
                    },
                    "chatbotActive": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "siteUsers": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "domains": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomain:jsonld"
                        }
                    },
                    "recentUpdatedSitesUsers": {
                        "readOnly": true,
                        "description": "Les sites users ordered par last_log_dt",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "recentCreatedSiteUser": {
                        "readOnly": true,
                        "description": "Le dernier Siteuser cr\u00e9\u00e9",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "agencyCustomer": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "userInValidationPeriod": {
                        "readOnly": true,
                        "description": "Indique si le user est dans la \"p\u00e9riode de validation\" de 30 jours apr\u00e8s sa cr\u00e9ation",
                        "type": "boolean"
                    },
                    "emailVerified": {
                        "writeOnly": true,
                        "type": "boolean"
                    },
                    "siteUserMarketingSend": {
                        "readOnly": true,
                        "description": "Retourne le Siteuser dont le flag marketing_email_send",
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "authorName": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "sessions": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "ssoAccounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSsoAccount:jsonld"
                        }
                    },
                    "userHasRole": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "UserDomain": {
                "type": "object",
                "properties": {
                    "mailServerId": {
                        "description": "Can be NULL, \"mailcow_0\" (NULL mean default Zimbra server)",
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "authCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "registrar": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "registrationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expirationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceSubscriptionDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceRenewalDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceExpirationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "registrationDtB": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expirationDtB": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "brand": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "nichandle": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "organisation": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalname": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthdate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "birthcountry": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthcity": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalform": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthdepartement": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "afnicident": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "onerror": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "supportComment": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "aweltyAdmin": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "pingDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "business": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "autorenew": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commandId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zimbraServer": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "companynationalidentificationnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "nationalidentificationnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "vat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "checkAutoRenewAfter": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "domainErrors": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomainError"
                        }
                    },
                    "mailAliases": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomainMailAlias"
                        }
                    },
                    "mailboxes": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "updator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "UserDomain:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "mailServerId": {
                        "description": "Can be NULL, \"mailcow_0\" (NULL mean default Zimbra server)",
                        "type": "string",
                        "nullable": true
                    },
                    "domain": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "authCode": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "registrar": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "registrationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expirationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceSubscriptionDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceRenewalDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "serviceExpirationDate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "registrationDtB": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "expirationDtB": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "user": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "brand": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "status": {
                        "type": "string"
                    },
                    "nichandle": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "firstname": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "address": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zip": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "country": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "phone": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "fax": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "email": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "lang": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "organisation": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalname": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthdate": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "birthcountry": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthcity": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "legalform": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "birthdepartement": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "afnicident": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "method": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "onerror": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "supportComment": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "aweltyAdmin": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "pingDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "business": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "autorenew": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "commandId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "zimbraServer": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "companynationalidentificationnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "nationalidentificationnumber": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "vat": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    },
                    "checkAutoRenewAfter": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "domainErrors": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomainError:jsonld"
                        }
                    },
                    "mailAliases": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserDomainMailAlias:jsonld"
                        }
                    },
                    "mailboxes": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "iri-reference"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "updator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "UserDomainError": {
                "type": "object",
                "properties": {
                    "userDomain": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UserDomain"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "registrar": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "errorCode": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "errorMessage": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "UserDomainError:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "userDomain": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/UserDomain:jsonld"
                            }
                        ]
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "registrar": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "errorCode": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "errorMessage": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "UserDomainMailAlias": {
                "type": "object",
                "properties": {
                    "userDomain": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/UserDomain"
                    },
                    "domain": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "alias": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "updator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "UserDomainMailAlias:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "userDomain": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/UserDomain:jsonld"
                    },
                    "domain": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "username": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "alias": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "creator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    },
                    "updator": {
                        "type": "string",
                        "format": "iri-reference",
                        "nullable": true
                    }
                }
            },
            "UserDomainMailbox:26e994f28120c4b51733f4efd1c6a999": {
                "type": "object",
                "description": "",
                "properties": {
                    "userDomainId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "passwd": {
                        "type": "string"
                    }
                }
            },
            "UserDomainMailbox:26e994f28120c4b51733f4efd1c6a999:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "userDomainId": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "passwd": {
                        "type": "string"
                    }
                }
            },
            "UserDomainMailbox:b24869693c225df47103d00fd93b91e9": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "userDomain": {
                        "$ref": "#/components/schemas/UserDomain"
                    },
                    "username": {
                        "type": "string"
                    },
                    "passwd": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "UserDomainMailbox:b24869693c225df47103d00fd93b91e9:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "userDomain": {
                        "$ref": "#/components/schemas/UserDomain:jsonld"
                    },
                    "username": {
                        "type": "string"
                    },
                    "passwd": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "UserHasRole:589632707daa9dd4818942897415b76b": {
                "type": "object",
                "description": "",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "role": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "UserHasRole:589632707daa9dd4818942897415b76b:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "role": {
                        "type": "string",
                        "format": "iri-reference"
                    }
                }
            },
            "UserHasRole:d91fd0c69421e5afa9bf303992483883": {
                "type": "object",
                "description": "",
                "properties": {
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "role": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "UserHasRole:e0ac26c03ac9034d16aff17dd49124c2": {
                "type": "object",
                "description": "",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "role": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "UserHasRole:e0ac26c03ac9034d16aff17dd49124c2:jsonld": {
                "type": "object",
                "description": "",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "user": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "role": {
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "addDt": {
                        "type": "integer"
                    },
                    "updDt": {
                        "type": "integer",
                        "nullable": true
                    }
                }
            },
            "UserSsoAccount": {
                "type": "object",
                "properties": {
                    "user": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "provider": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "remoteId": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "UserSsoAccount:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "user": {
                        "readOnly": true,
                        "type": "string",
                        "format": "iri-reference"
                    },
                    "provider": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "remoteId": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "VersionInterface": {
                "type": "object",
                "properties": {
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "VersionInterface:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "lang": {
                        "type": "string"
                    },
                    "item": {
                        "$ref": "#/components/schemas/VersionableInterface:jsonld"
                    },
                    "active": {
                        "type": "boolean"
                    }
                }
            },
            "VersionableInterface": {
                "type": "object",
                "properties": {
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface"
                        }
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageImageV"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "storageFolder": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder"
                            }
                        ]
                    },
                    "transactionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "width": {
                        "readOnly": true
                    },
                    "height": {
                        "readOnly": true
                    },
                    "dimensions": {
                        "writeOnly": true,
                        "type": "integer"
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "folder": {
                        "writeOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder"
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "storagePath": {
                        "description": "TODO juste setter un champ.",
                        "type": "string"
                    },
                    "publicPath": {
                        "type": "string"
                    },
                    "privatefilepath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "privateFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilePath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "trashDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "trashUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "VersionableInterface:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "version": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VersionInterface:jsonld"
                        }
                    },
                    "versions": {
                        "description": "IMPLEMENTEZ le mapping dans l'entity\nTODO trouver comment le faire dynamiquement avec un listener doctrine",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/StorageImageV:jsonld"
                        }
                    },
                    "defaultLang": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "versionByLang": {
                        "writeOnly": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "mimeType": {
                        "type": "string"
                    },
                    "storageFolder": {
                        "readOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder:jsonld"
                            }
                        ]
                    },
                    "transactionId": {
                        "type": "string",
                        "nullable": true
                    },
                    "width": {
                        "readOnly": true
                    },
                    "height": {
                        "readOnly": true
                    },
                    "dimensions": {
                        "writeOnly": true,
                        "type": "integer"
                    },
                    "ordering": {
                        "type": "integer"
                    },
                    "folder": {
                        "writeOnly": true,
                        "nullable": true,
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/StorageFolder:jsonld"
                            }
                        ]
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "storageName": {
                        "type": "string"
                    },
                    "storagePath": {
                        "description": "TODO juste setter un champ.",
                        "type": "string"
                    },
                    "publicPath": {
                        "type": "string"
                    },
                    "privatefilepath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "privateFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilename": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "publicFilePath": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "trashed": {
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "trashDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "trashUserId": {
                        "readOnly": true,
                        "type": "string",
                        "nullable": true
                    }
                }
            },
            "Webhook": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "payloadContentType": {
                        "type": "string"
                    },
                    "webhookHasEvents": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookHasEvent"
                        }
                    },
                    "calls": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookCall"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "Webhook:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "url": {
                        "type": "string"
                    },
                    "payloadContentType": {
                        "type": "string"
                    },
                    "webhookHasEvents": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookHasEvent:jsonld"
                        }
                    },
                    "calls": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WebhookCall:jsonld"
                        }
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "site": {
                        "$ref": "#/components/schemas/Site:jsonld"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "updUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "updDt": {
                        "readOnly": true,
                        "type": "integer",
                        "nullable": true
                    },
                    "createdAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "WebhookCall": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Webhook"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "event": {
                        "type": "string"
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "finishedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "payloadContentType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "requestHeaders": {
                        "type": "string",
                        "nullable": true
                    },
                    "requestPayload": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "responseStatusCode": {
                        "type": "integer",
                        "nullable": true
                    },
                    "responseHeaders": {
                        "type": "string",
                        "nullable": true
                    },
                    "responseBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "WebhookCall:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "webhook": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Webhook:jsonld"
                    },
                    "addDt": {
                        "readOnly": true,
                        "type": "integer"
                    },
                    "addUserId": {
                        "type": "string",
                        "nullable": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "event": {
                        "type": "string"
                    },
                    "startedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "finishedAt": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "payloadContentType": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "requestHeaders": {
                        "type": "string",
                        "nullable": true
                    },
                    "requestPayload": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "responseStatusCode": {
                        "type": "integer",
                        "nullable": true
                    },
                    "responseHeaders": {
                        "type": "string",
                        "nullable": true
                    },
                    "responseBody": {
                        "type": "string",
                        "nullable": true
                    },
                    "error": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "WebhookHasEvent": {
                "type": "object",
                "properties": {
                    "webhook": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Webhook"
                    },
                    "event": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "WebhookHasEvent:jsonld": {
                "type": "object",
                "properties": {
                    "@context": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@id": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "@type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "webhook": {
                        "readOnly": true,
                        "$ref": "#/components/schemas/Webhook:jsonld"
                    },
                    "event": {
                        "readOnly": true,
                        "type": "string"
                    }
                }
            },
            "Tokens": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string",
                        "readOnly": true
                    }
                }
            },
            "Credentials": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "apiKey": {
                "type": "apiKey",
                "in": "header",
                "description": "Value for the Authorization header (prefix it with \"Bearer \")",
                "name": "Authorization"
            }
        }
    }
}