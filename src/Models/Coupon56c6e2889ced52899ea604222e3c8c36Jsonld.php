<?php
/**
 * Coupon56c6e2889ced52899ea604222e3c8c36Jsonld
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API E-monsite
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: alpha
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace EmonsiteApi\Models;

use \ArrayAccess;
use \EmonsiteApi\ObjectSerializer;

/**
 * Coupon56c6e2889ced52899ea604222e3c8c36Jsonld Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Coupon56c6e2889ced52899ea604222e3c8c36Jsonld implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Coupon:56c6e2889ced52899ea604222e3c8c36:jsonld';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'context' => 'string',
        'id' => 'string',
        'type' => 'string',
        'id' => 'string',
        'createdAt' => '\DateTime',
        'code' => 'string',
        'offers' => 'string[]',
        'availableOnRenew' => 'bool',
        'availableOnNewbuy' => 'bool',
        'usedNb' => 'int',
        'maxUsedNb' => 'int',
        'limitReached' => 'bool',
        'freetime' => 'bool',
        'minDt' => 'int',
        'maxDt' => 'int',
        'userId' => 'string',
        'siteId' => 'string',
        'brandId' => 'string',
        'paymean' => 'string',
        'valueEur' => 'float',
        'valueUsd' => 'float',
        'valueAud' => 'float',
        'valueCad' => 'float',
        'valueGbp' => 'float',
        'valuePercent' => 'int',
        'applicableOn' => 'string',
        'minPriceEur' => 'float',
        'minPriceUsd' => 'float',
        'minPriceAud' => 'float',
        'minPriceCad' => 'float',
        'minPriceGbp' => 'float',
        'reductionOn' => 'string',
        'activeOffers' => 'string[]',
        'versions' => 'mixed'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'context' => null,
        'id' => null,
        'type' => null,
        'id' => null,
        'createdAt' => 'date-time',
        'code' => null,
        'offers' => null,
        'availableOnRenew' => null,
        'availableOnNewbuy' => null,
        'usedNb' => null,
        'maxUsedNb' => null,
        'limitReached' => null,
        'freetime' => null,
        'minDt' => null,
        'maxDt' => null,
        'userId' => null,
        'siteId' => null,
        'brandId' => null,
        'paymean' => null,
        'valueEur' => null,
        'valueUsd' => null,
        'valueAud' => null,
        'valueCad' => null,
        'valueGbp' => null,
        'valuePercent' => null,
        'applicableOn' => null,
        'minPriceEur' => null,
        'minPriceUsd' => null,
        'minPriceAud' => null,
        'minPriceCad' => null,
        'minPriceGbp' => null,
        'reductionOn' => null,
        'activeOffers' => null,
        'versions' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'context' => '@context',
        'id' => '@id',
        'type' => '@type',
        'id' => 'id',
        'createdAt' => 'createdAt',
        'code' => 'code',
        'offers' => 'offers',
        'availableOnRenew' => 'availableOnRenew',
        'availableOnNewbuy' => 'availableOnNewbuy',
        'usedNb' => 'usedNb',
        'maxUsedNb' => 'maxUsedNb',
        'limitReached' => 'limitReached',
        'freetime' => 'freetime',
        'minDt' => 'minDt',
        'maxDt' => 'maxDt',
        'userId' => 'userId',
        'siteId' => 'siteId',
        'brandId' => 'brandId',
        'paymean' => 'paymean',
        'valueEur' => 'valueEur',
        'valueUsd' => 'valueUsd',
        'valueAud' => 'valueAud',
        'valueCad' => 'valueCad',
        'valueGbp' => 'valueGbp',
        'valuePercent' => 'valuePercent',
        'applicableOn' => 'applicableOn',
        'minPriceEur' => 'minPriceEur',
        'minPriceUsd' => 'minPriceUsd',
        'minPriceAud' => 'minPriceAud',
        'minPriceCad' => 'minPriceCad',
        'minPriceGbp' => 'minPriceGbp',
        'reductionOn' => 'reductionOn',
        'activeOffers' => 'activeOffers',
        'versions' => 'versions'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'context' => 'setContext',
        'id' => 'setId',
        'type' => 'setType',
        'id' => 'setId',
        'createdAt' => 'setCreatedAt',
        'code' => 'setCode',
        'offers' => 'setOffers',
        'availableOnRenew' => 'setAvailableOnRenew',
        'availableOnNewbuy' => 'setAvailableOnNewbuy',
        'usedNb' => 'setUsedNb',
        'maxUsedNb' => 'setMaxUsedNb',
        'limitReached' => 'setLimitReached',
        'freetime' => 'setFreetime',
        'minDt' => 'setMinDt',
        'maxDt' => 'setMaxDt',
        'userId' => 'setUserId',
        'siteId' => 'setSiteId',
        'brandId' => 'setBrandId',
        'paymean' => 'setPaymean',
        'valueEur' => 'setValueEur',
        'valueUsd' => 'setValueUsd',
        'valueAud' => 'setValueAud',
        'valueCad' => 'setValueCad',
        'valueGbp' => 'setValueGbp',
        'valuePercent' => 'setValuePercent',
        'applicableOn' => 'setApplicableOn',
        'minPriceEur' => 'setMinPriceEur',
        'minPriceUsd' => 'setMinPriceUsd',
        'minPriceAud' => 'setMinPriceAud',
        'minPriceCad' => 'setMinPriceCad',
        'minPriceGbp' => 'setMinPriceGbp',
        'reductionOn' => 'setReductionOn',
        'activeOffers' => 'setActiveOffers',
        'versions' => 'setVersions'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'context' => 'getContext',
        'id' => 'getId',
        'type' => 'getType',
        'id' => 'getId',
        'createdAt' => 'getCreatedAt',
        'code' => 'getCode',
        'offers' => 'getOffers',
        'availableOnRenew' => 'getAvailableOnRenew',
        'availableOnNewbuy' => 'getAvailableOnNewbuy',
        'usedNb' => 'getUsedNb',
        'maxUsedNb' => 'getMaxUsedNb',
        'limitReached' => 'getLimitReached',
        'freetime' => 'getFreetime',
        'minDt' => 'getMinDt',
        'maxDt' => 'getMaxDt',
        'userId' => 'getUserId',
        'siteId' => 'getSiteId',
        'brandId' => 'getBrandId',
        'paymean' => 'getPaymean',
        'valueEur' => 'getValueEur',
        'valueUsd' => 'getValueUsd',
        'valueAud' => 'getValueAud',
        'valueCad' => 'getValueCad',
        'valueGbp' => 'getValueGbp',
        'valuePercent' => 'getValuePercent',
        'applicableOn' => 'getApplicableOn',
        'minPriceEur' => 'getMinPriceEur',
        'minPriceUsd' => 'getMinPriceUsd',
        'minPriceAud' => 'getMinPriceAud',
        'minPriceCad' => 'getMinPriceCad',
        'minPriceGbp' => 'getMinPriceGbp',
        'reductionOn' => 'getReductionOn',
        'activeOffers' => 'getActiveOffers',
        'versions' => 'getVersions'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['context'] = $data['context'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['createdAt'] = $data['createdAt'] ?? null;
        $this->container['code'] = $data['code'] ?? null;
        $this->container['offers'] = $data['offers'] ?? null;
        $this->container['availableOnRenew'] = $data['availableOnRenew'] ?? null;
        $this->container['availableOnNewbuy'] = $data['availableOnNewbuy'] ?? null;
        $this->container['usedNb'] = $data['usedNb'] ?? null;
        $this->container['maxUsedNb'] = $data['maxUsedNb'] ?? null;
        $this->container['limitReached'] = $data['limitReached'] ?? null;
        $this->container['freetime'] = $data['freetime'] ?? null;
        $this->container['minDt'] = $data['minDt'] ?? null;
        $this->container['maxDt'] = $data['maxDt'] ?? null;
        $this->container['userId'] = $data['userId'] ?? null;
        $this->container['siteId'] = $data['siteId'] ?? null;
        $this->container['brandId'] = $data['brandId'] ?? null;
        $this->container['paymean'] = $data['paymean'] ?? null;
        $this->container['valueEur'] = $data['valueEur'] ?? null;
        $this->container['valueUsd'] = $data['valueUsd'] ?? null;
        $this->container['valueAud'] = $data['valueAud'] ?? null;
        $this->container['valueCad'] = $data['valueCad'] ?? null;
        $this->container['valueGbp'] = $data['valueGbp'] ?? null;
        $this->container['valuePercent'] = $data['valuePercent'] ?? null;
        $this->container['applicableOn'] = $data['applicableOn'] ?? null;
        $this->container['minPriceEur'] = $data['minPriceEur'] ?? null;
        $this->container['minPriceUsd'] = $data['minPriceUsd'] ?? null;
        $this->container['minPriceAud'] = $data['minPriceAud'] ?? null;
        $this->container['minPriceCad'] = $data['minPriceCad'] ?? null;
        $this->container['minPriceGbp'] = $data['minPriceGbp'] ?? null;
        $this->container['reductionOn'] = $data['reductionOn'] ?? null;
        $this->container['activeOffers'] = $data['activeOffers'] ?? null;
        $this->container['versions'] = $data['versions'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets context
     *
     * @return string|null
     */
    public function getContext()
    {
        return $this->container['context'];
    }

    /**
     * Sets context
     *
     * @param string|null $context context
     *
     * @return self
     */
    public function setContext($context)
    {
        $this->container['context'] = $context;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param \DateTime|null $createdAt createdAt
     *
     * @return self
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets code
     *
     * @return string|null
     */
    public function getCode()
    {
        return $this->container['code'];
    }

    /**
     * Sets code
     *
     * @param string|null $code code
     *
     * @return self
     */
    public function setCode($code)
    {
        $this->container['code'] = $code;

        return $this;
    }

    /**
     * Gets offers
     *
     * @return string[]|null
     */
    public function getOffers()
    {
        return $this->container['offers'];
    }

    /**
     * Sets offers
     *
     * @param string[]|null $offers offers
     *
     * @return self
     */
    public function setOffers($offers)
    {
        $this->container['offers'] = $offers;

        return $this;
    }

    /**
     * Gets availableOnRenew
     *
     * @return bool|null
     */
    public function getAvailableOnRenew()
    {
        return $this->container['availableOnRenew'];
    }

    /**
     * Sets availableOnRenew
     *
     * @param bool|null $availableOnRenew availableOnRenew
     *
     * @return self
     */
    public function setAvailableOnRenew($availableOnRenew)
    {
        $this->container['availableOnRenew'] = $availableOnRenew;

        return $this;
    }

    /**
     * Gets availableOnNewbuy
     *
     * @return bool|null
     */
    public function getAvailableOnNewbuy()
    {
        return $this->container['availableOnNewbuy'];
    }

    /**
     * Sets availableOnNewbuy
     *
     * @param bool|null $availableOnNewbuy availableOnNewbuy
     *
     * @return self
     */
    public function setAvailableOnNewbuy($availableOnNewbuy)
    {
        $this->container['availableOnNewbuy'] = $availableOnNewbuy;

        return $this;
    }

    /**
     * Gets usedNb
     *
     * @return int|null
     */
    public function getUsedNb()
    {
        return $this->container['usedNb'];
    }

    /**
     * Sets usedNb
     *
     * @param int|null $usedNb usedNb
     *
     * @return self
     */
    public function setUsedNb($usedNb)
    {
        $this->container['usedNb'] = $usedNb;

        return $this;
    }

    /**
     * Gets maxUsedNb
     *
     * @return int|null
     */
    public function getMaxUsedNb()
    {
        return $this->container['maxUsedNb'];
    }

    /**
     * Sets maxUsedNb
     *
     * @param int|null $maxUsedNb maxUsedNb
     *
     * @return self
     */
    public function setMaxUsedNb($maxUsedNb)
    {
        $this->container['maxUsedNb'] = $maxUsedNb;

        return $this;
    }

    /**
     * Gets limitReached
     *
     * @return bool|null
     */
    public function getLimitReached()
    {
        return $this->container['limitReached'];
    }

    /**
     * Sets limitReached
     *
     * @param bool|null $limitReached limitReached
     *
     * @return self
     */
    public function setLimitReached($limitReached)
    {
        $this->container['limitReached'] = $limitReached;

        return $this;
    }

    /**
     * Gets freetime
     *
     * @return bool|null
     */
    public function getFreetime()
    {
        return $this->container['freetime'];
    }

    /**
     * Sets freetime
     *
     * @param bool|null $freetime freetime
     *
     * @return self
     */
    public function setFreetime($freetime)
    {
        $this->container['freetime'] = $freetime;

        return $this;
    }

    /**
     * Gets minDt
     *
     * @return int|null
     */
    public function getMinDt()
    {
        return $this->container['minDt'];
    }

    /**
     * Sets minDt
     *
     * @param int|null $minDt minDt
     *
     * @return self
     */
    public function setMinDt($minDt)
    {
        $this->container['minDt'] = $minDt;

        return $this;
    }

    /**
     * Gets maxDt
     *
     * @return int|null
     */
    public function getMaxDt()
    {
        return $this->container['maxDt'];
    }

    /**
     * Sets maxDt
     *
     * @param int|null $maxDt maxDt
     *
     * @return self
     */
    public function setMaxDt($maxDt)
    {
        $this->container['maxDt'] = $maxDt;

        return $this;
    }

    /**
     * Gets userId
     *
     * @return string|null
     */
    public function getUserId()
    {
        return $this->container['userId'];
    }

    /**
     * Sets userId
     *
     * @param string|null $userId userId
     *
     * @return self
     */
    public function setUserId($userId)
    {
        $this->container['userId'] = $userId;

        return $this;
    }

    /**
     * Gets siteId
     *
     * @return string|null
     */
    public function getSiteId()
    {
        return $this->container['siteId'];
    }

    /**
     * Sets siteId
     *
     * @param string|null $siteId siteId
     *
     * @return self
     */
    public function setSiteId($siteId)
    {
        $this->container['siteId'] = $siteId;

        return $this;
    }

    /**
     * Gets brandId
     *
     * @return string|null
     */
    public function getBrandId()
    {
        return $this->container['brandId'];
    }

    /**
     * Sets brandId
     *
     * @param string|null $brandId brandId
     *
     * @return self
     */
    public function setBrandId($brandId)
    {
        $this->container['brandId'] = $brandId;

        return $this;
    }

    /**
     * Gets paymean
     *
     * @return string|null
     */
    public function getPaymean()
    {
        return $this->container['paymean'];
    }

    /**
     * Sets paymean
     *
     * @param string|null $paymean paymean
     *
     * @return self
     */
    public function setPaymean($paymean)
    {
        $this->container['paymean'] = $paymean;

        return $this;
    }

    /**
     * Gets valueEur
     *
     * @return float|null
     */
    public function getValueEur()
    {
        return $this->container['valueEur'];
    }

    /**
     * Sets valueEur
     *
     * @param float|null $valueEur valueEur
     *
     * @return self
     */
    public function setValueEur($valueEur)
    {
        $this->container['valueEur'] = $valueEur;

        return $this;
    }

    /**
     * Gets valueUsd
     *
     * @return float|null
     */
    public function getValueUsd()
    {
        return $this->container['valueUsd'];
    }

    /**
     * Sets valueUsd
     *
     * @param float|null $valueUsd valueUsd
     *
     * @return self
     */
    public function setValueUsd($valueUsd)
    {
        $this->container['valueUsd'] = $valueUsd;

        return $this;
    }

    /**
     * Gets valueAud
     *
     * @return float|null
     */
    public function getValueAud()
    {
        return $this->container['valueAud'];
    }

    /**
     * Sets valueAud
     *
     * @param float|null $valueAud valueAud
     *
     * @return self
     */
    public function setValueAud($valueAud)
    {
        $this->container['valueAud'] = $valueAud;

        return $this;
    }

    /**
     * Gets valueCad
     *
     * @return float|null
     */
    public function getValueCad()
    {
        return $this->container['valueCad'];
    }

    /**
     * Sets valueCad
     *
     * @param float|null $valueCad valueCad
     *
     * @return self
     */
    public function setValueCad($valueCad)
    {
        $this->container['valueCad'] = $valueCad;

        return $this;
    }

    /**
     * Gets valueGbp
     *
     * @return float|null
     */
    public function getValueGbp()
    {
        return $this->container['valueGbp'];
    }

    /**
     * Sets valueGbp
     *
     * @param float|null $valueGbp valueGbp
     *
     * @return self
     */
    public function setValueGbp($valueGbp)
    {
        $this->container['valueGbp'] = $valueGbp;

        return $this;
    }

    /**
     * Gets valuePercent
     *
     * @return int|null
     */
    public function getValuePercent()
    {
        return $this->container['valuePercent'];
    }

    /**
     * Sets valuePercent
     *
     * @param int|null $valuePercent valuePercent
     *
     * @return self
     */
    public function setValuePercent($valuePercent)
    {
        $this->container['valuePercent'] = $valuePercent;

        return $this;
    }

    /**
     * Gets applicableOn
     *
     * @return string|null
     */
    public function getApplicableOn()
    {
        return $this->container['applicableOn'];
    }

    /**
     * Sets applicableOn
     *
     * @param string|null $applicableOn applicableOn
     *
     * @return self
     */
    public function setApplicableOn($applicableOn)
    {
        $this->container['applicableOn'] = $applicableOn;

        return $this;
    }

    /**
     * Gets minPriceEur
     *
     * @return float|null
     */
    public function getMinPriceEur()
    {
        return $this->container['minPriceEur'];
    }

    /**
     * Sets minPriceEur
     *
     * @param float|null $minPriceEur minPriceEur
     *
     * @return self
     */
    public function setMinPriceEur($minPriceEur)
    {
        $this->container['minPriceEur'] = $minPriceEur;

        return $this;
    }

    /**
     * Gets minPriceUsd
     *
     * @return float|null
     */
    public function getMinPriceUsd()
    {
        return $this->container['minPriceUsd'];
    }

    /**
     * Sets minPriceUsd
     *
     * @param float|null $minPriceUsd minPriceUsd
     *
     * @return self
     */
    public function setMinPriceUsd($minPriceUsd)
    {
        $this->container['minPriceUsd'] = $minPriceUsd;

        return $this;
    }

    /**
     * Gets minPriceAud
     *
     * @return float|null
     */
    public function getMinPriceAud()
    {
        return $this->container['minPriceAud'];
    }

    /**
     * Sets minPriceAud
     *
     * @param float|null $minPriceAud minPriceAud
     *
     * @return self
     */
    public function setMinPriceAud($minPriceAud)
    {
        $this->container['minPriceAud'] = $minPriceAud;

        return $this;
    }

    /**
     * Gets minPriceCad
     *
     * @return float|null
     */
    public function getMinPriceCad()
    {
        return $this->container['minPriceCad'];
    }

    /**
     * Sets minPriceCad
     *
     * @param float|null $minPriceCad minPriceCad
     *
     * @return self
     */
    public function setMinPriceCad($minPriceCad)
    {
        $this->container['minPriceCad'] = $minPriceCad;

        return $this;
    }

    /**
     * Gets minPriceGbp
     *
     * @return float|null
     */
    public function getMinPriceGbp()
    {
        return $this->container['minPriceGbp'];
    }

    /**
     * Sets minPriceGbp
     *
     * @param float|null $minPriceGbp minPriceGbp
     *
     * @return self
     */
    public function setMinPriceGbp($minPriceGbp)
    {
        $this->container['minPriceGbp'] = $minPriceGbp;

        return $this;
    }

    /**
     * Gets reductionOn
     *
     * @return string|null
     */
    public function getReductionOn()
    {
        return $this->container['reductionOn'];
    }

    /**
     * Sets reductionOn
     *
     * @param string|null $reductionOn reductionOn
     *
     * @return self
     */
    public function setReductionOn($reductionOn)
    {
        $this->container['reductionOn'] = $reductionOn;

        return $this;
    }

    /**
     * Gets activeOffers
     *
     * @return string[]|null
     */
    public function getActiveOffers()
    {
        return $this->container['activeOffers'];
    }

    /**
     * Sets activeOffers
     *
     * @param string[]|null $activeOffers activeOffers
     *
     * @return self
     */
    public function setActiveOffers($activeOffers)
    {
        $this->container['activeOffers'] = $activeOffers;

        return $this;
    }

    /**
     * Gets versions
     *
     * @return mixed|null
     */
    public function getVersions()
    {
        return $this->container['versions'];
    }

    /**
     * Sets versions
     *
     * @param mixed|null $versions versions
     *
     * @return self
     */
    public function setVersions($versions)
    {
        $this->container['versions'] = $versions;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


