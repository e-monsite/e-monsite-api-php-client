<?php
/**
 * EcoOrderDetail7aba138374756b6a38adb2fea47d2260Jsonld
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API E-monsite
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: alpha
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace EmonsiteApi\Models;

use \ArrayAccess;
use \EmonsiteApi\ObjectSerializer;

/**
 * EcoOrderDetail7aba138374756b6a38adb2fea47d2260Jsonld Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class EcoOrderDetail7aba138374756b6a38adb2fea47d2260Jsonld implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'EcoOrderDetail:7aba138374756b6a38adb2fea47d2260:jsonld';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'context' => 'string',
        'id' => 'string',
        'type' => 'string',
        'id' => 'string',
        'product' => 'mixed',
        'combination' => 'mixed',
        'name' => 'string',
        'url' => 'string',
        'pictureUrl' => 'string',
        'quantity' => 'int',
        'taxId' => 'string',
        'reference' => 'string',
        'weight' => 'float',
        'reductionPrice' => 'float',
        'reductionPercent' => 'float',
        'puHt' => 'float',
        'puTtc' => 'float',
        'downloadableProduct' => 'bool',
        'ean13' => 'string',
        'customField' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'context' => null,
        'id' => null,
        'type' => null,
        'id' => null,
        'product' => null,
        'combination' => null,
        'name' => null,
        'url' => null,
        'pictureUrl' => null,
        'quantity' => null,
        'taxId' => null,
        'reference' => null,
        'weight' => null,
        'reductionPrice' => null,
        'reductionPercent' => null,
        'puHt' => null,
        'puTtc' => null,
        'downloadableProduct' => null,
        'ean13' => null,
        'customField' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'context' => '@context',
        'id' => '@id',
        'type' => '@type',
        'id' => 'id',
        'product' => 'product',
        'combination' => 'combination',
        'name' => 'name',
        'url' => 'url',
        'pictureUrl' => 'pictureUrl',
        'quantity' => 'quantity',
        'taxId' => 'taxId',
        'reference' => 'reference',
        'weight' => 'weight',
        'reductionPrice' => 'reductionPrice',
        'reductionPercent' => 'reductionPercent',
        'puHt' => 'puHt',
        'puTtc' => 'puTtc',
        'downloadableProduct' => 'downloadableProduct',
        'ean13' => 'ean13',
        'customField' => 'customField'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'context' => 'setContext',
        'id' => 'setId',
        'type' => 'setType',
        'id' => 'setId',
        'product' => 'setProduct',
        'combination' => 'setCombination',
        'name' => 'setName',
        'url' => 'setUrl',
        'pictureUrl' => 'setPictureUrl',
        'quantity' => 'setQuantity',
        'taxId' => 'setTaxId',
        'reference' => 'setReference',
        'weight' => 'setWeight',
        'reductionPrice' => 'setReductionPrice',
        'reductionPercent' => 'setReductionPercent',
        'puHt' => 'setPuHt',
        'puTtc' => 'setPuTtc',
        'downloadableProduct' => 'setDownloadableProduct',
        'ean13' => 'setEan13',
        'customField' => 'setCustomField'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'context' => 'getContext',
        'id' => 'getId',
        'type' => 'getType',
        'id' => 'getId',
        'product' => 'getProduct',
        'combination' => 'getCombination',
        'name' => 'getName',
        'url' => 'getUrl',
        'pictureUrl' => 'getPictureUrl',
        'quantity' => 'getQuantity',
        'taxId' => 'getTaxId',
        'reference' => 'getReference',
        'weight' => 'getWeight',
        'reductionPrice' => 'getReductionPrice',
        'reductionPercent' => 'getReductionPercent',
        'puHt' => 'getPuHt',
        'puTtc' => 'getPuTtc',
        'downloadableProduct' => 'getDownloadableProduct',
        'ean13' => 'getEan13',
        'customField' => 'getCustomField'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['context'] = $data['context'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['product'] = $data['product'] ?? null;
        $this->container['combination'] = $data['combination'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['url'] = $data['url'] ?? null;
        $this->container['pictureUrl'] = $data['pictureUrl'] ?? null;
        $this->container['quantity'] = $data['quantity'] ?? null;
        $this->container['taxId'] = $data['taxId'] ?? null;
        $this->container['reference'] = $data['reference'] ?? null;
        $this->container['weight'] = $data['weight'] ?? null;
        $this->container['reductionPrice'] = $data['reductionPrice'] ?? null;
        $this->container['reductionPercent'] = $data['reductionPercent'] ?? null;
        $this->container['puHt'] = $data['puHt'] ?? null;
        $this->container['puTtc'] = $data['puTtc'] ?? null;
        $this->container['downloadableProduct'] = $data['downloadableProduct'] ?? null;
        $this->container['ean13'] = $data['ean13'] ?? null;
        $this->container['customField'] = $data['customField'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets context
     *
     * @return string|null
     */
    public function getContext()
    {
        return $this->container['context'];
    }

    /**
     * Sets context
     *
     * @param string|null $context context
     *
     * @return self
     */
    public function setContext($context)
    {
        $this->container['context'] = $context;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets product
     *
     * @return mixed|null
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param mixed|null $product product
     *
     * @return self
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets combination
     *
     * @return mixed|null
     */
    public function getCombination()
    {
        return $this->container['combination'];
    }

    /**
     * Sets combination
     *
     * @param mixed|null $combination combination
     *
     * @return self
     */
    public function setCombination($combination)
    {
        $this->container['combination'] = $combination;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets url
     *
     * @return string|null
     */
    public function getUrl()
    {
        return $this->container['url'];
    }

    /**
     * Sets url
     *
     * @param string|null $url url
     *
     * @return self
     */
    public function setUrl($url)
    {
        $this->container['url'] = $url;

        return $this;
    }

    /**
     * Gets pictureUrl
     *
     * @return string|null
     */
    public function getPictureUrl()
    {
        return $this->container['pictureUrl'];
    }

    /**
     * Sets pictureUrl
     *
     * @param string|null $pictureUrl pictureUrl
     *
     * @return self
     */
    public function setPictureUrl($pictureUrl)
    {
        $this->container['pictureUrl'] = $pictureUrl;

        return $this;
    }

    /**
     * Gets quantity
     *
     * @return int|null
     */
    public function getQuantity()
    {
        return $this->container['quantity'];
    }

    /**
     * Sets quantity
     *
     * @param int|null $quantity quantity
     *
     * @return self
     */
    public function setQuantity($quantity)
    {
        $this->container['quantity'] = $quantity;

        return $this;
    }

    /**
     * Gets taxId
     *
     * @return string|null
     */
    public function getTaxId()
    {
        return $this->container['taxId'];
    }

    /**
     * Sets taxId
     *
     * @param string|null $taxId taxId
     *
     * @return self
     */
    public function setTaxId($taxId)
    {
        $this->container['taxId'] = $taxId;

        return $this;
    }

    /**
     * Gets reference
     *
     * @return string|null
     */
    public function getReference()
    {
        return $this->container['reference'];
    }

    /**
     * Sets reference
     *
     * @param string|null $reference reference
     *
     * @return self
     */
    public function setReference($reference)
    {
        $this->container['reference'] = $reference;

        return $this;
    }

    /**
     * Gets weight
     *
     * @return float|null
     */
    public function getWeight()
    {
        return $this->container['weight'];
    }

    /**
     * Sets weight
     *
     * @param float|null $weight weight
     *
     * @return self
     */
    public function setWeight($weight)
    {
        $this->container['weight'] = $weight;

        return $this;
    }

    /**
     * Gets reductionPrice
     *
     * @return float|null
     */
    public function getReductionPrice()
    {
        return $this->container['reductionPrice'];
    }

    /**
     * Sets reductionPrice
     *
     * @param float|null $reductionPrice reductionPrice
     *
     * @return self
     */
    public function setReductionPrice($reductionPrice)
    {
        $this->container['reductionPrice'] = $reductionPrice;

        return $this;
    }

    /**
     * Gets reductionPercent
     *
     * @return float|null
     */
    public function getReductionPercent()
    {
        return $this->container['reductionPercent'];
    }

    /**
     * Sets reductionPercent
     *
     * @param float|null $reductionPercent reductionPercent
     *
     * @return self
     */
    public function setReductionPercent($reductionPercent)
    {
        $this->container['reductionPercent'] = $reductionPercent;

        return $this;
    }

    /**
     * Gets puHt
     *
     * @return float|null
     */
    public function getPuHt()
    {
        return $this->container['puHt'];
    }

    /**
     * Sets puHt
     *
     * @param float|null $puHt puHt
     *
     * @return self
     */
    public function setPuHt($puHt)
    {
        $this->container['puHt'] = $puHt;

        return $this;
    }

    /**
     * Gets puTtc
     *
     * @return float|null
     */
    public function getPuTtc()
    {
        return $this->container['puTtc'];
    }

    /**
     * Sets puTtc
     *
     * @param float|null $puTtc puTtc
     *
     * @return self
     */
    public function setPuTtc($puTtc)
    {
        $this->container['puTtc'] = $puTtc;

        return $this;
    }

    /**
     * Gets downloadableProduct
     *
     * @return bool|null
     */
    public function getDownloadableProduct()
    {
        return $this->container['downloadableProduct'];
    }

    /**
     * Sets downloadableProduct
     *
     * @param bool|null $downloadableProduct downloadableProduct
     *
     * @return self
     */
    public function setDownloadableProduct($downloadableProduct)
    {
        $this->container['downloadableProduct'] = $downloadableProduct;

        return $this;
    }

    /**
     * Gets ean13
     *
     * @return string|null
     */
    public function getEan13()
    {
        return $this->container['ean13'];
    }

    /**
     * Sets ean13
     *
     * @param string|null $ean13 ean13
     *
     * @return self
     */
    public function setEan13($ean13)
    {
        $this->container['ean13'] = $ean13;

        return $this;
    }

    /**
     * Gets customField
     *
     * @return string[]|null
     */
    public function getCustomField()
    {
        return $this->container['customField'];
    }

    /**
     * Sets customField
     *
     * @param string[]|null $customField customField
     *
     * @return self
     */
    public function setCustomField($customField)
    {
        $this->container['customField'] = $customField;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


