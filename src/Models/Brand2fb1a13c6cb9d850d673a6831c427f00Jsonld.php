<?php
/**
 * Brand2fb1a13c6cb9d850d673a6831c427f00Jsonld
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API E-monsite
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: alpha
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace EmonsiteApi\Models;

use \ArrayAccess;
use \EmonsiteApi\ObjectSerializer;

/**
 * Brand2fb1a13c6cb9d850d673a6831c427f00Jsonld Class Doc Comment
 *
 * @category Class
 * @description 
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class Brand2fb1a13c6cb9d850d673a6831c427f00Jsonld implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'Brand:2fb1a13c6cb9d850d673a6831c427f00:jsonld';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'type' => 'string',
        'context' => 'string',
        'id' => 'string',
        'createdAt' => '\DateTime',
        'technicalDomain' => 'string',
        'active' => 'bool',
        'defaultLang' => 'string',
        'name' => 'string',
        'email' => 'string',
        'noreplyEmail' => 'string',
        'country' => 'string',
        'directoryEdito' => 'string',
        'defaultTimezone' => 'string',
        'type' => 'string',
        'protocol' => 'string',
        'contactName' => 'string',
        'contactOrganisation' => 'string',
        'contactAddress' => 'string',
        'loginIntro' => 'string',
        'credits' => 'float',
        'billingFirstname' => 'string',
        'billingLastname' => 'string',
        'billingOrganisation' => 'string',
        'billingAddr1' => 'string',
        'billingAddr2' => 'string',
        'billingZipcode' => 'string',
        'billingCity' => 'string',
        'billingCountry' => 'string',
        'tvaIntra' => 'string',
        'googleApiKey' => 'string',
        'newUserRegistrationEnabled' => 'bool',
        'newSiteCreationEnabled' => 'bool',
        'brandDomains' => 'mixed',
        'changelogifyAppId' => 'string',
        'hcaptcha' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => null,
        'type' => null,
        'context' => null,
        'id' => null,
        'createdAt' => 'date-time',
        'technicalDomain' => null,
        'active' => null,
        'defaultLang' => null,
        'name' => null,
        'email' => null,
        'noreplyEmail' => null,
        'country' => null,
        'directoryEdito' => null,
        'defaultTimezone' => null,
        'type' => null,
        'protocol' => null,
        'contactName' => null,
        'contactOrganisation' => null,
        'contactAddress' => null,
        'loginIntro' => null,
        'credits' => null,
        'billingFirstname' => null,
        'billingLastname' => null,
        'billingOrganisation' => null,
        'billingAddr1' => null,
        'billingAddr2' => null,
        'billingZipcode' => null,
        'billingCity' => null,
        'billingCountry' => null,
        'tvaIntra' => null,
        'googleApiKey' => null,
        'newUserRegistrationEnabled' => null,
        'newSiteCreationEnabled' => null,
        'brandDomains' => null,
        'changelogifyAppId' => null,
        'hcaptcha' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => '@id',
        'type' => '@type',
        'context' => '@context',
        'id' => 'id',
        'createdAt' => 'createdAt',
        'technicalDomain' => 'technicalDomain',
        'active' => 'active',
        'defaultLang' => 'defaultLang',
        'name' => 'name',
        'email' => 'email',
        'noreplyEmail' => 'noreplyEmail',
        'country' => 'country',
        'directoryEdito' => 'directoryEdito',
        'defaultTimezone' => 'defaultTimezone',
        'type' => 'type',
        'protocol' => 'protocol',
        'contactName' => 'contactName',
        'contactOrganisation' => 'contactOrganisation',
        'contactAddress' => 'contactAddress',
        'loginIntro' => 'loginIntro',
        'credits' => 'credits',
        'billingFirstname' => 'billingFirstname',
        'billingLastname' => 'billingLastname',
        'billingOrganisation' => 'billingOrganisation',
        'billingAddr1' => 'billingAddr1',
        'billingAddr2' => 'billingAddr2',
        'billingZipcode' => 'billingZipcode',
        'billingCity' => 'billingCity',
        'billingCountry' => 'billingCountry',
        'tvaIntra' => 'tvaIntra',
        'googleApiKey' => 'googleApiKey',
        'newUserRegistrationEnabled' => 'newUserRegistrationEnabled',
        'newSiteCreationEnabled' => 'newSiteCreationEnabled',
        'brandDomains' => 'brandDomains',
        'changelogifyAppId' => 'changelogifyAppId',
        'hcaptcha' => 'hcaptcha'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'type' => 'setType',
        'context' => 'setContext',
        'id' => 'setId',
        'createdAt' => 'setCreatedAt',
        'technicalDomain' => 'setTechnicalDomain',
        'active' => 'setActive',
        'defaultLang' => 'setDefaultLang',
        'name' => 'setName',
        'email' => 'setEmail',
        'noreplyEmail' => 'setNoreplyEmail',
        'country' => 'setCountry',
        'directoryEdito' => 'setDirectoryEdito',
        'defaultTimezone' => 'setDefaultTimezone',
        'type' => 'setType',
        'protocol' => 'setProtocol',
        'contactName' => 'setContactName',
        'contactOrganisation' => 'setContactOrganisation',
        'contactAddress' => 'setContactAddress',
        'loginIntro' => 'setLoginIntro',
        'credits' => 'setCredits',
        'billingFirstname' => 'setBillingFirstname',
        'billingLastname' => 'setBillingLastname',
        'billingOrganisation' => 'setBillingOrganisation',
        'billingAddr1' => 'setBillingAddr1',
        'billingAddr2' => 'setBillingAddr2',
        'billingZipcode' => 'setBillingZipcode',
        'billingCity' => 'setBillingCity',
        'billingCountry' => 'setBillingCountry',
        'tvaIntra' => 'setTvaIntra',
        'googleApiKey' => 'setGoogleApiKey',
        'newUserRegistrationEnabled' => 'setNewUserRegistrationEnabled',
        'newSiteCreationEnabled' => 'setNewSiteCreationEnabled',
        'brandDomains' => 'setBrandDomains',
        'changelogifyAppId' => 'setChangelogifyAppId',
        'hcaptcha' => 'setHcaptcha'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'type' => 'getType',
        'context' => 'getContext',
        'id' => 'getId',
        'createdAt' => 'getCreatedAt',
        'technicalDomain' => 'getTechnicalDomain',
        'active' => 'getActive',
        'defaultLang' => 'getDefaultLang',
        'name' => 'getName',
        'email' => 'getEmail',
        'noreplyEmail' => 'getNoreplyEmail',
        'country' => 'getCountry',
        'directoryEdito' => 'getDirectoryEdito',
        'defaultTimezone' => 'getDefaultTimezone',
        'type' => 'getType',
        'protocol' => 'getProtocol',
        'contactName' => 'getContactName',
        'contactOrganisation' => 'getContactOrganisation',
        'contactAddress' => 'getContactAddress',
        'loginIntro' => 'getLoginIntro',
        'credits' => 'getCredits',
        'billingFirstname' => 'getBillingFirstname',
        'billingLastname' => 'getBillingLastname',
        'billingOrganisation' => 'getBillingOrganisation',
        'billingAddr1' => 'getBillingAddr1',
        'billingAddr2' => 'getBillingAddr2',
        'billingZipcode' => 'getBillingZipcode',
        'billingCity' => 'getBillingCity',
        'billingCountry' => 'getBillingCountry',
        'tvaIntra' => 'getTvaIntra',
        'googleApiKey' => 'getGoogleApiKey',
        'newUserRegistrationEnabled' => 'getNewUserRegistrationEnabled',
        'newSiteCreationEnabled' => 'getNewSiteCreationEnabled',
        'brandDomains' => 'getBrandDomains',
        'changelogifyAppId' => 'getChangelogifyAppId',
        'hcaptcha' => 'getHcaptcha'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }


    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['context'] = $data['context'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['createdAt'] = $data['createdAt'] ?? null;
        $this->container['technicalDomain'] = $data['technicalDomain'] ?? null;
        $this->container['active'] = $data['active'] ?? null;
        $this->container['defaultLang'] = $data['defaultLang'] ?? null;
        $this->container['name'] = $data['name'] ?? null;
        $this->container['email'] = $data['email'] ?? null;
        $this->container['noreplyEmail'] = $data['noreplyEmail'] ?? null;
        $this->container['country'] = $data['country'] ?? null;
        $this->container['directoryEdito'] = $data['directoryEdito'] ?? null;
        $this->container['defaultTimezone'] = $data['defaultTimezone'] ?? null;
        $this->container['type'] = $data['type'] ?? null;
        $this->container['protocol'] = $data['protocol'] ?? null;
        $this->container['contactName'] = $data['contactName'] ?? null;
        $this->container['contactOrganisation'] = $data['contactOrganisation'] ?? null;
        $this->container['contactAddress'] = $data['contactAddress'] ?? null;
        $this->container['loginIntro'] = $data['loginIntro'] ?? null;
        $this->container['credits'] = $data['credits'] ?? null;
        $this->container['billingFirstname'] = $data['billingFirstname'] ?? null;
        $this->container['billingLastname'] = $data['billingLastname'] ?? null;
        $this->container['billingOrganisation'] = $data['billingOrganisation'] ?? null;
        $this->container['billingAddr1'] = $data['billingAddr1'] ?? null;
        $this->container['billingAddr2'] = $data['billingAddr2'] ?? null;
        $this->container['billingZipcode'] = $data['billingZipcode'] ?? null;
        $this->container['billingCity'] = $data['billingCity'] ?? null;
        $this->container['billingCountry'] = $data['billingCountry'] ?? null;
        $this->container['tvaIntra'] = $data['tvaIntra'] ?? null;
        $this->container['googleApiKey'] = $data['googleApiKey'] ?? null;
        $this->container['newUserRegistrationEnabled'] = $data['newUserRegistrationEnabled'] ?? null;
        $this->container['newSiteCreationEnabled'] = $data['newSiteCreationEnabled'] ?? null;
        $this->container['brandDomains'] = $data['brandDomains'] ?? null;
        $this->container['changelogifyAppId'] = $data['changelogifyAppId'] ?? null;
        $this->container['hcaptcha'] = $data['hcaptcha'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets context
     *
     * @return string|null
     */
    public function getContext()
    {
        return $this->container['context'];
    }

    /**
     * Sets context
     *
     * @param string|null $context context
     *
     * @return self
     */
    public function setContext($context)
    {
        $this->container['context'] = $context;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets createdAt
     *
     * @return \DateTime|null
     */
    public function getCreatedAt()
    {
        return $this->container['createdAt'];
    }

    /**
     * Sets createdAt
     *
     * @param \DateTime|null $createdAt createdAt
     *
     * @return self
     */
    public function setCreatedAt($createdAt)
    {
        $this->container['createdAt'] = $createdAt;

        return $this;
    }

    /**
     * Gets technicalDomain
     *
     * @return string|null
     */
    public function getTechnicalDomain()
    {
        return $this->container['technicalDomain'];
    }

    /**
     * Sets technicalDomain
     *
     * @param string|null $technicalDomain technicalDomain
     *
     * @return self
     */
    public function setTechnicalDomain($technicalDomain)
    {
        $this->container['technicalDomain'] = $technicalDomain;

        return $this;
    }

    /**
     * Gets active
     *
     * @return bool|null
     */
    public function getActive()
    {
        return $this->container['active'];
    }

    /**
     * Sets active
     *
     * @param bool|null $active active
     *
     * @return self
     */
    public function setActive($active)
    {
        $this->container['active'] = $active;

        return $this;
    }

    /**
     * Gets defaultLang
     *
     * @return string|null
     */
    public function getDefaultLang()
    {
        return $this->container['defaultLang'];
    }

    /**
     * Sets defaultLang
     *
     * @param string|null $defaultLang defaultLang
     *
     * @return self
     */
    public function setDefaultLang($defaultLang)
    {
        $this->container['defaultLang'] = $defaultLang;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string|null
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string|null $name name
     *
     * @return self
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string|null
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string|null $email email
     *
     * @return self
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets noreplyEmail
     *
     * @return string|null
     */
    public function getNoreplyEmail()
    {
        return $this->container['noreplyEmail'];
    }

    /**
     * Sets noreplyEmail
     *
     * @param string|null $noreplyEmail noreplyEmail
     *
     * @return self
     */
    public function setNoreplyEmail($noreplyEmail)
    {
        $this->container['noreplyEmail'] = $noreplyEmail;

        return $this;
    }

    /**
     * Gets country
     *
     * @return string|null
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param string|null $country country
     *
     * @return self
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets directoryEdito
     *
     * @return string|null
     */
    public function getDirectoryEdito()
    {
        return $this->container['directoryEdito'];
    }

    /**
     * Sets directoryEdito
     *
     * @param string|null $directoryEdito directoryEdito
     *
     * @return self
     */
    public function setDirectoryEdito($directoryEdito)
    {
        $this->container['directoryEdito'] = $directoryEdito;

        return $this;
    }

    /**
     * Gets defaultTimezone
     *
     * @return string|null
     */
    public function getDefaultTimezone()
    {
        return $this->container['defaultTimezone'];
    }

    /**
     * Sets defaultTimezone
     *
     * @param string|null $defaultTimezone defaultTimezone
     *
     * @return self
     */
    public function setDefaultTimezone($defaultTimezone)
    {
        $this->container['defaultTimezone'] = $defaultTimezone;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string|null
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string|null $type type
     *
     * @return self
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets protocol
     *
     * @return string|null
     */
    public function getProtocol()
    {
        return $this->container['protocol'];
    }

    /**
     * Sets protocol
     *
     * @param string|null $protocol protocol
     *
     * @return self
     */
    public function setProtocol($protocol)
    {
        $this->container['protocol'] = $protocol;

        return $this;
    }

    /**
     * Gets contactName
     *
     * @return string|null
     */
    public function getContactName()
    {
        return $this->container['contactName'];
    }

    /**
     * Sets contactName
     *
     * @param string|null $contactName contactName
     *
     * @return self
     */
    public function setContactName($contactName)
    {
        $this->container['contactName'] = $contactName;

        return $this;
    }

    /**
     * Gets contactOrganisation
     *
     * @return string|null
     */
    public function getContactOrganisation()
    {
        return $this->container['contactOrganisation'];
    }

    /**
     * Sets contactOrganisation
     *
     * @param string|null $contactOrganisation contactOrganisation
     *
     * @return self
     */
    public function setContactOrganisation($contactOrganisation)
    {
        $this->container['contactOrganisation'] = $contactOrganisation;

        return $this;
    }

    /**
     * Gets contactAddress
     *
     * @return string|null
     */
    public function getContactAddress()
    {
        return $this->container['contactAddress'];
    }

    /**
     * Sets contactAddress
     *
     * @param string|null $contactAddress contactAddress
     *
     * @return self
     */
    public function setContactAddress($contactAddress)
    {
        $this->container['contactAddress'] = $contactAddress;

        return $this;
    }

    /**
     * Gets loginIntro
     *
     * @return string|null
     */
    public function getLoginIntro()
    {
        return $this->container['loginIntro'];
    }

    /**
     * Sets loginIntro
     *
     * @param string|null $loginIntro loginIntro
     *
     * @return self
     */
    public function setLoginIntro($loginIntro)
    {
        $this->container['loginIntro'] = $loginIntro;

        return $this;
    }

    /**
     * Gets credits
     *
     * @return float|null
     */
    public function getCredits()
    {
        return $this->container['credits'];
    }

    /**
     * Sets credits
     *
     * @param float|null $credits credits
     *
     * @return self
     */
    public function setCredits($credits)
    {
        $this->container['credits'] = $credits;

        return $this;
    }

    /**
     * Gets billingFirstname
     *
     * @return string|null
     */
    public function getBillingFirstname()
    {
        return $this->container['billingFirstname'];
    }

    /**
     * Sets billingFirstname
     *
     * @param string|null $billingFirstname billingFirstname
     *
     * @return self
     */
    public function setBillingFirstname($billingFirstname)
    {
        $this->container['billingFirstname'] = $billingFirstname;

        return $this;
    }

    /**
     * Gets billingLastname
     *
     * @return string|null
     */
    public function getBillingLastname()
    {
        return $this->container['billingLastname'];
    }

    /**
     * Sets billingLastname
     *
     * @param string|null $billingLastname billingLastname
     *
     * @return self
     */
    public function setBillingLastname($billingLastname)
    {
        $this->container['billingLastname'] = $billingLastname;

        return $this;
    }

    /**
     * Gets billingOrganisation
     *
     * @return string|null
     */
    public function getBillingOrganisation()
    {
        return $this->container['billingOrganisation'];
    }

    /**
     * Sets billingOrganisation
     *
     * @param string|null $billingOrganisation billingOrganisation
     *
     * @return self
     */
    public function setBillingOrganisation($billingOrganisation)
    {
        $this->container['billingOrganisation'] = $billingOrganisation;

        return $this;
    }

    /**
     * Gets billingAddr1
     *
     * @return string|null
     */
    public function getBillingAddr1()
    {
        return $this->container['billingAddr1'];
    }

    /**
     * Sets billingAddr1
     *
     * @param string|null $billingAddr1 billingAddr1
     *
     * @return self
     */
    public function setBillingAddr1($billingAddr1)
    {
        $this->container['billingAddr1'] = $billingAddr1;

        return $this;
    }

    /**
     * Gets billingAddr2
     *
     * @return string|null
     */
    public function getBillingAddr2()
    {
        return $this->container['billingAddr2'];
    }

    /**
     * Sets billingAddr2
     *
     * @param string|null $billingAddr2 billingAddr2
     *
     * @return self
     */
    public function setBillingAddr2($billingAddr2)
    {
        $this->container['billingAddr2'] = $billingAddr2;

        return $this;
    }

    /**
     * Gets billingZipcode
     *
     * @return string|null
     */
    public function getBillingZipcode()
    {
        return $this->container['billingZipcode'];
    }

    /**
     * Sets billingZipcode
     *
     * @param string|null $billingZipcode billingZipcode
     *
     * @return self
     */
    public function setBillingZipcode($billingZipcode)
    {
        $this->container['billingZipcode'] = $billingZipcode;

        return $this;
    }

    /**
     * Gets billingCity
     *
     * @return string|null
     */
    public function getBillingCity()
    {
        return $this->container['billingCity'];
    }

    /**
     * Sets billingCity
     *
     * @param string|null $billingCity billingCity
     *
     * @return self
     */
    public function setBillingCity($billingCity)
    {
        $this->container['billingCity'] = $billingCity;

        return $this;
    }

    /**
     * Gets billingCountry
     *
     * @return string|null
     */
    public function getBillingCountry()
    {
        return $this->container['billingCountry'];
    }

    /**
     * Sets billingCountry
     *
     * @param string|null $billingCountry billingCountry
     *
     * @return self
     */
    public function setBillingCountry($billingCountry)
    {
        $this->container['billingCountry'] = $billingCountry;

        return $this;
    }

    /**
     * Gets tvaIntra
     *
     * @return string|null
     */
    public function getTvaIntra()
    {
        return $this->container['tvaIntra'];
    }

    /**
     * Sets tvaIntra
     *
     * @param string|null $tvaIntra tvaIntra
     *
     * @return self
     */
    public function setTvaIntra($tvaIntra)
    {
        $this->container['tvaIntra'] = $tvaIntra;

        return $this;
    }

    /**
     * Gets googleApiKey
     *
     * @return string|null
     */
    public function getGoogleApiKey()
    {
        return $this->container['googleApiKey'];
    }

    /**
     * Sets googleApiKey
     *
     * @param string|null $googleApiKey googleApiKey
     *
     * @return self
     */
    public function setGoogleApiKey($googleApiKey)
    {
        $this->container['googleApiKey'] = $googleApiKey;

        return $this;
    }

    /**
     * Gets newUserRegistrationEnabled
     *
     * @return bool|null
     */
    public function getNewUserRegistrationEnabled()
    {
        return $this->container['newUserRegistrationEnabled'];
    }

    /**
     * Sets newUserRegistrationEnabled
     *
     * @param bool|null $newUserRegistrationEnabled newUserRegistrationEnabled
     *
     * @return self
     */
    public function setNewUserRegistrationEnabled($newUserRegistrationEnabled)
    {
        $this->container['newUserRegistrationEnabled'] = $newUserRegistrationEnabled;

        return $this;
    }

    /**
     * Gets newSiteCreationEnabled
     *
     * @return bool|null
     */
    public function getNewSiteCreationEnabled()
    {
        return $this->container['newSiteCreationEnabled'];
    }

    /**
     * Sets newSiteCreationEnabled
     *
     * @param bool|null $newSiteCreationEnabled newSiteCreationEnabled
     *
     * @return self
     */
    public function setNewSiteCreationEnabled($newSiteCreationEnabled)
    {
        $this->container['newSiteCreationEnabled'] = $newSiteCreationEnabled;

        return $this;
    }

    /**
     * Gets brandDomains
     *
     * @return mixed|null
     */
    public function getBrandDomains()
    {
        return $this->container['brandDomains'];
    }

    /**
     * Sets brandDomains
     *
     * @param mixed|null $brandDomains brandDomains
     *
     * @return self
     */
    public function setBrandDomains($brandDomains)
    {
        $this->container['brandDomains'] = $brandDomains;

        return $this;
    }

    /**
     * Gets changelogifyAppId
     *
     * @return string|null
     */
    public function getChangelogifyAppId()
    {
        return $this->container['changelogifyAppId'];
    }

    /**
     * Sets changelogifyAppId
     *
     * @param string|null $changelogifyAppId changelogifyAppId
     *
     * @return self
     */
    public function setChangelogifyAppId($changelogifyAppId)
    {
        $this->container['changelogifyAppId'] = $changelogifyAppId;

        return $this;
    }

    /**
     * Gets hcaptcha
     *
     * @return bool|null
     */
    public function getHcaptcha()
    {
        return $this->container['hcaptcha'];
    }

    /**
     * Sets hcaptcha
     *
     * @param bool|null $hcaptcha hcaptcha
     *
     * @return self
     */
    public function setHcaptcha($hcaptcha)
    {
        $this->container['hcaptcha'] = $hcaptcha;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset): bool
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value): void
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset): void
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    #[\ReturnTypeWillChange]
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


