<?php
/**
 * SiteJsonldTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  EmonsiteApi
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * API E-monsite
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: alpha
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.0.1-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace EmonsiteApi\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * SiteJsonldTest Class Doc Comment
 *
 * @category    Class
 * @description SiteJsonld
 * @package     EmonsiteApi
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class SiteJsonldTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "SiteJsonld"
     */
    public function testSiteJsonld()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "context"
     */
    public function testPropertyContext()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "url"
     */
    public function testPropertyUrl()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "disabled"
     */
    public function testPropertyDisabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteSuspend"
     */
    public function testPropertySiteSuspend()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteDeleted"
     */
    public function testPropertySiteDeleted()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteDeletionDt"
     */
    public function testPropertySiteDeletionDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteDeletionIp"
     */
    public function testPropertySiteDeletionIp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteDeletionReason"
     */
    public function testPropertySiteDeletionReason()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteDeletionUserId"
     */
    public function testPropertySiteDeletionUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "managerSuspend"
     */
    public function testPropertyManagerSuspend()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "reasonSuspend"
     */
    public function testPropertyReasonSuspend()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultLang"
     */
    public function testPropertyDefaultLang()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "showLayoutFlags"
     */
    public function testPropertyShowLayoutFlags()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "showI18nLinks"
     */
    public function testPropertyShowI18nLinks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "timezone"
     */
    public function testPropertyTimezone()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "brandId"
     */
    public function testPropertyBrandId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "domainId"
     */
    public function testPropertyDomainId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sitename"
     */
    public function testPropertySitename()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "host"
     */
    public function testPropertyHost()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypalId"
     */
    public function testPropertyPaypalId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypalCmd"
     */
    public function testPropertyPaypalCmd()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypalInsertcart"
     */
    public function testPropertyPaypalInsertcart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypalCurrencyCode"
     */
    public function testPropertyPaypalCurrencyCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypalUndefinedQuantity"
     */
    public function testPropertyPaypalUndefinedQuantity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "mailformat"
     */
    public function testPropertyMailformat()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "messagemoderation"
     */
    public function testPropertyMessagemoderation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "avatar"
     */
    public function testPropertyAvatar()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "avatarStorageServerId"
     */
    public function testPropertyAvatarStorageServerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adsenseCode"
     */
    public function testPropertyAdsenseCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adsenseShowTop"
     */
    public function testPropertyAdsenseShowTop()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adsenseShowCol"
     */
    public function testPropertyAdsenseShowCol()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "analyticsCode"
     */
    public function testPropertyAnalyticsCode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "analyticsMeasureId"
     */
    public function testPropertyAnalyticsMeasureId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "googleAdsId"
     */
    public function testPropertyGoogleAdsId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "googleTagManagerId"
     */
    public function testPropertyGoogleTagManagerId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blacklistedWords"
     */
    public function testPropertyBlacklistedWords()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blacklistedIp"
     */
    public function testPropertyBlacklistedIp()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "blacklistedDomains"
     */
    public function testPropertyBlacklistedDomains()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "logo"
     */
    public function testPropertyLogo()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "akismetApiKey"
     */
    public function testPropertyAkismetApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "noCaptcha"
     */
    public function testPropertyNoCaptcha()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "iconcaptcha"
     */
    public function testPropertyIconcaptcha()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "publicthemevariationpreviewId"
     */
    public function testPropertyPublicthemevariationpreviewId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customthemevariationpreviewId"
     */
    public function testPropertyCustomthemevariationpreviewId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "splashscreenActive"
     */
    public function testPropertySplashscreenActive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "splashscreenLocation"
     */
    public function testPropertySplashscreenLocation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "splashscreenTestmode"
     */
    public function testPropertySplashscreenTestmode()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoneMeta"
     */
    public function testPropertyZoneMeta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoneCss"
     */
    public function testPropertyZoneCss()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "zoneJs"
     */
    public function testPropertyZoneJs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hideDashboardWelcomeBox"
     */
    public function testPropertyHideDashboardWelcomeBox()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "dashboardMessage"
     */
    public function testPropertyDashboardMessage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "slidshowOptions"
     */
    public function testPropertySlidshowOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "favicon"
     */
    public function testPropertyFavicon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "homepageModuleId"
     */
    public function testPropertyHomepageModuleId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "previewToken"
     */
    public function testPropertyPreviewToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "searchindexDt"
     */
    public function testPropertySearchindexDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "robotsAuto"
     */
    public function testPropertyRobotsAuto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "robots"
     */
    public function testPropertyRobots()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "filesizequotaUsed"
     */
    public function testPropertyFilesizequotaUsed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "usedStorageQuota"
     */
    public function testPropertyUsedStorageQuota()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "email"
     */
    public function testPropertyEmail()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "emailSenderName"
     */
    public function testPropertyEmailSenderName()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "activity"
     */
    public function testPropertyActivity()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "themeVersion"
     */
    public function testPropertyThemeVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "shortcutIcon"
     */
    public function testPropertyShortcutIcon()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sitemapAuto"
     */
    public function testPropertySitemapAuto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "googleWebmasterMeta"
     */
    public function testPropertyGoogleWebmasterMeta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "bingWebmasterMeta"
     */
    public function testPropertyBingWebmasterMeta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "searchConsoleMeta"
     */
    public function testPropertySearchConsoleMeta()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "beginTabClosed"
     */
    public function testPropertyBeginTabClosed()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "scheme"
     */
    public function testPropertyScheme()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "googleMapsApiKey"
     */
    public function testPropertyGoogleMapsApiKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recaptcha2"
     */
    public function testPropertyRecaptcha2()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recaptcha2SiteKey"
     */
    public function testPropertyRecaptcha2SiteKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "recaptcha2SecretKey"
     */
    public function testPropertyRecaptcha2SecretKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Merchantid"
     */
    public function testPropertyPaypal2Merchantid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Merchantidinpaypal"
     */
    public function testPropertyPaypal2Merchantidinpaypal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Email"
     */
    public function testPropertyPaypal2Email()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Returnmessage"
     */
    public function testPropertyPaypal2Returnmessage()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Valid"
     */
    public function testPropertyPaypal2Valid()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "paypal2Paymentexperience"
     */
    public function testPropertyPaypal2Paymentexperience()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "socialNetworks"
     */
    public function testPropertySocialNetworks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "adsAuto"
     */
    public function testPropertyAdsAuto()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ads"
     */
    public function testPropertyAds()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "googlefont"
     */
    public function testPropertyGooglefont()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenInstagram"
     */
    public function testPropertyTokenInstagram()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "tokenInstagramExpireDt"
     */
    public function testPropertyTokenInstagramExpireDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instagramToken"
     */
    public function testPropertyInstagramToken()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instagramtokenExpirationDt"
     */
    public function testPropertyInstagramtokenExpirationDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "instagramTokenExpired"
     */
    public function testPropertyInstagramTokenExpired()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nbDaysBeforeInstagramTokenExpire"
     */
    public function testPropertyNbDaysBeforeInstagramTokenExpire()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageFolders"
     */
    public function testPropertyStorageFolders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "storageFolder"
     */
    public function testPropertyStorageFolder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "siteLangs"
     */
    public function testPropertySiteLangs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultSiteLang"
     */
    public function testPropertyDefaultSiteLang()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "activeSiteLangs"
     */
    public function testPropertyActiveSiteLangs()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "lang"
     */
    public function testPropertyLang()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customThemeVariations"
     */
    public function testPropertyCustomThemeVariations()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "customThemeVariation"
     */
    public function testPropertyCustomThemeVariation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "modules"
     */
    public function testPropertyModules()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "module"
     */
    public function testPropertyModule()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wuroEnabled"
     */
    public function testPropertyWuroEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wuroApiEndPoint"
     */
    public function testPropertyWuroApiEndPoint()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wuroAppId"
     */
    public function testPropertyWuroAppId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "wuroAppSecret"
     */
    public function testPropertyWuroAppSecret()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "captcha"
     */
    public function testPropertyCaptcha()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ecoConfig"
     */
    public function testPropertyEcoConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "configLP"
     */
    public function testPropertyConfigLP()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ecoAdvicesConfig"
     */
    public function testPropertyEcoAdvicesConfig()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ecoStoreDelivery"
     */
    public function testPropertyEcoStoreDelivery()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hcaptchaSiteKey"
     */
    public function testPropertyHcaptchaSiteKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "hcaptchaSecretKey"
     */
    public function testPropertyHcaptchaSecretKey()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ecoOrders"
     */
    public function testPropertyEcoOrders()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "ecoCollectionPoints"
     */
    public function testPropertyEcoCollectionPoints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "carriers"
     */
    public function testPropertyCarriers()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "celSoftDeletion"
     */
    public function testPropertyCelSoftDeletion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "webhooks"
     */
    public function testPropertyWebhooks()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "nbDaysSinceCreation"
     */
    public function testPropertyNbDaysSinceCreation()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "structuresPayment"
     */
    public function testPropertyStructuresPayment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "editableZonesBottomSiteBlock"
     */
    public function testPropertyEditableZonesBottomSiteBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "memberOptions"
     */
    public function testPropertyMemberOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "legal"
     */
    public function testPropertyLegal()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "inStorePickUpPoints"
     */
    public function testPropertyInStorePickUpPoints()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "structureWidgets"
     */
    public function testPropertyStructureWidgets()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "defaultMenuHWidget"
     */
    public function testPropertyDefaultMenuHWidget()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "structures"
     */
    public function testPropertyStructures()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "notFoundPageBlock"
     */
    public function testPropertyNotFoundPageBlock()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "browserExtensionEnabled"
     */
    public function testPropertyBrowserExtensionEnabled()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "edirectoryOrderOptions"
     */
    public function testPropertyEdirectoryOrderOptions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addDt"
     */
    public function testPropertyAddDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updDt"
     */
    public function testPropertyUpdDt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "createdAt"
     */
    public function testPropertyCreatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updatedAt"
     */
    public function testPropertyUpdatedAt()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "addUserId"
     */
    public function testPropertyAddUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "updUserId"
     */
    public function testPropertyUpdUserId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "versions"
     */
    public function testPropertyVersions()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "versionByLang"
     */
    public function testPropertyVersionByLang()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
